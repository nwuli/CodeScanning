{"fileName":"demo/src/main/java/jsoniter_codegen/cfg1173796797/decoder/int_array.java","version":"0.9.23","hasMethodName":["decode_-int_array-com.jsoniter.JsonIterator","decode-int_array-com.jsoniter.JsonIterator"]}
{"fileName":"demo/src/main/java/jsoniter_codegen/cfg1173796797/decoder/int_array.java","version":"0.9.23","methodName":"decode_-int_array-com.jsoniter.JsonIterator","callMethodNameReferTo":{},"num":407,"succs":[[100,1],[107,2],[3,124],[4,16,126,109,125],[128,5,9],[130,110,129,6,9],[132,7],[141,8],[149,16,56,148],[10,11],[151,11],[160,12],[16,112,13,129,161],[162,14],[15,170],[16,56,177,148],[17,178],[18,186],[19,20,114,187,129],[20,56,189,148],[194,21],[201,22],[214,23],[25,216,215,24],[223,25,56,148],[227,26],[27,239],[216,29,28,240],[247,56,29,148],[30,251],[262,31],[216,32,33,263],[33,56,270,148],[34,274],[286,35],[37,36,216,287],[37,56,148,294],[298,38],[39,309],[40,330],[41,333],[336,42],[43,339],[44,342],[345,45],[46,354],[53,89,356,355,47],[48,361],[49,362,52,346,129],[50,364],[51,377],[52,384],[385,45],[54,393],[402,55],[56,396,148],[63,58,60,61,62,59,57,65],[58],[],[66,67,60],[],[91,71],[64],[97,96],[],[30,53,29,41,42,37,16,25,45,17,1,34,55,2,40,38,33,0,44,21,22,39,43,20,54,26],[69,68],[],[],[],[71],[],[70,71],[71,72],[73,71],[71,72],[75,71],[76,74,71],[77,71],[71,78],[79,71],[80,71],[81,71],[82,71],[83,71],[71,84],[85,71],[86,71],[87,71],[88,71,90],[89,71],[92,93],[95,94],[],[],[],[99,98],[],[],[],[101,70,102],[103,104],[],[105,106],[],[],[],[115],[72],[108],[3,108,109],[75,3,108,110,5],[3,111,110,5],[112,111],[111,113],[116,117,108],[108],[118,119,72],[120,121],[],[122,123],[],[],[],[4],[],[127],[],[7,6,8],[],[131],[],[135,133,134,73],[137,136],[],[140],[139,138],[],[],[],[],[74,143,142],[145,144],[],[146,147],[],[],[],[],[150],[],[111,152,153],[],[75,154,155],[156,157],[],[158,159],[],[],[],[14,15,13],[131],[76,165,164,163],[166,167],[],[140],[169,168],[],[],[],[77,172,171],[173,174],[],[176,175],[],[],[],[150],[152,113,179],[181,180,78],[183,182],[],[185,184],[],[],[],[19],[188],[],[191,190],[],[],[193],[],[195,79,196],[197,198],[],[199,200],[],[],[],[208],[80],[202],[202,203],[202,204],[205,202],[202,206],[202,210,209],[202],[211,212],[],[213,80],[],[24],[217,81,218],[],[220,219],[],[221,222],[],[],[],[225,226,224],[],[],[203],[233],[82],[228],[229,228],[230,228],[231,228],[228,235,234],[228],[236,237],[],[82,238],[],[28],[241,83,242],[243,244],[],[246,245],[],[],[],[249,250,248],[],[],[229,204],[256],[84],[252],[253,252],[254,252],[257,258,252],[252],[259,260],[],[84,261],[],[32],[264,85,265],[267,266],[],[269,268],[],[],[],[271,273,272],[],[],[205,253,230],[278],[86],[275],[276,275],[280,279,275],[275],[281,282],[],[283,284],[],[285,86],[],[36],[289,87,288],[291,290],[],[292,293],[],[],[],[297,295,296],[],[],[254,231,206,276],[301],[88],[299],[303,302,299],[299],[305,304],[],[307,306],[],[88,308],[],[324],[311,207],[],[310,232],[255,312],[313,277],[300,314],[322,315],[48,322,315,316],[48,322,317,315],[48,322,315,318],[48,321,322,315,319],[365,366],[90,320],[322],[311,326,325],[311],[328,327],[],[],[140],[331,152,207],[332,310],[193],[152,334,232],[335,312],[140],[337,255,152],[313,338],[140],[277,152,340],[341,314],[140],[152,300,343],[315,344],[140],[351],[348,347],[],[346,90,347],[348],[349,348],[352,347,353],[347],[140],[52,47],[357,358],[],[359,360],[],[],[],[51,50,49],[363,316],[],[367],[317],[365],[368,365,369],[365],[371,370],[],[],[373,374,375],[317,376],[],[140],[],[380,378,382,381,318,366,379],[],[],[193],[193],[319,383],[],[321,152,320],[386,152,387],[322,388],[391,390],[348,389],[],[],[90,392],[],[397],[349],[394],[395,394],[399,398,394],[394],[401,400],[],[],[405,350,323,395,403,406,404],[],[],[193],[193]],"attribute":["Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","While Stmt ","Method Call Expr ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","PUBLIC","STATIC","Class Or Interface Type Object ","Simple Name decode_ ","Parameter com.jsoniter.JsonIterator iter ","Throws","Class Or Interface Type IOException ","java.io.IOException","Block Stmt ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Class Or Interface Type jsoniter ","Simple Name JsonIterator ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Method Call Expr ","Field Access Expr ","Simple Name resetExistingObject ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Marker Annotation Expr @Override ","Variable Declarator byte nextToken = ","Primitive Type byte ","Method Call Expr ","Field Access Expr ","Simple Name readByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","NOT_EQUALS","Char Literal Expr '{' ","'['","Block Stmt ","EQUALS","Char Literal Expr 'n' ","'n'","Method Call Expr ","Field Access Expr ","Simple Name skipFixedBytes ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","IntegerLiteralExpr","Method Call Expr ","Field Access Expr ","Simple Name resetExistingObject ","Return Stmt ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","ReturnStmt","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr 'n' ","Method Call Expr ","Field Access Expr ","Simple Name skipFixedBytes ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Field Access Expr ","Simple Name resetExistingObject ","Return Stmt ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Null Literal Expr ","Expression Stmt ","Method Call Expr ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr ''' ","']'","Array Creation Expr int Array Creation Level Not Empty ","Primitive Type int ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Method Call Expr ","Field Access Expr ","Simple Name unreadByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name a1 ","Name Expr a1 ","Name Expr a1 ","Name Expr a1 ","Name Expr a1 ","Name Expr a1 ","Variable Declarator int a1 = ","Primitive Type int ","Cast Expr ","Primitive Type int ","Method Call Expr ","Simple Name readInt ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Field Access Expr ","Simple Name nextTokenIsComma ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Array Creation Expr int Array Creation Level Not Empty Array Initializer Expr ","Primitive Type int ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Variable Declaration Expr ","Simple Name a2 ","Name Expr a2 ","Name Expr a2 ","Name Expr a2 ","Name Expr a2 ","Variable Declarator int a2 = ","Name Expr com ","Cast Expr ","Primitive Type int ","Method Call Expr ","Simple Name readInt ","Block Stmt ","Method Call Expr ","Field Access Expr ","Simple Name nextTokenIsComma ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Array Creation Expr int Array Creation Level Not Empty Array Initializer Expr ","Primitive Type int ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Variable Declaration Expr ","Simple Name a3 ","Name Expr a3 ","Name Expr a3 ","Name Expr a3 ","Variable Declarator int a3 = ","Primitive Type int ","Cast Expr ","Primitive Type int ","Method Call Expr ","Simple Name readInt ","Block Stmt ","Method Call Expr ","Field Access Expr ","Simple Name nextTokenIsComma ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Array Creation Expr int Array Creation Level Not Empty Array Initializer Expr ","Primitive Type int ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Variable Declaration Expr ","Simple Name a4 ","Name Expr a4 ","Name Expr a4 ","Variable Declarator int a4 = ","Primitive Type int ","Cast Expr ","Primitive Type int ","Cast Expr ","Primitive Type int ","Method Call Expr ","Simple Name readInt ","Block Stmt ","Method Call Expr ","Field Access Expr ","Simple Name nextTokenIsComma ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Array Creation Expr int Array Creation Level Not Empty Array Initializer Expr ","Primitive Type int ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Variable Declaration Expr ","Simple Name a5 ","Name Expr a5 ","Variable Declarator int a5 = ","Primitive Type int ","Cast Expr ","Primitive Type int ","Cast Expr ","Primitive Type int ","Method Call Expr ","Simple Name readInt ","Variable Declaration Expr ","Name Expr arr ","Simple Name arr ","Name Expr arr ","Name Expr arr ","Name Expr arr ","Name Expr arr ","Name Expr arr ","Name Expr arr ","Name Expr arr ","Name Expr arr ","Name Expr obj ","Name Expr newArr ","Name Expr arr ","Name Expr arr ","Variable Declarator int[] arr = ","Array Type 1 ","Array Creation Expr int Array Creation Level Not Empty ","Primitive Type int ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Array Access Expr 0 ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Array Access Expr 1 ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Array Access Expr 2 ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Array Access Expr 3 ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Array Access Expr 4 ","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Note Zero  ","Block Stmt ","Field Access Expr ","Parameter String tagPrefix ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Field Access Expr ","Simple Name length ","Variable Declaration Expr ","Simple Name newArr ","Name Expr newArr ","Variable Declarator int[] newArr = ","Array Type 1 ","Array Creation Expr int Array Creation Level Not Empty ","Primitive Type int ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Simple Name length ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Assign Expr ASSIGN ","Assign Expr ASSIGN ","Array Access Expr i++ ","Cast Expr ","Unary Expr ++ ","POSTFIX_INCREMENT","Primitive Type int ","Method Call Expr ","Simple Name readInt ","Variable Declaration Expr ","Simple Name result ","Name Expr result ","Name Expr result ","Variable Declarator int[] result = ","Array Type 1 ","Array Creation Expr int Array Creation Level Not Empty ","Primitive Type int ","Array Creation Level Dimension NotEmpty ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  "]}
{"fileName":"demo/src/main/java/jsoniter_codegen/cfg1173796797/decoder/int_array.java","version":"0.9.23","methodName":"decode-int_array-com.jsoniter.JsonIterator","callMethodNameReferTo":{},"num":431,"succs":[[3,4,2,6,8,5,1],[86],[10,3,11],[],[16,15],[7],[21,22],[],[9],[0,25,26],[13,12],[],[],[],[15,28],[],[17,18],[19,20],[],[],[],[23,24],[],[],[],[],[29,27,14],[],[],[90,86,88,89,5,87,1,91],[125,31],[132,32],[33,149],[46,34,151,150,134],[153,35,39],[155,135,154,36,39],[157,37],[166,38],[173,46,29,25],[40,41],[175,41],[184,42],[137,46,43,154,185],[186,44],[45,194],[46,29,201,25],[47,202],[48,210],[49,50,139,211,154],[50,29,213,25],[218,51],[225,52],[238,53],[55,240,239,54],[247,55,29,25],[251,56],[57,263],[240,59,58,264],[271,29,59,25],[60,275],[286,61],[240,62,63,287],[63,29,294,25],[64,298],[310,65],[67,66,240,311],[67,29,25,318],[322,68],[69,333],[70,354],[71,357],[360,72],[73,363],[74,366],[75,369],[76,378],[83,114,380,379,77],[78,385],[79,386,82,370,154],[80,388],[81,401],[82,408],[409,75],[84,417],[426,85],[29,420,25],[],[92,88,93],[],[116,28],[122,121],[60,83,59,71,72,67,46,55,75,47,31,64,85,32,70,68,63,30,74,51,52,50,69,73,84,56],[95,94],[],[],[],[28],[96,28],[28,97],[98,28],[28,97],[100,28],[101,99,28],[102,28],[28,103],[104,28],[105,28],[28,106],[107,28],[108,28],[28,109],[110,28],[111,28],[112,28],[113,28,115],[114,28],[117,118],[120,119],[],[],[],[124,123],[],[],[],[126,96,127],[128,129],[],[130,131],[],[],[],[140],[97],[133],[33,133,134],[100,33,133,135,35],[33,136,135,35],[137,136],[136,138],[141,142,133],[133],[143,144,97],[145,146],[],[147,148],[],[],[],[34],[],[152],[],[37,36,38],[],[156],[],[160,158,159,98],[162,161],[],[165],[164,163],[],[],[],[],[99,168,167],[170,169],[],[171,172],[],[],[],[174],[],[176,136,177],[],[100,178,179],[180,181],[],[182,183],[],[],[],[44,45,43],[156],[101,189,188,187],[190,191],[],[165],[193,192],[],[],[],[102,196,195],[197,198],[],[200,199],[],[],[],[174],[176,138,203],[205,204,103],[207,206],[],[208,209],[],[],[],[49],[212],[],[215,214],[],[],[217],[],[219,104,220],[221,222],[],[223,224],[],[],[],[232],[105],[226],[226,227],[226,228],[229,226],[226,230],[226,234,233],[226],[235,236],[],[237,105],[],[54],[241,106,242],[],[244,243],[],[245,246],[],[],[],[249,250,248],[],[],[227],[257],[107],[252],[253,252],[254,252],[255,252],[252,259,258],[252],[260,261],[],[107,262],[],[58],[265,108,266],[267,268],[],[270,269],[],[],[],[273,274,272],[],[],[253,228],[280],[109],[276],[277,276],[278,276],[281,282,276],[276],[283,284],[],[109,285],[],[62],[288,110,289],[291,290],[],[293,292],[],[],[],[295,297,296],[],[],[229,277,254],[302],[111],[299],[300,299],[304,303,299],[299],[305,306],[],[307,308],[],[309,111],[],[66],[313,112,312],[315,314],[],[316,317],[],[],[],[321,319,320],[],[],[278,255,230,300],[325],[113],[323],[327,326,323],[323],[329,328],[],[331,330],[],[113,332],[],[348],[335,231],[],[334,256],[336,279],[337,301],[324,338],[346,339],[78,346,339,340],[78,346,341,339],[78,346,339,342],[78,345,346,339,343],[389,390],[115,344],[346],[335,350,349],[335],[352,351],[],[],[165],[355,176,231],[356,334],[217],[176,358,256],[359,336],[165],[361,176,279],[337,362],[165],[301,176,364],[365,338],[165],[176,324,367],[339,368],[165],[375],[372,371],[],[370,115,371],[372],[373,372],[376,377,371],[371],[165],[82,77],[381,382],[],[383,384],[],[],[],[81,80,79],[387,340],[],[391],[341],[389],[392,389,393],[389],[395,394],[],[],[397,398,399],[341,400],[],[165],[],[404,402,406,405,342,390,403],[],[],[217],[217],[343,407],[],[345,176,344],[410,176,411],[346,412],[415,414],[372,413],[],[],[115,416],[],[421],[373],[418],[419,418],[423,422,418],[418],[425,424],[],[],[429,374,419,347,427,430,428],[],[],[217],[217]],"attribute":["Method Declaration Throws ","PUBLIC","Class Or Interface Type Object ","Simple Name decode ","Parameter com.jsoniter.JsonIterator iter ","Throws","Class Or Interface Type IOException ","java.io.IOException","Block Stmt ","Return Stmt ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Void Type ","Simple Name iter ","Class Or Interface Type JsonIterator ","Class Or Interface Type jsoniter ","Simple Name JsonIterator ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","ReturnStmt","Method Call Expr ","Simple Name decode_ ","Simple Name iter ","Method Declaration Throws ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Expression Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","While Stmt ","Method Call Expr ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","STATIC","Class Or Interface Type Object ","Simple Name decode_ ","Parameter com.jsoniter.JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Class Or Interface Type jsoniter ","Simple Name JsonIterator ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Method Call Expr ","Field Access Expr ","Simple Name resetExistingObject ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Marker Annotation Expr @Override ","Variable Declarator byte nextToken = ","Primitive Type byte ","Method Call Expr ","Field Access Expr ","Simple Name readByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","NOT_EQUALS","Char Literal Expr '{' ","'['","Block Stmt ","EQUALS","Char Literal Expr 'n' ","'n'","Method Call Expr ","Field Access Expr ","Simple Name skipFixedBytes ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","IntegerLiteralExpr","Method Call Expr ","Field Access Expr ","Simple Name resetExistingObject ","Return Stmt ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr 'n' ","Method Call Expr ","Field Access Expr ","Simple Name skipFixedBytes ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Field Access Expr ","Simple Name resetExistingObject ","Return Stmt ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Null Literal Expr ","Expression Stmt ","Method Call Expr ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr ''' ","']'","Array Creation Expr int Array Creation Level Not Empty ","Primitive Type int ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Method Call Expr ","Field Access Expr ","Simple Name unreadByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name a1 ","Name Expr a1 ","Name Expr a1 ","Name Expr a1 ","Name Expr a1 ","Name Expr a1 ","Variable Declarator int a1 = ","Primitive Type int ","Cast Expr ","Primitive Type int ","Method Call Expr ","Simple Name readInt ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Field Access Expr ","Simple Name nextTokenIsComma ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Array Creation Expr int Array Creation Level Not Empty Array Initializer Expr ","Primitive Type int ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Variable Declaration Expr ","Simple Name a2 ","Name Expr a2 ","Name Expr a2 ","Name Expr a2 ","Name Expr a2 ","Variable Declarator int a2 = ","Name Expr com ","Cast Expr ","Primitive Type int ","Method Call Expr ","Simple Name readInt ","Block Stmt ","Method Call Expr ","Field Access Expr ","Simple Name nextTokenIsComma ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Array Creation Expr int Array Creation Level Not Empty Array Initializer Expr ","Primitive Type int ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Variable Declaration Expr ","Simple Name a3 ","Name Expr a3 ","Name Expr a3 ","Name Expr a3 ","Variable Declarator int a3 = ","Primitive Type int ","Cast Expr ","Primitive Type int ","Method Call Expr ","Simple Name readInt ","Block Stmt ","Method Call Expr ","Field Access Expr ","Simple Name nextTokenIsComma ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Array Creation Expr int Array Creation Level Not Empty Array Initializer Expr ","Primitive Type int ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Variable Declaration Expr ","Simple Name a4 ","Name Expr a4 ","Name Expr a4 ","Variable Declarator int a4 = ","Primitive Type int ","Cast Expr ","Primitive Type int ","Cast Expr ","Primitive Type int ","Method Call Expr ","Simple Name readInt ","Block Stmt ","Method Call Expr ","Field Access Expr ","Simple Name nextTokenIsComma ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Array Creation Expr int Array Creation Level Not Empty Array Initializer Expr ","Primitive Type int ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Variable Declaration Expr ","Simple Name a5 ","Name Expr a5 ","Variable Declarator int a5 = ","Primitive Type int ","Cast Expr ","Primitive Type int ","Cast Expr ","Primitive Type int ","Method Call Expr ","Simple Name readInt ","Variable Declaration Expr ","Name Expr arr ","Simple Name arr ","Name Expr arr ","Name Expr arr ","Name Expr arr ","Name Expr arr ","Name Expr arr ","Name Expr arr ","Name Expr arr ","Name Expr arr ","Name Expr obj ","Name Expr newArr ","Name Expr arr ","Name Expr arr ","Variable Declarator int[] arr = ","Array Type 1 ","Array Creation Expr int Array Creation Level Not Empty ","Primitive Type int ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Array Access Expr 0 ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Array Access Expr 1 ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Array Access Expr 2 ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Array Access Expr 3 ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Array Access Expr 4 ","Integer Literal Expr Note Zero  ","Variable Declaration Expr ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Note Zero  ","Block Stmt ","Field Access Expr ","Parameter String tagPrefix ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Field Access Expr ","Simple Name length ","Variable Declaration Expr ","Simple Name newArr ","Name Expr newArr ","Variable Declarator int[] newArr = ","Array Type 1 ","Array Creation Expr int Array Creation Level Not Empty ","Primitive Type int ","Array Creation Level Dimension NotEmpty ","Binary Expr MULTIPLY ","Field Access Expr ","MULTIPLY","Integer Literal Expr Note Zero  ","Simple Name length ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Assign Expr ASSIGN ","Assign Expr ASSIGN ","Array Access Expr i++ ","Cast Expr ","Unary Expr ++ ","POSTFIX_INCREMENT","Primitive Type int ","Method Call Expr ","Simple Name readInt ","Variable Declaration Expr ","Simple Name result ","Name Expr result ","Name Expr result ","Variable Declarator int[] result = ","Array Type 1 ","Array Creation Expr int Array Creation Level Not Empty ","Primitive Type int ","Array Creation Level Dimension NotEmpty ","Method Call Expr ","Name Expr System ","Simple Name arraycopy ","Integer Literal Expr Zero  ","Integer Literal Expr Zero  "]}
