{"fileName":"src/main/java/com/jsoniter/MapKeyDecoders.java","version":"0.9.23","hasMethodName":["registerOrGetExisting-MapKeyDecoders-Type","createMapKeyDecoder-MapKeyDecoders-Type","decode-MapKeyDecoders.StringKeyDecoder-JsonIterator","decode-MapKeyDecoders.EnumKeyDecoder-JsonIterator","decode-MapKeyDecoders.NumberKeyDecoder-JsonIterator"]}
{"fileName":"src/main/java/com/jsoniter/MapKeyDecoders.java","version":"0.9.23","methodName":"registerOrGetExisting-MapKeyDecoders-Type","callMethodNameReferTo":{"51":"src/main/java/com/jsoniter/spi/JsoniterSpi.java?addNewMapDecoder-JsoniterSpi-String-Decoder","38":"src/main/java/com/jsoniter/spi/JsoniterSpi.java?getMapKeyDecoder-JsoniterSpi-String","26":"src/main/java/com/jsoniter/spi/JsoniterSpi.java?getMapKeyDecoderCacheKey-JsoniterSpi-Type"},"num":119,"succs":[[19,1],[28,2],[3,40],[31,4,42,5,41],[32,8,44,5],[6,45],[51,7],[35,44,8],[12,11,10,13,9,14],[10],[],[12],[],[18,16],[6,7,0,2,1,5],[16],[],[15,49,16],[],[24],[15,21],[],[20],[20,22],[20,26,25],[20],[15,27,21],[],[36],[22,30],[],[29],[31,3,29],[32,29,17],[33],[33,34],[29,38,37],[29],[39,22,30],[],[4],[43],[],[],[],[46,33,47],[],[50,17,48],[],[],[68,10,69,65,67,66],[52,34,23,53],[],[],[77,55],[70,57,56,79,78],[81,50,57,44],[83,58],[60,86,59,84,85],[50,60,94,44],[61,98],[109,62],[64,101,63,110,42],[64,50,44,111],[113],[10],[67],[],[49,76],[64,54,60,57,61],[49],[49,70],[49,71],[49,72,58],[49,73],[49,74],[],[56],[80],[],[],[82],[],[59],[88,71,87],[],[91,90],[89],[],[],[92],[],[72,93],[],[96,95],[],[97,73],[],[103],[100,74],[],[99],[101,99,62],[104,105,99],[99],[107,74,106],[100,108],[],[],[63],[43],[102,112],[],[115,114],[],[117,116,75],[118],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration ","PUBLIC","STATIC","Class Or Interface Type Decoder ","Simple Name registerOrGetExisting ","Parameter Type mapKeyType ","Block Stmt ","Name Expr mapKeyType ","Simple Name mapKeyType ","Name Expr mapKeyType ","Class Or Interface Type Type ","Variable Declaration Expr ","Simple Name cacheKey ","Name Expr JsoniterSpi ","Name Expr cacheKey ","Name Expr cacheKey ","Variable Declarator String cacheKey = ","Name Expr mapKey ","Method Call Expr ","Simple Name getMapKeyDecoderCacheKey ","Variable Declaration Expr ","Simple Name mapKeyDecoder ","Name Expr JsoniterSpi ","Name Expr mapKeyDecoder ","Name Expr mapKeyDecoder ","Name Expr mapKeyDecoder ","Name Expr mapKeyDecoder ","Name Expr mapKeyDecoder ","Variable Declarator Decoder mapKeyDecoder = ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name getMapKeyDecoder ","Block Stmt ","Null Literal Expr ","NOT_EQUALS","NullLiteralExpr","ReturnStmt","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name createMapKeyDecoder ","Simple Name mapKeyType ","Method Declaration ","Method Call Expr ","Name Expr JsoniterSpi ","Method Call Expr ","If Stmt ","Field Access Expr ","Return Stmt ","If Stmt ","Binary Expr AND ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Variable Declaration Expr ","PRIVATE","Simple Name println ","Simple Name createMapKeyDecoder ","Parameter Type mapKeyType ","Block Stmt ","Name Expr mapKeyType ","Field Access Expr ","Name Expr mapKeyType ","Name Expr mapKeyType ","Name Expr mapKeyType ","Name Expr mapKeyType ","Class Or Interface Type Type ","Block Stmt ","Field Access Expr ","EQUALS","Simple Name append ","Object Creation Expr StringKeyDecoder Optional.empty Optional.empty ","Class Or Interface Type StringKeyDecoder ","Block Stmt ","Instance Of Expr ","AND","Method Call Expr ","InstanceOfExpr","Name Expr entry ","Class","Enclosed Expr ","Simple Name isEnum ","Cast Expr ","Class Or Interface Type Class ","Object Creation Expr EnumKeyDecoder Optional.empty Optional.empty ","Class Or Interface Type EnumKeyDecoder ","Cast Expr ","Class Or Interface Type Class ","Variable Declaration Expr ","Simple Name decoder ","Name Expr CodegenImplNative ","Name Expr decoder ","Name Expr decoder ","Variable Declarator Decoder decoder = ","Name Expr ctClass ","Method Call Expr ","Field Access Expr ","Simple Name get ","Parameter String cacheKey ","Block Stmt ","Null Literal Expr ","Object Creation Expr NumberKeyDecoder Optional.empty Optional.empty ","Class Or Interface Type NumberKeyDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","StringLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/MapKeyDecoders.java","version":"0.9.23","methodName":"createMapKeyDecoder-MapKeyDecoders-Type","callMethodNameReferTo":{},"num":71,"succs":[[26,1],[18,3,2,28,27],[31,11,3,30],[33,4],[6,36,5,34,35],[11,6,44,30],[7,48],[59,8],[10,51,9,61,60],[10,11,30,63],[65],[16,13,12,17,15,14],[13],[],[15],[],[19,25],[10,0,6,3,7],[19],[],[19,18],[19,20],[19,21,4],[19,22],[19,23],[],[2],[29],[],[],[],[32],[],[5],[38,20,37],[],[41,40],[39],[],[],[42],[],[21,43],[],[46,45],[],[47,22],[],[53],[50,23],[],[49],[51,49,8],[54,55,49],[49],[57,23,56],[50,58],[],[],[9],[],[62],[],[52,64],[],[67,66],[],[69,68,24],[70],[],[]],"attribute":["If Stmt ","Field Access Expr ","Return Stmt ","If Stmt ","Binary Expr AND ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Variable Declaration Expr ","Method Declaration ","PRIVATE","STATIC","Simple Name println ","Simple Name createMapKeyDecoder ","Parameter Type mapKeyType ","Block Stmt ","Name Expr mapKeyType ","Simple Name mapKeyType ","Field Access Expr ","Name Expr mapKeyType ","Name Expr mapKeyType ","Name Expr mapKeyType ","Name Expr mapKeyType ","Class Or Interface Type Type ","Block Stmt ","Field Access Expr ","EQUALS","Simple Name append ","ReturnStmt","Object Creation Expr StringKeyDecoder Optional.empty Optional.empty ","Class Or Interface Type StringKeyDecoder ","Block Stmt ","Instance Of Expr ","AND","Method Call Expr ","InstanceOfExpr","Name Expr entry ","Class","Enclosed Expr ","Simple Name isEnum ","Cast Expr ","Class Or Interface Type Class ","Object Creation Expr EnumKeyDecoder Optional.empty Optional.empty ","Class Or Interface Type EnumKeyDecoder ","Cast Expr ","Class Or Interface Type Class ","Variable Declaration Expr ","Simple Name decoder ","Name Expr CodegenImplNative ","Name Expr decoder ","Name Expr decoder ","Variable Declarator Decoder decoder = ","Name Expr ctClass ","Method Call Expr ","Field Access Expr ","Simple Name get ","Parameter String cacheKey ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","Object Creation Expr NumberKeyDecoder Optional.empty Optional.empty ","Class Or Interface Type NumberKeyDecoder ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","StringLiteralExpr"]}
{"fileName":"src/main/java/com/jsoniter/MapKeyDecoders.java","version":"0.9.23","methodName":"decode-MapKeyDecoders.StringKeyDecoder-JsonIterator","callMethodNameReferTo":{},"num":17,"succs":[[3,5,7,9,1,4,6,2],[],[],[4],[],[13,12],[8],[],[],[10],[15,14,0],[12],[],[],[],[11,16],[]],"attribute":["For Stmt ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Object ","Simple Name decode ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Assign Expr ASSIGN ","Array Creation Level Dimension NotEmpty ","Simple Name iter ","Class Or Interface Type JsonIterator ","ReturnStmt","Simple Name getParameterTypes ","Simple Name readString "]}
{"fileName":"src/main/java/com/jsoniter/MapKeyDecoders.java","version":"0.9.23","methodName":"decode-MapKeyDecoders.EnumKeyDecoder-JsonIterator","callMethodNameReferTo":{},"num":18,"succs":[[1,9,5,4,7,6,2,3],[],[],[4],[],[12,13],[8],[],[],[10],[15,0,14],[12],[],[],[],[16,11,17],[],[]],"attribute":["Method Declaration Throws ","Marker Annotation Expr @Override ","PUBLIC","Method Call Expr ","Simple Name decode ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Expression Stmt ","Name Expr iter ","Simple Name iter ","Class Or Interface Type JsonIterator ","ReturnStmt","Method Call Expr ","Primitive Type byte ","Name Expr enumClass "]}
{"fileName":"src/main/java/com/jsoniter/MapKeyDecoders.java","version":"0.9.23","methodName":"decode-MapKeyDecoders.NumberKeyDecoder-JsonIterator","callMethodNameReferTo":{"48":"src/main/java/com/jsoniter/IterImpl.java?nextToken-IterImpl-JsonIterator","26":"src/main/java/com/jsoniter/IterImpl.java?nextToken-IterImpl-JsonIterator","43":"src/main/java/com/jsoniter/spi/Decoder.java?decode-Decoder-JsonIterator"},"num":68,"succs":[[1,25],[26,2,3,27,28],[32,3],[37,4],[5,47],[7,6,49,48,27],[7,52],[8,56,40],[15,9,13,17,14,12,10,11],[],[],[12],[],[19,24],[16],[],[],[7,3,0,4],[19],[],[1,19,18],[45,19,20],[19,21],[22,19,5],[],[2],[29,18,30],[],[31],[],[],[],[33,34,20,35],[],[36],[36],[],[41],[21,39],[],[38],[42,38,43],[38],[44,21,39,46],[],[],[58,60,61,57,62,59,14,10],[6],[22,51,50],[31],[],[],[54,23,55,53],[],[36],[36],[],[],[59],[],[65,45],[],[63],[66,56,46],[45],[],[64,67],[]],"attribute":["If Stmt ","Binary Expr NOT_EQUALS ","Throw Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Throw Stmt ","Method Call Expr ","Method Declaration Throws ","Marker Annotation Expr @Override ","PUBLIC","Name Expr String ","Simple Name decode ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Simple Name wrap ","Name Expr iter ","Simple Name data ","Name Expr iter ","Class Or Interface Type JsonIterator ","Block Stmt ","Method Call Expr ","NOT_EQUALS","Char Literal Expr ''' ","Name Expr IterImpl ","Simple Name nextToken ","'''","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Return Stmt ","Name Expr Any ","Name Expr decoder ","Name Expr key ","Variable Declarator Object key = ","Class Or Interface Type Object ","Method Call Expr ","Simple Name decode ","Simple Name iter ","For Stmt ","Block Stmt ","Method Call Expr ","Name Expr obj ","Simple Name notFirst ","Simple Name nextToken ","Method Call Expr ","Simple Name reportError ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","ReturnStmt","Marker Annotation Expr @Override ","Class Or Interface Type Object ","Simple Name decode ","Parameter JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Assign Expr ASSIGN ","Array Creation Level Dimension NotEmpty ","Class Or Interface Type JsonIterator ","Simple Name getParameterTypes ","Simple Name readString "]}
