{"fileName":"src/main/java/com/jsoniter/ReflectionDecoderFactory.java","version":"0.9.23","hasMethodName":["create-ReflectionDecoderFactory-ClassInfo"]}
{"fileName":"src/main/java/com/jsoniter/ReflectionDecoderFactory.java","version":"0.9.23","methodName":"create-ReflectionDecoderFactory-ClassInfo","callMethodNameReferTo":{},"num":74,"succs":[[27,1],[41,2],[3,49],[4,50,29,5],[52,15,51,5],[6,54],[7,31,56,8,55],[15,8,58,51],[9,60],[11,33,62,61,10],[11,64,15,51],[66,12],[14,67,13,35],[14,15,68,51],[70,15,51],[17,20,19,16,21,18],[17],[],[19],[],[23,26],[11,14,8,2,0,5,1],[23],[],[23,22],[23,24],[],[37],[22],[28],[28,29,3],[28,30],[6,31,28],[28,32],[9,28,33],[28,34],[28,12,35],[28,39,38],[28],[22,40],[],[45],[24],[42],[42,43],[47,42,46],[42],[48,24],[],[4],[],[],[53,30],[],[7],[57],[],[],[43,59,32],[],[10],[63],[],[],[65,34,44],[],[13],[],[69,36],[],[71,72],[73,25],[],[]],"attribute":["Expression Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Return Stmt ","Method Declaration ","PUBLIC","STATIC","Class Or Interface Type Encoder ","Name Expr stream ","Parameter ClassInfo classAndArgs ","Block Stmt ","Name Expr classAndArgs ","Simple Name classAndArgs ","Name Expr classAndArgs ","Name Expr classAndArgs ","Class Or Interface Type ClassInfo ","Method Call Expr ","Simple Name clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Variable Declarator Class clazz = ","Super Expr ","Field Access Expr ","Simple Name clazz ","Expression Stmt ","Simple Name typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Variable Declarator Type[] typeArgs = ","Simple Name append ","Field Access Expr ","Simple Name typeArgs ","Block Stmt ","Class Or Interface Type Decoder ","ReturnStmt","Object Creation Expr ReflectionArrayDecoder Optional.empty Optional.empty ","Class Or Interface Type ReflectionArrayDecoder ","Block Stmt ","Class Expr Collection.class ","Simple Name isAssignableFrom ","Variable Declaration Expr ","Object Creation Expr ReflectionCollectionDecoder Optional.empty Optional.empty ","Class Or Interface Type ReflectionCollectionDecoder ","Block Stmt ","Name Expr valueType ","Simple Name isAssignableFrom ","Class Or Interface Type Map ","Object Creation Expr ReflectionMapDecoder Optional.empty Optional.empty ","Class Or Interface Type ReflectionMapDecoder ","Block Stmt ","Class Or Interface Type Object ","Object Creation Expr ReflectionEnumDecoder Optional.empty Optional.empty ","Class Or Interface Type ReflectionEnumDecoder ","Method Call Expr ","Object Creation Expr ReflectionObjectDecoder Optional.empty Optional.empty ","Simple Name create ","Class Or Interface Type ReflectionObjectDecoder "]}
