{"fileName":"demo/src/main/java/jsoniter_codegen/cfg1173796797/decoder/com/jsoniter/demo/User.java","version":"0.9.22","hasMethodName":["decode_-User-com.jsoniter.JsonIterator","decode-User-com.jsoniter.JsonIterator"]}
{"fileName":"demo/src/main/java/jsoniter_codegen/cfg1173796797/decoder/com/jsoniter/demo/User.java","version":"0.9.22","methodName":"decode_-User-com.jsoniter.JsonIterator","callMethodNameReferTo":{},"num":370,"succs":[[100,1],[117,2],[3,137],[4,139,14,138,119],[141,8,5],[120,143,142,6,8],[145,7],[155,59,154,14],[9,10],[157,10],[166,11],[122,12,142,14,167],[168,13],[176,59,154,14],[177,15],[185,27,16],[17,27,124,186,138],[18,20,188],[189,20,125,19,142],[29,59,154,191],[22,21],[22,205],[213,25,23],[127,25,24,214,142],[59,29,215,154],[26],[229,29],[28],[236,29],[30,243],[250,31],[257,32],[265,33],[47,34,39,35,43],[83,47,321,39,35,43,322],[37,38,36,273],[274,275],[38,276],[287],[42,273,40,41],[275,288],[42,289],[287],[273,44,45,46],[298,275],[46,299],[287],[48,49,273,50],[308,275],[309,50],[287],[52,327],[330,53,89,33,329],[335,54],[358,55],[361,56],[364,57],[367,58],[341,59,154],[66,61,64,63,65,60,62,68],[61],[],[69,63,70],[],[90,74],[67],[96,95],[],[56,58,29,32,0,54,14,99,30,53,1,15,31,57,55,2],[72,71],[],[],[],[74],[],[73,74],[74,75],[74,75],[77,76,74],[78,74],[79,74],[79,74,80],[79,81,74],[89,74,82],[83,74],[74,84],[74,85],[74,86],[74,87],[88,74],[91,92],[94,93],[],[],[],[98,97],[],[],[],[272,52],[108],[103,105,73],[101],[102,101],[101],[104,101],[101],[106,101],[109,110,101],[101],[73,112,111],[114,113],[],[115,116],[],[],[],[128],[75],[118],[3,118,119],[77,3,118,120,5],[3,121,120,5],[122,79,121],[127,123],[123,124,16],[18,123,125,16,80],[18,125,16,126],[129,130,118],[118],[131,132,75],[133,134],[],[135,136],[],[],[],[4],[],[140],[],[7,6],[],[144],[],[148,146,147,76],[150,149],[],[153],[152,151],[],[],[],[],[],[156],[],[158,121,159],[],[77,160,161],[162,163],[],[164,165],[],[],[],[13,12],[144],[78,171,170,169],[172,173],[],[153],[175,174],[],[],[],[156],[178,158,123],[180,79,179],[182,181],[],[183,184],[],[],[],[17],[187],[],[19],[190],[],[192],[195,193,194],[102,196,142],[197],[103,198],[156],[],[200,199],[201,202],[],[204,203],[],[],[],[158,126,206],[208,207,80],[210,209],[],[211,212],[],[],[],[24],[190],[216],[219,217,218],[104,220,142],[221],[105,222],[156],[],[223,224],[226,225],[],[227,228],[],[],[],[230,81,231],[232,233],[],[235,234],[],[],[],[238,237,82],[240,239],[],[242,241],[],[],[],[247],[245,86],[],[244],[248,245,249],[245],[156],[254],[252,85],[],[251],[252,256,255],[252],[156],[261],[259,87],[],[258],[263,259,262],[259],[264],[],[269],[267,84],[],[266],[267,270,271],[267],[156],[51,33],[],[153],[],[158,266,277],[278,279],[280,281],[286,84],[283,282],[],[285,284],[],[],[],[],[],[153],[290,158,251],[291,292],[293,294],[297,85],[296,295],[],[],[],[],[153],[300,158,244],[302,301],[303,304],[307,86],[306,305],[],[],[],[],[153],[158,258,310],[311,312],[],[313,314,315,87],[316,317],[],[320],[318,319],[],[],[],[],[323,324],[],[326,325],[],[],[],[88,328],[],[332,331],[],[333,334],[],[],[],[342],[106,107],[246,336],[337,253],[260,338],[268,339],[340],[336,343,344],[336],[345],[348,347,346],[349,106,142],[350],[107,351],[156],[],[352,353],[354,355],[],[357,356],[],[],[],[246,158,359],[337,360],[],[253,362,158],[363,338],[],[365,158,260],[366,339],[],[268,158,368],[340,369],[]],"attribute":["Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Switch Stmt ","Method Call Expr ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Field Access Expr ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","Method Declaration Throws ","PUBLIC","STATIC","Class Or Interface Type Object ","Simple Name decode_ ","Parameter com.jsoniter.JsonIterator iter ","Throws","Class Or Interface Type IOException ","java.io.IOException","Block Stmt ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Class Or Interface Type jsoniter ","Simple Name JsonIterator ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Do Stmt ","Variable Declaration Expr ","Simple Name existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Variable Declarator java.lang.Object existingObj = ","Class Or Interface Type Object ","Method Call Expr ","Field Access Expr ","Simple Name resetExistingObject ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Marker Annotation Expr @Override ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Variable Declarator byte nextToken = ","Primitive Type byte ","Method Call Expr ","Field Access Expr ","Simple Name readByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","NOT_EQUALS","Char Literal Expr '{' ","'{'","Block Stmt ","EQUALS","Char Literal Expr 'n' ","'n'","Method Call Expr ","Field Access Expr ","Simple Name skipFixedBytes ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","IntegerLiteralExpr","ReturnStmt","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr 'n' ","Method Call Expr ","Field Access Expr ","Simple Name skipFixedBytes ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Null Literal Expr ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name readByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr ''' ","'''","Block Stmt ","Char Literal Expr '}' ","'}'","Enclosed Expr ","Conditional Expr existingObj == null ? new com.jsoniter.demo.User() : (com.jsoniter.demo.User) existingObj ","Binary Expr EQUALS ","Object Creation Expr com.jsoniter.demo.User Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type User ","Class Or Interface Type User ","Class Or Interface Type demo ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr '}' ","Enclosed Expr ","Conditional Expr existingObj == null ? new com.jsoniter.demo.User() : (com.jsoniter.demo.User) existingObj ","Binary Expr EQUALS ","Object Creation Expr com.jsoniter.demo.User Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type User ","Class Or Interface Type User ","Class Or Interface Type demo ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Method Call Expr ","Field Access Expr ","Simple Name unreadByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Field Access Expr ","Simple Name unreadByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Assign Expr ASSIGN ","Simple Name _firstName_ ","Name Expr _firstName_ ","Variable Declarator java.lang.String _firstName_ = ","Class Or Interface Type String ","Null Literal Expr ","Variable Declaration Expr ","Name Expr _lastName_ ","Simple Name _lastName_ ","Name Expr _lastName_ ","Variable Declarator java.lang.String _lastName_ = ","Class Or Interface Type String ","Null Literal Expr ","Variable Declaration Expr ","Name Expr _score_ ","Simple Name _score_ ","Name Expr _score_ ","Variable Declarator int _score_ = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Variable Declaration Expr ","Name Expr _attachment_ ","Simple Name _attachment_ ","Name Expr _attachment_ ","Variable Declarator com.jsoniter.any.Any _attachment_ = ","Class Or Interface Type Any ","Null Literal Expr ","Block Stmt ","SwitchEntryStmt","Integer Literal Expr Note Zero  ","MINUS","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type Any ","Method Call Expr ","Class Or Interface Type any ","Simple Name Any ","Class Or Interface Type jsoniter ","Simple Name any ","Class Or Interface Type com ","Simple Name jsoniter ","Simple Name readAny ","continue;","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type String ","Method Call Expr ","Class Or Interface Type lang ","Simple Name String ","Class Or Interface Type java ","Simple Name lang ","Simple Name readString ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type String ","Method Call Expr ","Simple Name getLogger ","Simple Name String ","Class Or Interface Type java ","Simple Name lang ","Simple Name readString ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Cast Expr ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name readInt ","String Literal Expr Not Empty  ","Name Expr errorHistory ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","StringLiteralExpr","Field Access Expr ","Simple Name readObjectFieldAsHash ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name skip ","Field Access Expr ","Simple Name nextTokenIsComma ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name obj ","Name Expr arr ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Variable Declarator com.jsoniter.demo.User obj = ","Class Or Interface Type User ","Enclosed Expr ","Conditional Expr existingObj == null ? new com.jsoniter.demo.User() : (com.jsoniter.demo.User) existingObj ","Binary Expr EQUALS ","Object Creation Expr com.jsoniter.demo.User Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type User ","Class Or Interface Type User ","Class Or Interface Type demo ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name firstName ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name lastName ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name score ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name attachment "]}
{"fileName":"demo/src/main/java/jsoniter_codegen/cfg1173796797/decoder/com/jsoniter/demo/User.java","version":"0.9.22","methodName":"decode-User-com.jsoniter.JsonIterator","callMethodNameReferTo":{},"num":394,"succs":[[3,4,2,6,8,5,1],[89],[10,3,11],[],[16,15],[7],[21,22],[],[9],[0,25,26],[13,12],[],[],[],[15,28],[],[17,18],[19,20],[],[],[],[23,24],[],[],[],[],[29,27,14],[],[],[93,89,91,92,5,1,90,94],[125,31],[142,32],[33,162],[34,164,163,44,144],[166,38,35],[168,145,167,36,38],[170,37],[179,29,25,44],[39,40],[181,40],[190,41],[147,42,167,44,191],[43,192],[200,29,25,44],[201,45],[209,57,46],[47,57,149,210,163],[50,48,212],[213,50,150,49,167],[29,59,25,215],[52,51],[52,229],[237,55,53],[152,55,54,238,167],[59,29,239,25],[56],[253,59],[58],[260,59],[60,267],[274,61],[281,62],[289,63],[77,64,69,65,73],[108,77,345,69,65,73,346],[67,68,66,297],[298,299],[68,300],[311],[72,297,70,71],[299,312],[72,313],[311],[297,74,75,76],[322,299],[76,323],[311],[78,79,297,80],[332,299],[333,80],[311],[82,351],[354,83,114,63,353],[359,84],[382,85],[385,86],[388,87],[391,88],[365,29,25],[],[95,96,91],[],[115,28],[121,120],[86,88,59,62,44,84,30,124,60,83,31,45,61,87,85,32],[98,97],[],[],[],[28],[99,28],[28,100],[28,100],[102,101,28],[103,28],[104,28],[104,28,105],[104,106,28],[114,28,107],[108,28],[28,109],[28,110],[28,111],[28,112],[113,28],[116,117],[119,118],[],[],[],[123,122],[],[],[],[296,82],[133],[128,130,99],[126],[127,126],[126],[129,126],[126],[131,126],[134,135,126],[126],[99,137,136],[139,138],[],[140,141],[],[],[],[153],[100],[143],[33,143,144],[102,33,143,145,35],[33,146,145,35],[147,104,146],[152,148],[148,149,46],[48,148,150,46,105],[48,150,46,151],[154,155,143],[143],[156,157,100],[158,159],[],[160,161],[],[],[],[34],[],[165],[],[37,36],[],[169],[],[173,171,172,101],[175,174],[],[178],[177,176],[],[],[],[],[180],[],[182,146,183],[],[102,184,185],[186,187],[],[188,189],[],[],[],[43,42],[169],[103,195,194,193],[196,197],[],[178],[199,198],[],[],[],[180],[202,182,148],[204,104,203],[206,205],[],[207,208],[],[],[],[47],[211],[],[49],[214],[],[216],[219,217,218],[127,220,167],[221],[128,222],[180],[],[224,223],[225,226],[],[228,227],[],[],[],[182,151,230],[232,231,105],[234,233],[],[235,236],[],[],[],[54],[214],[240],[243,241,242],[129,244,167],[245],[130,246],[180],[],[247,248],[250,249],[],[251,252],[],[],[],[254,106,255],[256,257],[],[259,258],[],[],[],[262,261,107],[264,263],[],[266,265],[],[],[],[271],[269,111],[],[268],[272,269,273],[269],[180],[278],[276,110],[],[275],[276,280,279],[276],[180],[285],[283,112],[],[282],[287,283,286],[283],[288],[],[293],[291,109],[],[290],[291,294,295],[291],[180],[81,63],[],[178],[],[182,290,301],[302,303],[304,305],[310,109],[307,306],[],[309,308],[],[],[],[],[],[178],[314,182,275],[315,316],[317,318],[321,110],[320,319],[],[],[],[],[178],[324,182,268],[326,325],[327,328],[331,111],[330,329],[],[],[],[],[178],[182,282,334],[335,336],[],[337,338,339,112],[340,341],[],[344],[342,343],[],[],[],[],[347,348],[],[350,349],[],[],[],[113,352],[],[356,355],[],[357,358],[],[],[],[366],[131,132],[270,360],[361,277],[284,362],[292,363],[364],[360,367,368],[360],[369],[372,371,370],[373,131,167],[374],[132,375],[180],[],[376,377],[378,379],[],[381,380],[],[],[],[270,182,383],[361,384],[],[277,182,386],[387,362],[],[389,182,284],[390,363],[],[292,182,392],[364,393],[]],"attribute":["Method Declaration Throws ","PUBLIC","Class Or Interface Type Object ","Simple Name decode ","Parameter com.jsoniter.JsonIterator iter ","Throws","Class Or Interface Type IOException ","java.io.IOException","Block Stmt ","Return Stmt ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Void Type ","Simple Name iter ","Class Or Interface Type JsonIterator ","Class Or Interface Type jsoniter ","Simple Name JsonIterator ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","ReturnStmt","Method Call Expr ","Simple Name decode_ ","Simple Name iter ","Method Declaration Throws ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Expression Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Switch Stmt ","Method Call Expr ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Switch Entry Stmt ","Unary Expr - ","Expression Stmt ","Continue Stmt ","Field Access Expr ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Return Stmt ","STATIC","Class Or Interface Type Object ","Simple Name decode_ ","Parameter com.jsoniter.JsonIterator iter ","Class Or Interface Type IOException ","Block Stmt ","Class Or Interface Type lang ","Simple Name Object ","Class Or Interface Type java ","Simple Name lang ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Name Expr iter ","Class Or Interface Type JsonIterator ","Class Or Interface Type jsoniter ","Simple Name JsonIterator ","Class Or Interface Type com ","Simple Name jsoniter ","Class Or Interface Type io ","Simple Name IOException ","Class Or Interface Type java ","Simple Name io ","Do Stmt ","Variable Declaration Expr ","Simple Name existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Name Expr existingObj ","Variable Declarator java.lang.Object existingObj = ","Class Or Interface Type Object ","Method Call Expr ","Field Access Expr ","Simple Name resetExistingObject ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Marker Annotation Expr @Override ","Name Expr nextToken ","Name Expr nextToken ","Name Expr nextToken ","Variable Declarator byte nextToken = ","Primitive Type byte ","Method Call Expr ","Field Access Expr ","Simple Name readByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","NOT_EQUALS","Char Literal Expr '{' ","'{'","Block Stmt ","EQUALS","Char Literal Expr 'n' ","'n'","Method Call Expr ","Field Access Expr ","Simple Name skipFixedBytes ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","IntegerLiteralExpr","Null Literal Expr ","NullLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr 'n' ","Method Call Expr ","Field Access Expr ","Simple Name skipFixedBytes ","Integer Literal Expr Note Zero  ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Null Literal Expr ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name readByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr ''' ","'''","Block Stmt ","Char Literal Expr '}' ","'}'","Enclosed Expr ","Conditional Expr existingObj == null ? new com.jsoniter.demo.User() : (com.jsoniter.demo.User) existingObj ","Binary Expr EQUALS ","Object Creation Expr com.jsoniter.demo.User Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type User ","Class Or Interface Type User ","Class Or Interface Type demo ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name nextToken ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Block Stmt ","Char Literal Expr '}' ","Enclosed Expr ","Conditional Expr existingObj == null ? new com.jsoniter.demo.User() : (com.jsoniter.demo.User) existingObj ","Binary Expr EQUALS ","Object Creation Expr com.jsoniter.demo.User Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type User ","Class Or Interface Type User ","Class Or Interface Type demo ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Method Call Expr ","Field Access Expr ","Simple Name unreadByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Field Access Expr ","Simple Name unreadByte ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Assign Expr ASSIGN ","Simple Name _firstName_ ","Name Expr _firstName_ ","Variable Declarator java.lang.String _firstName_ = ","Class Or Interface Type String ","Null Literal Expr ","Variable Declaration Expr ","Name Expr _lastName_ ","Simple Name _lastName_ ","Name Expr _lastName_ ","Variable Declarator java.lang.String _lastName_ = ","Class Or Interface Type String ","Null Literal Expr ","Variable Declaration Expr ","Name Expr _score_ ","Simple Name _score_ ","Name Expr _score_ ","Variable Declarator int _score_ = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Variable Declaration Expr ","Name Expr _attachment_ ","Simple Name _attachment_ ","Name Expr _attachment_ ","Variable Declarator com.jsoniter.any.Any _attachment_ = ","Class Or Interface Type Any ","Null Literal Expr ","Block Stmt ","SwitchEntryStmt","Integer Literal Expr Note Zero  ","MINUS","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type Any ","Method Call Expr ","Class Or Interface Type any ","Simple Name Any ","Class Or Interface Type jsoniter ","Simple Name any ","Class Or Interface Type com ","Simple Name jsoniter ","Simple Name readAny ","continue;","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type String ","Method Call Expr ","Class Or Interface Type lang ","Simple Name String ","Class Or Interface Type java ","Simple Name lang ","Simple Name readString ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type String ","Method Call Expr ","Simple Name getLogger ","Simple Name String ","Class Or Interface Type java ","Simple Name lang ","Simple Name readString ","Integer Literal Expr Note Zero  ","Assign Expr ASSIGN ","Cast Expr ","Primitive Type int ","Method Call Expr ","Field Access Expr ","Simple Name readInt ","String Literal Expr Not Empty  ","Name Expr errorHistory ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","StringLiteralExpr","Field Access Expr ","Simple Name readObjectFieldAsHash ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Method Call Expr ","Simple Name skip ","Field Access Expr ","Simple Name nextTokenIsComma ","Field Access Expr ","Simple Name CodegenAccess ","Name Expr com ","Simple Name jsoniter ","Variable Declaration Expr ","Simple Name obj ","Name Expr arr ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Name Expr obj ","Variable Declarator com.jsoniter.demo.User obj = ","Class Or Interface Type User ","Enclosed Expr ","Conditional Expr existingObj == null ? new com.jsoniter.demo.User() : (com.jsoniter.demo.User) existingObj ","Binary Expr EQUALS ","Object Creation Expr com.jsoniter.demo.User Optional.empty Optional.empty ","Cast Expr ","Null Literal Expr ","Class Or Interface Type User ","Class Or Interface Type User ","Class Or Interface Type demo ","Simple Name User ","Class Or Interface Type jsoniter ","Simple Name demo ","Class Or Interface Type com ","Simple Name jsoniter ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name firstName ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name lastName ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name score ","Assign Expr ASSIGN ","Field Access Expr ","Simple Name attachment "]}
