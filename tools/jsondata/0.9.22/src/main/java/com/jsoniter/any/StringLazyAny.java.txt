{"fileName":"src/main/java/com/jsoniter/any/StringLazyAny.java","version":"0.9.22","hasMethodName":["valueType-StringLazyAny-","object-StringLazyAny-","toBoolean-StringLazyAny-","toInt-StringLazyAny-","toLong-StringLazyAny-","toFloat-StringLazyAny-","toDouble-StringLazyAny-","toBigInteger-StringLazyAny-","toBigDecimal-StringLazyAny-","toString-StringLazyAny-","fillCache-StringLazyAny-"]}
{"fileName":"src/main/java/com/jsoniter/any/StringLazyAny.java","version":"0.9.22","methodName":"valueType-StringLazyAny-","callMethodNameReferTo":{},"num":11,"succs":[[1,4,2,5,3],[],[],[4],[],[6],[0,8,7],[],[9,10],[],[]],"attribute":["Method Declaration ","Binary Expr EQUALS ","PUBLIC","Class Or Interface Type ValueType ","Simple Name valueType ","Block Stmt ","Return Stmt ","ReturnStmt","Field Access Expr ","Name Expr ValueType ","Simple Name NUMBER "]}
{"fileName":"src/main/java/com/jsoniter/any/StringLazyAny.java","version":"0.9.22","methodName":"object-StringLazyAny-","callMethodNameReferTo":{},"num":54,"succs":[[8,1],[12,2,11],[6,5,4,3,7],[],[],[6],[],[0,1],[9,10],[],[23,22,24,21],[],[],[14,25],[28,15,29,27],[31,16],[17,18,41,20,39,40],[42,20],[19,48,47],[20,49],[51],[],[23],[],[13],[15,16],[14],[],[],[30],[],[35],[33],[],[32,33],[36,37,33],[33],[38],[],[17],[46,18],[20],[26,44,43],[],[32,45],[],[19],[],[],[50],[],[53,52,34],[],[]],"attribute":["Expression Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Object ","Simple Name object ","Block Stmt ","Return Stmt ","Simple Name fillCache ","Method Declaration ","ReturnStmt","Name Expr cache ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Try Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr cache ","Name Expr cache ","EQUALS","Null Literal Expr ","NullLiteralExpr","Variable Declaration Expr ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name parse ","Block Stmt ","Catch Clause ","Block Stmt ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name readString ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"fileName":"src/main/java/com/jsoniter/any/StringLazyAny.java","version":"0.9.22","methodName":"toBoolean-StringLazyAny-","callMethodNameReferTo":{},"num":123,"succs":[[32,1],[35,2],[3,45],[46,4,5,47,38],[5,50,26,49],[6,52],[54,8,7,55,53],[61,8,26,49],[62,10,24,9],[10,67],[40,11,70,25,63],[22,17,19,15,13,12],[22,17,19,66,80,81,15,13],[15,72,14],[73],[17,16,72],[74],[19,72,18],[75],[21,72,20],[76],[77,24],[23,72],[24,78,26,49],[10,71,65],[82,26,49],[30,27,28,31,29],[],[],[30],[],[1,8,5,2,25,0],[34,33],[],[93,92,94,91],[41],[37],[],[36],[36,38],[39,36],[43,42,36],[36],[44,37],[],[4],[],[48],[],[],[51],[],[7],[39,46,56],[],[58,59,60],[57],[],[],[],[],[51],[11],[64,66],[],[64,63],[64,65],[69,68,64],[64],[48],[],[],[],[],[],[],[],[],[79],[],[],[],[51],[84,95],[46,85,98,97],[100,86],[87,88,110,90,109,108],[111,90],[89,117,116],[90,118],[120],[],[93],[],[83],[85,86],[84],[],[99],[],[104],[102],[],[101,102],[105,106,102],[102],[107],[],[87],[115,88],[90],[96,113,112],[],[101,114],[],[89],[],[],[119],[],[122,121,103],[],[]],"attribute":["Field Access Expr ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","If Stmt ","Binary Expr AND ","Return Stmt ","For Stmt ","Variable Declaration Expr ","Simple Name writeTo ","Switch Stmt ","Method Call Expr ","Switch Entry Stmt ","Char Literal Expr ' ' ","Switch Entry Stmt ","Char Literal Expr 't' ","Switch Entry Stmt ","Char Literal Expr 'n' ","Switch Entry Stmt ","Char Literal Expr 'r' ","Continue Stmt ","Switch Entry Stmt ","Return Stmt ","Unary Expr ++ ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type boolean ","Simple Name toBoolean ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","Variable Declaration Expr ","Simple Name len ","Name Expr cache ","Name Expr len ","Name Expr len ","Name Expr len ","Variable Declarator int len = ","Name Expr com ","Method Call Expr ","Simple Name length ","Block Stmt ","EQUALS","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","ReturnStmt","Boolean Literal Expr false ","false","Block Stmt ","Binary Expr EQUALS ","AND","Method Call Expr ","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","Name Expr FALSE ","Simple Name equals ","Name Expr cache ","Boolean Literal Expr false ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","LESS","POSTFIX_INCREMENT","SwitchEntryStmt","' '","'t'","'n'","'r'","continue;","Boolean Literal Expr true ","true","Name Expr cache ","Simple Name charAt ","Name Expr cache ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Try Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr cache ","Name Expr cache ","Null Literal Expr ","NullLiteralExpr","Variable Declaration Expr ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name parse ","Block Stmt ","Catch Clause ","Block Stmt ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name readString ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"fileName":"src/main/java/com/jsoniter/any/StringLazyAny.java","version":"0.9.22","methodName":"toInt-StringLazyAny-","callMethodNameReferTo":{"37":"src/main/java/com/jsoniter/JsonIteratorPool.java?returnJsonIterator-JsonIteratorPool-JsonIterator","25":"src/main/java/com/jsoniter/CodegenAccess.java?nextToken-CodegenAccess-JsonIterator","29":"src/main/java/com/jsoniter/JsonIterator.java?readInt-JsonIterator-"},"num":40,"succs":[[13,1],[6,4,2,23,22,24],[25,3],[6,29,7,28],[32,5,33],[6,34],[37],[12,8,9,11,10],[],[],[11],[],[1,0],[18],[15],[],[15,14],[16,15],[15,20,19],[15],[21],[],[2,3],[4,31],[6],[26,27,14],[],[],[],[16,30],[],[5],[],[],[36,35],[],[],[39,38,17],[],[]],"attribute":["Expression Stmt ","Try Stmt ","Expression Stmt ","Return Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Any ","Simple Name toInt ","Block Stmt ","Variable Declaration Expr ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Expression Stmt ","Method Call Expr ","Simple Name parse ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name nextToken ","ReturnStmt","Method Call Expr ","Simple Name readInt ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"fileName":"src/main/java/com/jsoniter/any/StringLazyAny.java","version":"0.9.22","methodName":"toLong-StringLazyAny-","callMethodNameReferTo":{"37":"src/main/java/com/jsoniter/JsonIteratorPool.java?returnJsonIterator-JsonIteratorPool-JsonIterator","25":"src/main/java/com/jsoniter/CodegenAccess.java?nextToken-CodegenAccess-JsonIterator","29":"src/main/java/com/jsoniter/JsonIterator.java?readLong-JsonIterator-"},"num":40,"succs":[[13,1],[4,6,2,23,24,22],[3,25],[6,29,7,28],[32,33,5],[34,6],[37],[11,9,10,12,8],[],[],[11],[],[0,1],[18],[15],[],[15,14],[15,16],[19,15,20],[15],[21],[],[2,3],[31,4],[6],[27,14,26],[],[],[],[30,16],[],[5],[],[],[35,36],[],[],[17,39,38],[],[]],"attribute":["Expression Stmt ","Try Stmt ","Expression Stmt ","Return Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type long ","Simple Name toLong ","Block Stmt ","Variable Declaration Expr ","Name Expr iter ","Name Expr keys ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Return Stmt ","Method Call Expr ","Simple Name parse ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name nextToken ","ReturnStmt","Method Call Expr ","Simple Name readLong ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"fileName":"src/main/java/com/jsoniter/any/StringLazyAny.java","version":"0.9.22","methodName":"toFloat-StringLazyAny-","callMethodNameReferTo":{"37":"src/main/java/com/jsoniter/JsonIteratorPool.java?returnJsonIterator-JsonIteratorPool-JsonIterator","25":"src/main/java/com/jsoniter/CodegenAccess.java?nextToken-CodegenAccess-JsonIterator","29":"src/main/java/com/jsoniter/JsonIterator.java?readFloat-JsonIterator-"},"num":40,"succs":[[1,13],[24,23,2,6,22,4],[25,3],[6,7,28,29],[33,32,5],[6,34],[37],[9,12,8,10,11],[],[],[11],[],[0,1],[18],[15],[],[14,15],[16,15],[20,19,15],[15],[21],[],[2,3],[31,4],[6],[14,27,26],[],[],[],[16,30],[],[5],[],[],[36,35],[],[],[17,38,39],[],[]],"attribute":["Expression Stmt ","Try Stmt ","Expression Stmt ","Return Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type float ","Simple Name toFloat ","Block Stmt ","Return Stmt ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Expression Stmt ","Method Call Expr ","Name Expr cache ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name nextToken ","ReturnStmt","Method Call Expr ","Simple Name readFloat ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"fileName":"src/main/java/com/jsoniter/any/StringLazyAny.java","version":"0.9.22","methodName":"toDouble-StringLazyAny-","callMethodNameReferTo":{"37":"src/main/java/com/jsoniter/JsonIteratorPool.java?returnJsonIterator-JsonIteratorPool-JsonIterator","25":"src/main/java/com/jsoniter/CodegenAccess.java?nextToken-CodegenAccess-JsonIterator","29":"src/main/java/com/jsoniter/JsonIterator.java?readDouble-JsonIterator-"},"num":40,"succs":[[13,1],[2,23,4,24,6,22],[25,3],[7,29,6,28],[32,33,5],[34,6],[37],[12,11,9,10,8],[],[],[11],[],[1,0],[18],[15],[],[14,15],[16,15],[15,20,19],[15],[21],[],[2,3],[31,4],[6],[14,26,27],[],[],[],[30,16],[],[5],[],[],[36,35],[],[],[17,39,38],[],[]],"attribute":["Expression Stmt ","Try Stmt ","Expression Stmt ","Return Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Primitive Type double ","Simple Name toDouble ","Block Stmt ","Variable Declaration Expr ","Name Expr iter ","Simple Name iter ","Name Expr keys ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name parse ","Block Stmt ","Catch Clause ","Block Stmt ","Method Call Expr ","Name Expr CodegenAccess ","Simple Name nextToken ","ReturnStmt","Method Call Expr ","Simple Name readDouble ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"fileName":"src/main/java/com/jsoniter/any/StringLazyAny.java","version":"0.9.22","methodName":"toBigInteger-StringLazyAny-","callMethodNameReferTo":{},"num":64,"succs":[[1,2,5,4,3],[],[],[4],[],[6],[8,7,0],[],[10,9],[],[12,11],[],[15,2,17,16,18],[19,14],[12,22,7],[],[17],[],[14,13],[21,20],[],[33,32,34,31],[],[24,35],[38,39,25,37],[41,26],[27,28,51,30,49,50],[52,30],[29,58,57],[30,59],[61],[],[33],[],[23],[25,26],[24],[],[],[40],[],[45],[43],[],[42,43],[46,47,43],[43],[48],[],[27],[56,28],[30],[36,54,53],[],[42,55],[],[29],[],[],[60],[],[63,62,44],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type BigInteger ","Simple Name toBigInteger ","Block Stmt ","Return Stmt ","ReturnStmt","Object Creation Expr BigInteger Optional.empty Optional.empty ","Class Or Interface Type BigInteger ","Method Call Expr ","Simple Name toString ","Method Declaration ","Expression Stmt ","Return Stmt ","Marker Annotation Expr @Override ","Class Or Interface Type Object ","Simple Name toString ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","Name Expr cache ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Try Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr cache ","Name Expr cache ","EQUALS","Null Literal Expr ","NullLiteralExpr","Variable Declaration Expr ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name parse ","Block Stmt ","Catch Clause ","Block Stmt ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name readString ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"fileName":"src/main/java/com/jsoniter/any/StringLazyAny.java","version":"0.9.22","methodName":"toBigDecimal-StringLazyAny-","callMethodNameReferTo":{},"num":64,"succs":[[1,2,5,3,4],[],[],[4],[],[6],[8,0,7],[],[9,10],[],[11,12],[],[15,2,17,16,18],[19,14],[12,22,7],[],[17],[],[14,13],[21,20],[],[33,32,34,31],[],[24,35],[38,39,25,37],[41,26],[27,28,51,30,49,50],[52,30],[29,58,57],[30,59],[61],[],[33],[],[23],[25,26],[24],[],[],[40],[],[45],[43],[],[42,43],[46,47,43],[43],[48],[],[27],[56,28],[30],[36,54,53],[],[42,55],[],[29],[],[],[60],[],[63,62,44],[],[]],"attribute":["Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type BigDecimal ","Simple Name toBigDecimal ","Block Stmt ","Return Stmt ","ReturnStmt","Object Creation Expr BigDecimal Optional.empty Optional.empty ","Class Or Interface Type BigDecimal ","Method Call Expr ","Simple Name toString ","Method Declaration ","Expression Stmt ","Return Stmt ","Marker Annotation Expr @Override ","Class Or Interface Type Object ","Simple Name toString ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","Name Expr cache ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Try Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr cache ","Name Expr cache ","EQUALS","Null Literal Expr ","NullLiteralExpr","Variable Declaration Expr ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name parse ","Block Stmt ","Catch Clause ","Block Stmt ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name readString ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"fileName":"src/main/java/com/jsoniter/any/StringLazyAny.java","version":"0.9.22","methodName":"toString-StringLazyAny-","callMethodNameReferTo":{},"num":54,"succs":[[8,1],[12,2,11],[3,4,6,5,7],[],[],[6],[],[1,0],[10,9],[],[23,22,24,21],[],[],[14,25],[28,15,29,27],[31,16],[17,18,41,20,39,40],[42,20],[19,48,47],[20,49],[51],[],[23],[],[13],[15,16],[14],[],[],[30],[],[35],[33],[],[32,33],[36,37,33],[33],[38],[],[17],[46,18],[20],[26,44,43],[],[32,45],[],[19],[],[],[50],[],[53,52,34],[],[]],"attribute":["Expression Stmt ","Return Stmt ","Method Declaration ","Marker Annotation Expr @Override ","PUBLIC","Class Or Interface Type Object ","Simple Name toString ","Block Stmt ","Method Call Expr ","Simple Name fillCache ","Method Declaration ","ReturnStmt","Name Expr cache ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Try Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr cache ","Name Expr cache ","EQUALS","Null Literal Expr ","NullLiteralExpr","Variable Declaration Expr ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name parse ","Block Stmt ","Catch Clause ","Block Stmt ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name readString ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
{"fileName":"src/main/java/com/jsoniter/any/StringLazyAny.java","version":"0.9.22","methodName":"fillCache-StringLazyAny-","callMethodNameReferTo":{"32":"src/main/java/com/jsoniter/JsonIterator.java?readString-JsonIterator-","39":"src/main/java/com/jsoniter/JsonIteratorPool.java?returnJsonIterator-JsonIteratorPool-JsonIterator"},"num":42,"succs":[[1,13],[16,2,17,15],[19,3],[4,5,29,7,27,28],[30,7],[6,36,35],[7,37],[39],[11,10,12,9],[],[11],[],[0],[2,3],[1],[],[],[18],[],[23],[21],[],[20,21],[24,25,21],[21],[26],[],[4],[34,5],[7],[14,32,31],[],[20,33],[],[6],[],[],[38],[],[41,40,22],[],[]],"attribute":["If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Try Stmt ","Expression Stmt ","Parameter IOException e ","Throw Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","Void Type ","Simple Name fillCache ","Block Stmt ","Block Stmt ","Name Expr cache ","Name Expr cache ","EQUALS","Null Literal Expr ","NullLiteralExpr","Variable Declaration Expr ","Name Expr iter ","Simple Name iter ","Name Expr iter ","Variable Declarator JsonIterator iter = ","Class Or Interface Type JsonIterator ","Method Call Expr ","Simple Name parse ","Block Stmt ","Catch Clause ","Block Stmt ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name readString ","Block Stmt ","Class Or Interface Type IOException ","Simple Name e ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Method Call Expr ","Name Expr JsonIteratorPool ","Simple Name returnJsonIterator "]}
