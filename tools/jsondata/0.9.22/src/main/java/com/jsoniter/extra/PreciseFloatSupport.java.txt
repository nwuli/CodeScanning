{"fileName":"src/main/java/com/jsoniter/extra/PreciseFloatSupport.java","version":"0.9.22","hasMethodName":["enable-PreciseFloatSupport-"]}
{"fileName":"src/main/java/com/jsoniter/extra/PreciseFloatSupport.java","version":"0.9.22","methodName":"enable-PreciseFloatSupport-","callMethodNameReferTo":{"148":"src/main/java/com/jsoniter/any/Any.java?wrap-Any-int","73":"src/main/java/com/jsoniter/any/Any.java?wrap-Any-int"},"num":180,"succs":[[17,1],[3,2],[3,18],[4,22],[5,27],[6,78],[105,7],[153],[14,9,13,12,11,10],[10],[11],[],[13],[],[3,4,6,5,0,7],[55,73,8,72],[131,148,8,72],[2],[20,19],[],[21],[],[23,25,24],[],[],[26],[],[30,28,31,29],[],[],[32],[33],[],[],[37,38,43,35,9,41,39,40,36],[],[37],[],[48,45],[49,47],[42],[],[],[50],[45],[],[47],[],[],[],[51],[46,53,52],[],[54,44],[],[59,57,58,9,60,56],[],[58],[],[63,62],[64,15],[62],[],[],[15,65],[68],[61],[66],[66,70,69],[66],[61,71],[],[],[55,75,74,76],[],[],[62,67,77],[],[82,80,79,81],[],[],[83],[84],[],[],[88,9,91,90,92,86,40,87,89],[],[88],[],[97,94],[98,96],[],[99],[94],[],[96],[],[],[],[100],[95,102,101],[],[103,104,93],[],[],[109,108,106,107],[],[],[110],[111],[],[],[117,113,9,119,114,118,40,115,116],[],[115],[],[121,124],[123,125],[],[126],[121],[],[123],[],[],[],[127],[122,128,129],[],[130,120],[],[134,136,9,132,133,135],[],[134],[],[138,139],[16,140],[138],[],[],[141],[144],[137],[142],[142,146,145],[142],[147,137],[],[150,149,55,151],[],[],[143,62,152],[],[156,154,155,157],[],[],[158],[159],[],[],[9,164,163,161,162,167,165,40,166],[],[163],[],[172,169],[173,171],[],[174],[169],[],[171],[],[],[],[175],[170,177,176],[],[178,168,179],[],[]],"attribute":["If Stmt ","Name Expr enabled ","Throw Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","SYNCHRONIZED","Void Type ","Simple Name enable ","Block Stmt ","Return Stmt ","Return Stmt ","Block Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","StringLiteralExpr","Assign Expr ASSIGN ","Class Or Interface Type Context ","ASSIGN","Boolean Literal Expr true ","true","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name registerTypeDecoder ","Class Or Interface Type JsonIterator ","Object Creation Expr Encoder.ReflectionEncoder Optional.empty Optional.empty ","Array Type 1 ","Class Or Interface Type ReflectionEncoder ","Method Declaration Throws ","Marker Annotation Expr @Override ","Void Type ","Simple Name encode ","Parameter Object obj ","Parameter JsonStream stream ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Simple Name obj ","Simple Name obj ","Name Expr stream ","Simple Name stream ","Class Or Interface Type Object ","Class Or Interface Type JsonStream ","Expression Stmt ","Method Call Expr ","Simple Name writeRaw ","Method Call Expr ","Simple Name toString ","Method Declaration ","Marker Annotation Expr @Override ","Class Or Interface Type Any ","Simple Name wrap ","Parameter Object obj ","Block Stmt ","Name Expr obj ","Simple Name obj ","Class Or Interface Type Object ","Expression Stmt ","Variable Declaration Expr ","Simple Name number ","Name Expr number ","Variable Declarator Double number = ","Class Or Interface Type Double ","Cast Expr ","Class Or Interface Type Double ","ReturnStmt","Method Call Expr ","Name Expr Any ","Simple Name wrap ","Method Call Expr ","Simple Name doubleValue ","Method Call Expr ","Return Stmt ","Simple Name registerTypeEncoder ","Class Expr double.class ","Object Creation Expr Encoder.DoubleEncoder Optional.empty Optional.empty ","Primitive Type double ","Class Or Interface Type DoubleEncoder ","Method Declaration Throws ","Marker Annotation Expr @Override ","Void Type ","Simple Name encodeDouble ","Parameter double obj ","Parameter JsonStream stream ","Class Or Interface Type IOException ","Block Stmt ","Name Expr obj ","Simple Name obj ","Name Expr stream ","Simple Name stream ","Primitive Type double ","Class Or Interface Type JsonStream ","Expression Stmt ","Method Call Expr ","Simple Name writeRaw ","Method Call Expr ","Name Expr Double ","Simple Name toString ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name registerTypeEncoder ","Class Expr Float.class ","Object Creation Expr Encoder.ReflectionEncoder Optional.empty Optional.empty ","Class Or Interface Type Float ","Class Or Interface Type ReflectionEncoder ","Method Declaration Throws ","Marker Annotation Expr @Override ","Null Literal Expr ","Simple Name encode ","Parameter Object obj ","Parameter JsonStream stream ","Class Or Interface Type IOException ","Block Stmt ","Name Expr obj ","Simple Name obj ","Simple Name toLong ","Simple Name stream ","Class Or Interface Type Object ","Class Or Interface Type JsonStream ","Expression Stmt ","Method Call Expr ","Simple Name writeRaw ","Method Call Expr ","Simple Name toString ","Method Declaration ","Switch Entry Stmt ","Primitive Type int ","Simple Name wrap ","Parameter Object obj ","Block Stmt ","Name Expr obj ","Simple Name obj ","Simple Name create ","Expression Stmt ","Variable Declaration Expr ","Simple Name number ","Name Expr number ","Variable Declarator Float number = ","Class Or Interface Type Float ","Cast Expr ","Class Or Interface Type Float ","Method Call Expr ","Name Expr Any ","Boolean Literal Expr true ","Method Call Expr ","Simple Name floatValue ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name registerTypeEncoder ","Class Expr float.class ","Object Creation Expr Encoder.FloatEncoder Optional.empty Optional.empty ","Primitive Type float ","Class Or Interface Type FloatEncoder ","If Stmt ","Marker Annotation Expr @Override ","Void Type ","Simple Name encodeFloat ","Parameter float obj ","Parameter JsonStream stream ","Class Or Interface Type IOException ","Block Stmt ","Name Expr obj ","Primitive Type int ","Simple Name toLong ","Simple Name stream ","Primitive Type float ","Class Or Interface Type JsonStream ","Expression Stmt ","Method Call Expr ","Simple Name writeRaw ","Method Call Expr ","Name Expr Float ","Simple Name toString "]}
