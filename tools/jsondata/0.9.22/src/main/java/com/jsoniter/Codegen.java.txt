{"fileName":"src/main/java/com/jsoniter/Codegen.java","version":"0.9.22","hasMethodName":["getDecoder-Codegen-String-Type","gen-Codegen-String-Type","addPlaceholderDecoderToSupportRecursiveStructure-Codegen-String","canStaticAccess-Codegen-String","chooseImpl-Codegen-Type","staticGen-Codegen-String-String","staticGen-Codegen-String-OutputStreamWriter-String","createDir-Codegen-String","genSource-Codegen-DecodingMode-ClassInfo","shouldUseStrictMode-Codegen-DecodingMode-ClassDescriptor","staticGenDecoders-Codegen-TypeLiteral[]-CodegenAccess.StaticCodegenTarget"]}
{"fileName":"src/main/java/com/jsoniter/Codegen.java","version":"0.9.22","methodName":"getDecoder-Codegen-String-Type","callMethodNameReferTo":{"693":"src/main/java/com/jsoniter/spi/JsoniterSpi.java?getDecoder-JsoniterSpi-String","151":"src/main/java/com/jsoniter/spi/JsoniterSpi.java?getDecoder-JsoniterSpi-String","26":"src/main/java/com/jsoniter/spi/JsoniterSpi.java?getDecoder-JsoniterSpi-String","669":"src/main/java/com/jsoniter/spi/JsoniterSpi.java?getDecoder-JsoniterSpi-String"},"num":1134,"succs":[[1,19],[2,28],[22,4,3,29,30],[5,4,23,32],[5,33,32],[9,8,6,7,11,10],[98],[8],[],[17,13],[16,18],[1,4,0],[13],[],[35,13,12],[36,16],[],[],[],[24],[21,12],[],[20],[22,2,20],[25,20,26],[20],[21,27,12],[],[3],[],[31],[],[],[34,14,15,37],[],[],[],[98,6,101,97,103,100,99,102],[123,39],[153,40],[42,126,154,29,41],[42,127,37,32],[43,155],[44,162,45],[156,47,45],[46,163],[44,165],[169,48],[49,50,174],[156,56,44,50],[175,51],[177,52],[180,53],[54,130,181,49,29],[182,55],[49,132,37,32],[57,185],[194,58],[201,59],[61,136,60,202,29],[61,137,37,32],[62,203],[208,207,63],[209,64],[65,217],[226,66],[69,228,219,227,67],[231,68],[69,141,37,32],[70,234],[78,71,236,227,235],[78,237,238,74,72],[239,73],[78,143,37,32],[248,75,249],[250,76],[78,251,220,77,227],[78,254],[259,79],[273,80],[279,81],[284,84,82,282,283],[83,288],[84,294],[85,298,96,92,299],[86,300],[303,87,89],[88,89,227,304,305],[306,91],[90],[309,91],[147,96,37,32],[315,93,316],[94,317],[338,95],[342,96],[345],[6],[],[100],[],[35,121],[36,122],[42,56,62,57,61,43,38,47,48,58,39],[35],[35,104],[35,105],[35,205,106],[35,107],[35,108],[35,109],[35,110],[35,111,110,311],[35,112],[36,115,116],[163],[36],[114,118],[114,172],[117],[117,119],[],[],[149],[104,125],[],[124],[126,124,40],[127,124,105,119,129],[175],[128],[130,53,128],[131,53,128],[134,132,135,128],[],[186],[133],[136,59,133],[139,137,140,133],[],[135,186],[138],[138,108,141],[144,142],[145,111,143,142,146],[],[36,263,261],[143,142],[147,142],[124,150,151],[124],[104,125,152],[],[41],[31],[158],[157],[],[156,159,160],[156],[161,157],[],[46],[164],[163],[114,166,167],[],[168,115,116],[],[170,117,166],[173,118,171],[],[],[406,407,6,408,97,409],[52,51],[176],[175],[166,178,128],[105,179,119,129],[],[54,55],[31],[131,106,183,184],[],[],[190],[120],[186,140,271],[186,187],[188,186],[192,186,191],[186],[120,193],[],[195,166,133],[196,197,198],[134,199],[],[200,135],[],[],[60],[31],[107,206,204],[],[],[6,630,97,628,629,631],[78,69,65,84,79,63,80,64],[96],[213],[211],[],[210],[214,210,215],[210],[211,216],[],[222],[212],[218],[219,218],[270,218,220],[223,218,224],[218],[212,225],[],[68,67],[],[230,229],[],[],[138,166,232],[139,233,140],[],[71],[],[31],[73,72],[247,74],[240,166,142],[241,242],[],[243,244],[108,246,245],[],[],[],[75],[],[],[77],[253,252],[],[],[255,256,257],[],[258],[],[],[266],[221,187],[262,260],[260],[261],[263,261,312,146],[264,261],[268,267,260],[260],[221,272,269,187],[],[],[],[746,747,748,745,6,97,744],[166,274,261],[276,277,275],[276,278,262],[],[258],[258],[83,82],[81],[81],[258],[],[286,285,287],[],[],[258],[291,289,290],[292,280],[],[109,276,293],[],[258],[295,263,296],[297,281],[],[],[85,86,91],[92,314],[110,301,302],[],[],[88],[],[31],[144,307,166],[145,308,111,146,37],[],[313,112,264,310],[],[],[],[825,827,6,828,97,649,829,826,830],[94,93,95],[],[],[324],[189,188,320,319],[],[],[265,318,322],[318],[321],[325,318,326],[318],[320,276,327],[328,276,329],[276,330,331],[258],[276,332,333],[335,319,336],[188,276,334],[258],[258],[],[189,337],[],[339,166,321],[276,265,340],[276,341,322],[258],[323,344,343],[],[],[347,148,346,113],[],[],[349,416],[350,436],[459,351,355],[461,410,352,355,460],[353,463],[354,469],[360,474],[358,356,477],[478,358,357,412,460],[173,360,32,480],[359],[482,360],[361,485],[495,362],[442,363,496,497,378],[364,499],[507,366,365],[509,508,366,227,371],[369,367,511],[369,512,513,227,368],[516,371],[370],[519,371],[372,374,524],[443,373,525,227,374],[527,377],[375,533],[447,377,376,534,227],[377,536],[173,542,378,32],[550,379],[398,552,452,551,380],[381,554],[565,382],[573,384,383],[575,384,574,390,227],[388,385,577],[386,388,579,227,578],[387,581],[390,584],[389],[587,390],[391,592],[593,393,453,392,227],[393,595],[394,601],[602,395,396,227,557],[604,396],[397,607],[398,173,610,32],[618,399],[488,400,619,405,29],[403,401,620],[403,622,621,227,402],[173,405,489,32],[404],[173,405,32,624],[173,414,32],[407],[],[415,172],[348,398,349,361,350,405,360,378],[172],[351,410,172],[351,410,172],[411,351,412,356,172],[413,172],[],[429],[419,418],[438,464],[417],[419],[420,419,422,365],[419,421,365,367],[419,421],[426,419,423,383],[419,424,385,383],[419,425,385,383],[419,424],[419,401,427],[430,419,431],[419],[433,432],[],[],[435],[],[439],[439,438],[464],[458],[439,437,413],[440],[441,440],[442,362,440],[443,445,362,446,372,440],[486],[486,445],[443,362,372,440],[447,375,444,362,449,450,372,440],[486],[486,449,446],[362,448],[451,448],[452,448,379],[391,455,453,448,456,379],[486,450],[486,455],[454,379],[439],[354,353,352],[479,462],[],[],[465],[411],[467,464,466],[464],[411,468],[],[470,166,437],[471,472],[],[473,438],[],[417,166,475],[418,476],[],[357],[],[],[481],[],[166,483,440],[484,413],[],[491],[441,487],[],[486,456],[488,486,399],[486,488,489,399],[486,492,493],[486],[441,494,487],[],[377,364,363,371],[498],[],[],[503],[422,501],[500],[501],[504,501,505],[501],[506],[],[],[420,510],[435],[],[368],[514,421],[515],[],[],[500,166,517],[422,518],[435],[521,520],[],[276,523,522],[258],[258],[373],[526],[],[528,166,444],[530,529,446],[445,531,227],[532],[31],[],[376],[535],[],[537,166,448],[539,450,538],[449,227,540],[541],[31],[],[451,544,546,545,543],[],[],[548,547,549],[31],[],[],[502],[381,393,397,396,382,390,380],[553],[],[],[561],[425,556],[555],[556],[394,556,557],[558],[558,559],[563,556,562],[556],[564],[],[569],[426,567],[566],[567],[567,571,570],[567],[572],[],[],[576,423],[435],[],[386,387],[424,580],[515],[],[555,166,582],[583,425],[435],[166,566,585],[426,586],[515],[589,588],[],[591,276,590],[258],[258],[392],[594],[],[454,166,596],[597,456,598],[599,455,227],[600],[31],[],[395],[603],[],[558,605,166],[606],[],[608,609,559],[],[],[613,612,614,611,457],[],[],[617,616,615],[31],[],[],[560,568],[400],[31],[402],[427,623],[435],[],[490,626,428,627,625],[],[],[31],[629],[],[205,636],[637],[724,206,643,32],[205],[633,205],[634,205],[],[638],[641,633,639,640],[],[],[642],[],[652,650,646,644,647,649,645,648],[],[],[647],[],[654,655],[651],[],[],[657,632,656],[654],[],[],[657,658],[671,672],[667],[634,660],[],[659],[659,635,671,661,663,664],[],[662,671],[662,671,664],[665,662],[659,669,668],[659],[634,660,670],[],[632,675,661,673,227],[676,675],[674],[],[679,678,680,677],[717,718],[678,684],[690,688,676,687,681],[689,678,683],[690,691],[682,683],[],[682,681],[682,685,686],[682],[435],[],[515],[],[692,691],[697,696,695],[662,166,693],[635,663,694],[],[698,699,697,227,664],[699],[715],[674],[701,679,702,707,700],[702],[708,707],[703,679],[704,706,705],[],[],[515],[709,711,710],[711],[],[],[679,712],[713,714],[],[],[676,716],[],[665,632,720,719,227],[720],[674],[632,721],[723,722],[],[258],[666,643,653,725],[],[727,761],[729,762,728,763],[765,272,729,32],[730,768],[732,771,769,731,770],[732,774,272,32],[777,733],[778,734,735,780,779],[783,735,272,32],[736,786],[737,738,788,787],[738,272,32,790],[739,793],[805,742,740],[795,749,809,741,742,806],[810,272,32],[743],[813,272,32],[745],[],[270,759],[760,271],[732,738,739,726,735,729],[270,807],[271],[727,271,750],[271,751],[752,730,271],[753,271],[733,754,271],[271,755],[736,756,271],[757,271],[],[],[728],[764,750],[],[],[766,751,767],[],[],[731],[772],[],[752,773],[],[],[753,776,775],[],[],[734],[781],[],[782,754],[],[],[785,784,755],[],[],[737],[789,756],[],[],[757,791,792],[],[],[798],[758],[794,808],[795,794,740],[795,794,740,796],[794,799,800],[794],[802,758,803,801],[],[],[804],[],[741],[],[],[],[916,918,6,920,917,97,919],[812,811,796],[],[],[815,797,814],[],[],[837,817],[818,841],[854,819],[868,820,867],[821,869],[822,877,878],[824,879,823],[824,885],[887],[826],[],[835,311],[312,836],[],[818,816,817,819],[839,311],[831,311],[881,832,311],[312,883],[],[],[831,840,838],[],[],[1000,6,97,1001,999,998],[844],[832],[842],[846,842,845],[842],[847,848,276],[832,851,849,850],[258],[],[852],[853],[],[],[859],[856,843],[],[855],[855,857],[855,861,860],[855],[862,863],[],[843,865,864],[],[856,866],[],[821,820],[824],[873],[857],[870,882],[870,871],[870,874,875],[870],[876,857],[],[822],[823],[834,871,833,884,880],[],[],[],[],[1064,1066,1067,1065,1068,6,1063,97,649,1069],[886,872],[],[888,858],[],[927,890],[928,892,921,891,227],[892,809,931,32],[893,933],[894,895,939],[934,899,895],[896,941],[945,897],[898,894,947,946,948],[809,894,954,32],[955,900],[923,902,901,956],[809,902,957,32],[958,903],[905,959,960,904],[809,905,964,32],[965,906],[972,908,907],[934,894,912,908],[909,974],[910,976],[911,978,907,979,977],[907,983],[913,985],[960,914,968,915],[809,986,32,915],[987,809,32],[917],[],[925,807],[926,808],[892,893,889,905,899,912,906,902,915],[807],[808],[808,922],[923,808],[],[],[891],[930,929],[],[],[932],[],[935],[922],[934,937,936],[934],[938,922],[],[896],[941],[944],[940,941],[942,941],[941],[898],[949,947,950],[],[953,943],[951,940],[942,952],[],[],[],[932],[901],[],[932],[904],[962,961],[],[924,963],[],[],[932],[969],[967],[],[966],[970,967,971],[967],[804],[909],[974],[975],[974],[911],[980,981],[],[435],[973,982],[],[],[966,166,984],[932],[914],[932],[804],[989,1004],[990,1013],[991,997,1025,992],[1030,992],[993,1033,1026,687],[994,1038],[995,1044],[1051,996],[1053,997],[689,1028,992],[999],[],[1003,839],[989,990,988],[839],[],[1008],[1002],[1005,1007],[1005,1006],[1005,1009,1010],[1005],[1011,1002,1012],[],[258],[1019],[1015],[],[1017,1014],[1018,1016,1014],[1046,1045],[1020,1014,1021],[1014],[1022,1023],[],[1024,1015],[],[994,993,995,996],[1027,1029],[],[1027,1026],[1027,1028],[1027,1032,1031],[1027],[435],[1036,1034,1035],[1037,1006],[],[515],[],[1041],[1029,1007],[1039],[1039,1043,1042],[1039],[1029,1007],[1047],[1016,1040],[1045],[1049,1045,1048],[1045],[1016,1040,1050],[],[1046,1052],[],[1018,166,1017],[1055,1085],[1056,1097],[1057,1108],[1058,1114],[1120,1059],[1060,1122],[1061,1125],[1128,1062],[1131],[1064],[],[881,1082],[1083,882],[883,1084],[],[1058,1054,1057,1056,1060,1061,1055,1059,1062],[881],[881,1070],[881,1071],[881,1072],[882],[1074,882],[1075,882],[1076,882],[1077,882],[1078,882],[1079,882],[883],[],[],[],[1088],[1070,1071],[1086],[1089,1086,1090],[1086],[1092,1070,1091],[],[276,1094,1093],[1095,1071,1096],[515],[],[852],[1100],[1072,1073],[1098],[1101,1098,1102],[1098],[1072,1103,1104,1105],[],[435],[1106,1107,1073],[],[852],[1074,1110,1109],[],[276,1112,1111],[276,1099,1113],[258],[258],[1075,1115,1116],[],[1118,276,1117],[276,1087,1119],[258],[258],[1121,1081,1076],[],[1124,1123,1077],[],[258],[1078,1126,1127],[],[258],[1079,1129,1130],[],[258],[1080,1132,1133],[],[258]],"attribute":["Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Return Stmt ","Method Declaration ","STATIC","Class Or Interface Type Decoder ","Simple Name getDecoder ","Parameter String cacheKey ","Parameter Type type ","Block Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Name Expr cacheKey ","Name Expr type ","Simple Name type ","Name Expr stream ","Class Or Interface Type Type ","Variable Declaration Expr ","Simple Name decoder ","Name Expr JsoniterSpi ","Name Expr decoder ","Simple Name setMode ","Variable Declarator Decoder decoder = ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name getDecoder ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","NullLiteralExpr","ReturnStmt","Method Call Expr ","Name Expr val ","Simple Name cacheKey ","Simple Name type ","Method Declaration ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","For Each Stmt ","Name Expr extensions ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr extensions ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Try Stmt ","Expression Stmt ","Return Stmt ","Parameter Exception e ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Parameter Exception e ","Expression Stmt ","Expression Stmt ","Throw Stmt ","Expression Stmt ","PRIVATE","SYNCHRONIZED","Class Or Interface Type Decoder ","Simple Name gen ","Parameter String cacheKey ","Parameter Type type ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr type ","Simple Name toBoolean ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr host ","Class Or Interface Type String ","Class Or Interface Type Type ","Variable Declaration Expr ","Simple Name decoder ","Name Expr JsoniterSpi ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr extension ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr CodegenImplNative ","Name Expr classInfo ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr ReflectionDecoderFactory ","Name Expr classInfo ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr DynamicCodegen ","Name Expr source ","Name Expr decoder ","Name Expr decoder ","Variable Declarator Decoder decoder = ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name getDecoder ","Block Stmt ","Simple Name wrap ","Variable Declaration Expr ","Simple Name extensions ","Name Expr JsoniterSpi ","Variable Declarator List<Extension> extensions = ","Class Or Interface Type List ","Method Call Expr ","Simple Name getExtensions ","Block Stmt ","Simple Name extension ","Class Or Interface Type Extension ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name chooseImplementation ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name chooseImpl ","Simple Name type ","Method Declaration ","Block Stmt ","Simple Name extension ","Class Or Interface Type Extension ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name createDecoder ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewDecoder ","Variable Declaration Expr ","Simple Name classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Variable Declarator ClassInfo classInfo = ","Class Or Interface Type ClassInfo ","Object Creation Expr ClassInfo Optional.empty Optional.empty ","Class Or Interface Type ClassInfo ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name get ","Field Access Expr ","Simple Name NATIVE_DECODERS ","Simple Name clazz ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name addPlaceholderDecoderToSupportRecursiveStructure ","Simple Name cacheKey ","Method Declaration ","Block Stmt ","Block Stmt ","Variable Declaration Expr ","Simple Name currentConfig ","Name Expr JsoniterSpi ","Name Expr currentConfig ","Variable Declarator Config currentConfig = ","Class Or Interface Type Config ","Method Call Expr ","Simple Name getCurrentConfig ","Variable Declaration Expr ","Simple Name mode ","Name Expr mode ","Name Expr mode ","Name Expr mode ","Variable Declarator DecodingMode mode = ","Class Or Interface Type DecodingMode ","Method Call Expr ","Simple Name decodingMode ","Block Stmt ","EQUALS","Field Access Expr ","Class Or Interface Type FluentLogger ","Simple Name REFLECTION_MODE ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name create ","Block Stmt ","Name Expr isDoingStaticCodegen ","Null Literal Expr ","Block Stmt ","Catch Clause ","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type Decoder ","Method Call Expr ","Method Call Expr ","Simple Name newInstance ","Name Expr Class ","Simple Name forName ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Block Stmt ","Field Access Expr ","Name Expr DecodingMode ","Simple Name STATIC_MODE ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Name Expr e ","StringLiteralExpr","Variable Declaration Expr ","Primitive Type double ","Name Expr sender ","Name Expr source ","Name Expr source ","Name Expr source ","Name Expr source ","Variable Declarator String source = ","Class Or Interface Type String ","Method Call Expr ","Simple Name genSource ","Simple Name mode ","Simple Name classInfo ","Method Declaration ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Block Stmt ","Simple Name toLong ","Name Expr sender ","String Literal Expr Not Empty  ","Simple Name equals ","Method Call Expr ","Name Expr System ","Simple Name getenv ","String Literal Expr Not Empty  ","Method Call Expr ","Field Access Expr ","Simple Name println ","Binary Expr PLUS ","Name Expr key ","String Literal Expr Not Empty  ","Method Call Expr ","Field Access Expr ","Simple Name println ","Simple Name out ","Block Stmt ","Catch Clause ","Method Call Expr ","Name Expr generatedClassNames ","Simple Name add ","Block Stmt ","Name Expr isDoingStaticCodegen ","Null Literal Expr ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name gen ","Method Call Expr ","Simple Name staticGen ","Simple Name cacheKey ","Simple Name source ","Method Declaration Throws ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Variable Declaration Expr ","Simple Name msg ","Name Expr Arrays ","Name Expr e ","Name Expr msg ","Name Expr msg ","Name Expr msg ","Variable Declarator String msg = ","Class Or Interface Type String ","Binary Expr PLUS ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Method Call Expr ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Simple Name toString ","Field Access Expr ","Simple Name typeArgs ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewDecoder ","Expression Stmt ","Expression Stmt ","If Stmt ","Instance Of Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Instance Of Expr ","Return Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Throw Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Block Stmt ","Throw Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Return Stmt ","Return Stmt ","Class Or Interface Type Type ","Simple Name chooseImpl ","Parameter Type type ","Block Stmt ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr keys ","Return Stmt ","Name Expr typeArgs ","Name Expr pType ","Simple Name typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Variable Declarator Type[] typeArgs = ","Array Type 1 ","Array Creation Expr Type Array Creation Level Not Empty ","Class Or Interface Type Type ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Variable Declaration Expr ","Name Expr cache ","Name Expr pType ","Simple Name clazz ","Name Expr cache ","Name Expr clazz ","Name Expr clazz ","Name Expr cache ","Name Expr clazz ","Name Expr implClazz ","Name Expr implClazz ","Name Expr clazz ","Name Expr clazz ","Name Expr implClazz ","Name Expr implClazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr implClazz ","Name Expr implClazz ","Name Expr clazz ","Class Or Interface Type Class ","Block Stmt ","InstanceOfExpr","Class Or Interface Type ParameterizedType ","ParameterizedType","Variable Declaration Expr ","Simple Name pType ","Variable Declarator ParameterizedType pType = ","Class Or Interface Type ParameterizedType ","Cast Expr ","Class Or Interface Type ParameterizedType ","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type Class ","Method Call Expr ","Simple Name getRawType ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getActualTypeArguments ","Block Stmt ","Class Or Interface Type WildcardType ","WildcardType","Class Expr Object.class ","Class Or Interface Type Object ","Binary Expr LESS ","Method Call Expr ","Class Or Interface Type Class ","Variable Declaration Expr ","Simple Name implClazz ","Name Expr JsoniterSpi ","Name Expr implClazz ","Name Expr implClazz ","Name Expr implClazz ","Variable Declarator Class implClazz = ","Class Or Interface Type Class ","Method Call Expr ","Simple Name getTypeImplementation ","Block Stmt ","Class Expr Collection.class ","Simple Name isAssignableFrom ","Class Or Interface Type Collection ","Variable Declaration Expr ","Name Expr compType ","Simple Name compType ","Name Expr compType ","Variable Declarator Type compType = ","Class Or Interface Type Type ","Class Expr Object.class ","Class Or Interface Type Object ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name length ","Block Stmt ","Field Access Expr ","Integer Literal Expr Note Zero  ","Simple Name length ","IntegerLiteralExpr","Assign Expr ASSIGN ","Array Access Expr 0 ","Integer Literal Expr Zero  ","Object Creation Expr IllegalArgumentException Optional.empty Optional.empty ","Class Or Interface Type IllegalArgumentException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr List.class ","Class Or Interface Type List ","Assign Expr ASSIGN ","Conditional Expr implClazz == null ? ArrayList.class : implClazz ","Binary Expr EQUALS ","Class Expr ArrayList.class ","Null Literal Expr ","Class Or Interface Type ArrayList ","Block Stmt ","Class Expr Set.class ","Class Or Interface Type Set ","Assign Expr ASSIGN ","Conditional Expr implClazz == null ? HashSet.class : implClazz ","Binary Expr EQUALS ","Class Expr HashSet.class ","Null Literal Expr ","Class Or Interface Type HashSet ","Method Call Expr ","Name Expr GenericsHelper ","Simple Name createParameterizedType ","Array Creation Expr Type Array Creation Level Not Empty Array Initializer Expr ","Null Literal Expr ","Class Or Interface Type Type ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Block Stmt ","Class Expr Map.class ","Simple Name isAssignableFrom ","Class Or Interface Type Map ","Variable Declaration Expr ","Name Expr keyType ","Simple Name keyType ","Name Expr keyType ","Name Expr keyType ","Name Expr keyType ","Name Expr keyType ","Variable Declarator Type keyType = ","Class Or Interface Type Type ","Class Expr String.class ","Class Or Interface Type String ","Variable Declaration Expr ","Name Expr valueType ","Simple Name valueType ","Name Expr valueType ","Variable Declarator Type valueType = ","Class Or Interface Type Type ","Class Expr Object.class ","Class Or Interface Type Object ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name length ","Block Stmt ","Field Access Expr ","Integer Literal Expr Note Zero  ","Simple Name length ","Assign Expr ASSIGN ","Array Access Expr 0 ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Array Access Expr 1 ","Integer Literal Expr Note Zero  ","Object Creation Expr IllegalArgumentException Optional.empty Optional.empty ","Class Or Interface Type IllegalArgumentException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr Map.class ","Class Or Interface Type Map ","Assign Expr ASSIGN ","Conditional Expr implClazz == null ? HashMap.class : implClazz ","Binary Expr EQUALS ","Class Expr HashMap.class ","Null Literal Expr ","Class Or Interface Type HashMap ","Block Stmt ","Class Expr Object.class ","Class Or Interface Type Object ","Assign Expr ASSIGN ","Class Expr String.class ","Class Or Interface Type String ","Method Call Expr ","Name Expr MapKeyDecoders ","Simple Name registerOrGetExisting ","Method Call Expr ","Name Expr GenericsHelper ","Simple Name createParameterizedType ","Array Creation Expr Type Array Creation Level Not Empty Array Initializer Expr ","Null Literal Expr ","Class Or Interface Type Type ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Block Stmt ","Null Literal Expr ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name length ","Method Call Expr ","Name Expr GenericsHelper ","Simple Name createParameterizedType ","Null Literal Expr ","Void Type ","Simple Name addPlaceholderDecoderToSupportRecursiveStructure ","Parameter final String cacheKey ","Block Stmt ","Return Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Class Or Interface Type String ","Expression Stmt ","Method Call Expr ","Return Stmt ","Simple Name addNewDecoder ","Object Creation Expr Decoder Optional.empty Optional.empty ","Class Or Interface Type Decoder ","Method Declaration Throws ","Name Expr concatTag ","PUBLIC","Class Or Interface Type Object ","Simple Name decode ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Class Or Interface Type JsonIterator ","Expression Stmt ","If Stmt ","Variable Declaration Expr ","Simple Name decoder ","Name Expr JsoniterSpi ","Name Expr decoder ","Name Expr decoder ","Name Expr JsoniterSpi ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Variable Declarator Decoder decoder = ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name getDecoder ","Binary Expr EQUALS ","Block Stmt ","This Expr ","ThisExpr","For Stmt ","If Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Unary Expr ++ ","Block Stmt ","Name Expr i ","Simple Name i ","Simple Name e ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","LESS","Integer Literal Expr Note Zero  ","POSTFIX_INCREMENT","Expression Stmt ","If Stmt ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getDecoder ","Binary Expr EQUALS ","Block Stmt ","Block Stmt ","This Expr ","Try Stmt ","Block Stmt ","Catch Clause ","Expression Stmt ","Method Call Expr ","Name Expr Thread ","Simple Name sleep ","Integer Literal Expr Note Zero  ","Parameter InterruptedException e ","Block Stmt ","Class Or Interface Type InterruptedException ","Simple Name e ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Break Stmt ","break;","Binary Expr EQUALS ","Block Stmt ","This Expr ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name decode ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Block Stmt ","Return Stmt ","Class Or Interface Type String ","Simple Name genSource ","Parameter DecodingMode mode ","Parameter ClassInfo classInfo ","Block Stmt ","Name Expr mode ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Class Or Interface Type DecodingMode ","Class Or Interface Type ClassInfo ","Block Stmt ","Field Access Expr ","Simple Name isArray ","Simple Name clazz ","Method Call Expr ","Name Expr CodegenImplArray ","Simple Name genArray ","Block Stmt ","Class Expr Map.class ","Simple Name isAssignableFrom ","Field Access Expr ","Class Or Interface Type Map ","Simple Name clazz ","Method Call Expr ","Name Expr CodegenImplMap ","Simple Name genMap ","Block Stmt ","Class Expr Collection.class ","Simple Name isAssignableFrom ","Field Access Expr ","Class Or Interface Type Collection ","Simple Name clazz ","Method Call Expr ","Name Expr CodegenImplArray ","Simple Name genCollection ","Block Stmt ","Field Access Expr ","Simple Name isEnum ","Simple Name clazz ","Method Call Expr ","Name Expr CodegenImplEnum ","Simple Name genEnum ","Variable Declaration Expr ","Simple Name desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Variable Declarator ClassDescriptor desc = ","Class Or Interface Type ClassDescriptor ","Method Call Expr ","Name Expr ClassDescriptor ","Simple Name getDecodingClassDescriptor ","Boolean Literal Expr false ","false","Block Stmt ","Simple Name shouldUseStrictMode ","Simple Name mode ","Simple Name desc ","Method Declaration ","Method Call Expr ","Name Expr CodegenImplObjectStrict ","Simple Name genObjectUsingStrict ","Method Call Expr ","Name Expr CodegenImplObjectHash ","Simple Name genObjectUsingHash ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name staticGen ","Parameter String cacheKey ","Parameter String source ","Class Or Interface Type IOException ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr source ","Class Or Interface Type String ","Class Or Interface Type String ","Method Call Expr ","Simple Name createDir ","Simple Name cacheKey ","Method Declaration ","Variable Declaration Expr ","Simple Name fileName ","Name Expr fileName ","Variable Declarator String fileName = ","Class Or Interface Type String ","Binary Expr PLUS ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr '.' ","Char Literal Expr '/' ","'.'","'/'","Variable Declaration Expr ","Simple Name fileOutputStream ","Name Expr isDoingStaticCodegen ","Name Expr fileOutputStream ","Name Expr fileOutputStream ","Variable Declarator FileOutputStream fileOutputStream = ","Class Or Interface Type FileOutputStream ","Object Creation Expr FileOutputStream Optional.empty Optional.empty ","Class Or Interface Type FileOutputStream ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Field Access Expr ","Simple Name outputDir ","Block Stmt ","Block Stmt ","Variable Declaration Expr ","Simple Name writer ","Name Expr writer ","Name Expr writer ","Variable Declarator OutputStreamWriter writer = ","Class Or Interface Type OutputStreamWriter ","Object Creation Expr OutputStreamWriter Optional.empty Optional.empty ","Class Or Interface Type OutputStreamWriter ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name staticGen ","Simple Name cacheKey ","Simple Name writer ","Simple Name source ","Method Declaration Throws ","Method Call Expr ","Simple Name close ","Method Call Expr ","Simple Name close ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Expression Stmt ","For Each Stmt ","Name Expr allBindings ","Variable Declaration Expr ","If Stmt ","Binary Expr OR ","Return Stmt ","If Stmt ","Field Access Expr ","Return Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Expression Stmt ","For Each Stmt ","Name Expr allBindings ","Variable Declaration Expr ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Return Stmt ","Primitive Type boolean ","Simple Name shouldUseStrictMode ","Parameter DecodingMode mode ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr mode ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Class Or Interface Type DecodingMode ","Class Or Interface Type ClassDescriptor ","Block Stmt ","Field Access Expr ","Return Stmt ","Simple Name DYNAMIC_MODE_AND_MATCH_FIELD_STRICTLY ","Boolean Literal Expr true ","true","Variable Declaration Expr ","Simple Name allBindings ","Variable Declarator List<Binding> allBindings = ","Class Or Interface Type List ","Method Call Expr ","Simple Name allDecoderBindings ","Block Stmt ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type Binding ","Block Stmt ","Binary Expr OR ","OR","Field Access Expr ","Field Access Expr ","Field Access Expr ","Simple Name asMissingWhenNotPresent ","Simple Name asExtraWhenPresent ","Simple Name shouldSkip ","Boolean Literal Expr true ","Block Stmt ","Simple Name asExtraForUnknownProperties ","Boolean Literal Expr true ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Field Access Expr ","Simple Name isEmpty ","Simple Name keyValueTypeWrappers ","Boolean Literal Expr true ","Variable Declaration Expr ","Name Expr hasBinding ","Simple Name hasBinding ","Name Expr hasBinding ","Variable Declarator boolean hasBinding = ","Primitive Type boolean ","Boolean Literal Expr false ","Block Stmt ","Name Expr allBinding ","Simple Name allBinding ","Class Or Interface Type Binding ","Block Stmt ","Field Access Expr ","GREATER","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name fromNames ","Assign Expr ASSIGN ","Boolean Literal Expr true ","Block Stmt ","Boolean Literal Expr true ","Boolean Literal Expr false ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Void Type ","Simple Name createDir ","Parameter String cacheKey ","Block Stmt ","Name Expr cacheKey ","Class Or Interface Type String ","Variable Declaration Expr ","Simple Name parts ","Name Expr parts ","Name Expr parts ","Variable Declarator String[] parts = ","Name Expr pendings ","Method Call Expr ","Simple Name split ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name parent ","Name Expr isDoingStaticCodegen ","Name Expr parent ","Name Expr parent ","Name Expr current ","Variable Declarator File parent = ","Class Or Interface Type File ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Field Access Expr ","Simple Name outputDir ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Binary Expr MINUS ","Field Access Expr ","MINUS","Integer Literal Expr Note Zero  ","Simple Name length ","Variable Declaration Expr ","Name Expr next ","Name Expr part ","Variable Declarator String part = ","Class Or Interface Type String ","Array Access Expr i ","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Variable Declarator File current = ","Void Type ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Method Call Expr ","Simple Name mkdir ","Assign Expr ASSIGN ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name staticGen ","Parameter String cacheKey ","Parameter OutputStreamWriter writer ","Parameter String source ","Class Or Interface Type IOException ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr source ","Class Or Interface Type String ","Class Or Interface Type OutputStreamWriter ","Class Or Interface Type String ","Variable Declaration Expr ","Simple Name className ","Name Expr className ","Variable Declarator String className = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Binary Expr PLUS ","Method Call Expr ","Integer Literal Expr Note Zero  ","Simple Name lastIndexOf ","Char Literal Expr '.' ","Variable Declaration Expr ","Simple Name packageName ","Name Expr packageName ","Variable Declarator String packageName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name lastIndexOf ","Char Literal Expr '.' ","Method Call Expr ","Simple Name write ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Method Call Expr ","Simple Name write ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","String Literal Expr Not Empty  "]}
{"fileName":"src/main/java/com/jsoniter/Codegen.java","version":"0.9.22","methodName":"gen-Codegen-String-Type","callMethodNameReferTo":{"129":"src/main/java/com/jsoniter/spi/JsoniterSpi.java?getExtensions-JsoniterSpi-","193":"src/main/java/com/jsoniter/spi/Config.java?decodingMode-Config-","136":"src/main/java/com/jsoniter/spi/Extension.java?chooseImplementation-Extension-Type","201":"src/main/java/com/jsoniter/ReflectionDecoderFactory.java?create-ReflectionDecoderFactory-ClassInfo","147":"src/main/java/com/jsoniter/spi/Extension.java?createDecoder-Extension-String-Type","276":"src/main/java/com/jsoniter/DynamicCodegen.java?gen-DynamicCodegen-String-String","117":"src/main/java/com/jsoniter/spi/JsoniterSpi.java?getDecoder-JsoniterSpi-String","662":"src/main/java/com/jsoniter/spi/JsoniterSpi.java?getDecoder-JsoniterSpi-String","151":"src/main/java/com/jsoniter/spi/JsoniterSpi.java?addNewDecoder-JsoniterSpi-String-Decoder","184":"src/main/java/com/jsoniter/spi/JsoniterSpi.java?getCurrentConfig-JsoniterSpi-","314":"src/main/java/com/jsoniter/spi/JsoniterSpi.java?addNewDecoder-JsoniterSpi-String-Decoder","638":"src/main/java/com/jsoniter/spi/JsoniterSpi.java?getDecoder-JsoniterSpi-String","607":"src/main/java/com/jsoniter/spi/JsoniterSpi.java?addNewDecoder-JsoniterSpi-String-Decoder"},"num":1103,"succs":[[89,1],[119,2],[4,92,121,3,120],[4,93,59,123],[5,124],[6,131,7],[125,9,7],[8,132],[6,134],[138,10],[11,12,143],[125,18,6,12],[144,13],[146,14],[149,15],[16,96,150,11,120],[151,17],[11,98,59,123],[19,154],[163,20],[170,21],[23,102,22,171,120],[23,103,59,123],[24,172],[177,176,25],[178,26],[27,186],[195,28],[31,197,188,196,29],[200,30],[31,107,59,123],[32,203],[40,33,205,196,204],[40,206,207,36,34],[208,35],[40,109,59,123],[217,37,218],[219,38],[40,220,189,39,196],[40,223],[228,41],[242,42],[248,43],[253,46,44,251,252],[45,257],[46,263],[47,267,54,58,268],[48,269],[272,49,51],[50,51,196,273,274],[275,53],[52],[278,53],[113,58,59,123],[284,55,285],[56,286],[307,57],[311,58],[314],[62,61,65,60,67,66,63,64],[61],[62],[],[64],[],[69,87],[88,82],[4,24,18,19,23,5,0,9,10,20,1],[69],[],[69,68],[69,70],[69,174,71],[69,72],[69,73],[69,74],[69,75],[69,75,76,280],[69,77],[82,80,81],[132],[82],[],[79,84],[79,141],[83],[83,85],[],[],[115],[68,91],[],[90],[92,90,2],[93,90,70,85,95],[144],[94],[96,94,15],[97,94,15],[100,98,101,94],[],[155],[99],[102,21,99],[105,103,106,99],[],[101,155],[104],[104,73,107],[110,108],[111,76,109,108,112],[],[232,82,230],[109,108],[113,108],[90,116,117],[90],[68,91,118],[],[3],[],[122],[],[],[127],[126],[],[125,128,129],[125],[130,126],[],[8],[133],[132],[79,135,136],[],[137,80,81],[],[139,83,135],[142,84,140],[],[],[375,376,61,377,60,378],[14,13],[145],[144],[135,147,94],[70,148,85,95],[],[16,17],[122],[97,71,152,153],[],[],[159],[86],[106,155,240],[155,156],[157,155],[161,155,160],[155],[86,162],[],[164,135,99],[165,167,166],[100,168],[],[169,101],[],[],[22],[122],[72,175,173],[],[],[61,599,60,597,598,600],[40,31,27,46,41,25,42,26],[58],[182],[180],[],[179],[183,179,184],[179],[180,185],[],[191],[181],[187],[188,187],[239,187,189],[192,187,193],[187],[181,194],[],[30,29],[],[199,198],[],[],[104,135,201],[105,202,106],[],[33],[],[122],[34,35],[216,36],[209,135,108],[210,211],[],[212,213],[73,215,214],[],[],[],[37],[],[],[39],[222,221],[],[],[224,225,226],[],[227],[],[],[235],[190,156],[231,229],[229],[230],[232,230,281,112],[233,230],[237,236,229],[229],[190,241,238,156],[],[],[],[715,716,714,717,61,60,713],[135,243,230],[245,246,244],[245,247,231],[],[227],[227],[45,44],[43],[43],[227],[],[255,254,256],[],[],[227],[260,258,259],[261,249],[],[245,74,262],[],[227],[264,232,265],[266,250],[],[],[47,48,53],[54,283],[75,270,271],[],[],[50],[],[122],[110,276,135],[111,277,76,112,59],[],[282,77,233,279],[],[],[],[794,796,61,797,60,618,798,799,795],[56,55,57],[],[],[293],[158,157,289,288],[],[],[234,287,291],[287],[290],[294,287,295],[287],[289,245,296],[297,245,298],[245,299,300],[227],[245,301,302],[304,288,305],[157,245,303],[227],[227],[],[158,306],[],[308,135,290],[245,234,309],[245,310,291],[227],[292,313,312],[],[],[316,114,315,78],[],[],[318,385],[319,405],[428,320,324],[430,379,321,324,429],[322,432],[323,438],[329,443],[327,325,446],[327,326,447,381,429],[142,329,123,449],[328],[451,329],[330,454],[464,331],[411,332,465,466,347],[333,468],[476,335,334],[478,477,335,196,340],[338,336,480],[338,481,482,196,337],[485,340],[339],[488,340],[341,343,493],[412,342,196,494,343],[496,346],[344,502],[416,345,346,503,196],[346,505],[142,511,123,347],[519,348],[367,521,421,520,349],[350,523],[534,351],[542,353,352],[544,353,543,359,196],[357,354,546],[355,357,548,196,547],[356,550],[359,553],[358],[556,359],[360,561],[562,362,422,361,196],[362,564],[363,570],[571,364,365,196,526],[573,365],[366,576],[367,142,579,123],[587,368],[457,369,588,374,120],[372,370,589],[372,591,590,371,196],[142,374,458,123],[373],[142,374,123,593],[142,383,123],[376],[],[384,141],[317,367,330,318,319,374,329,347],[141],[320,379,141],[320,379,141],[380,320,381,325,141],[382,141],[],[398],[388,387],[407,433],[386],[388],[389,388,391,334],[388,334,390,336],[388,390],[395,392,388,352],[388,393,354,352],[388,394,354,352],[388,393],[388,370,396],[399,388,400],[388],[402,401],[],[],[404],[],[408],[408,407],[433],[427],[408,406,382],[409],[410,409],[411,331,409],[412,414,331,341,415,409],[455],[455,414],[412,331,341,409],[416,344,331,413,418,419,341,409],[455],[455,418,415],[417,331],[420,417],[421,417,348],[360,424,422,417,425,348],[455,419],[455,424],[423,348],[408],[323,322,321],[448,431],[],[],[434],[380],[436,433,435],[433],[380,437],[],[439,135,406],[440,441],[],[442,407],[],[386,135,444],[387,445],[],[326],[],[],[450],[],[135,452,409],[453,382],[],[460],[410,456],[],[455,425],[457,455,368],[457,455,458,368],[455,461,462],[455],[410,456,463],[],[346,333,332,340],[467],[],[],[472],[391,470],[469],[470],[473,470,474],[470],[475],[],[],[389,479],[404],[],[337],[483,390],[484],[],[],[469,135,486],[391,487],[404],[490,489],[],[245,492,491],[227],[227],[342],[495],[],[497,135,413],[499,498,415],[414,500,196],[501],[122],[],[345],[504],[],[506,135,417],[508,419,507],[418,196,509],[510],[122],[],[420,513,515,514,512],[],[],[517,516,518],[122],[],[],[471],[350,362,359,366,351,365,349],[522],[],[],[530],[394,525],[524],[525],[363,525,526],[527],[527,528],[532,525,531],[525],[533],[],[538],[395,536],[535],[536],[536,540,539],[536],[541],[],[],[545,392],[404],[],[356,355],[393,549],[484],[],[524,135,551],[552,394],[404],[135,535,554],[395,555],[484],[558,557],[],[560,245,559],[227],[227],[361],[563],[],[423,135,565],[566,425,567],[568,424,196],[569],[122],[],[364],[572],[],[527,574,135],[575],[],[577,578,528],[],[],[582,581,580,583,426],[],[],[586,585,584],[122],[],[],[529,537],[369],[122],[371],[396,592],[404],[],[459,595,397,596,594],[],[],[122],[598],[],[174,605],[606],[693,175,612,123],[174],[602,174],[603,174],[],[607],[610,602,608,609],[],[],[611],[],[621,619,615,613,616,618,614,617],[],[],[616],[],[623,624],[620],[],[],[626,625,601],[623],[],[],[626,627],[640,641],[636],[603,629],[],[628],[628,604,640,630,632,633],[],[631,640],[631,640,633],[634,631],[628,638,637],[628],[603,629,639],[],[601,644,630,642,196],[645,644],[643],[],[648,647,649,646],[686,687],[647,653],[659,657,645,650,656],[647,652,658],[659,660],[651,652],[],[651,650],[651,654,655],[651],[404],[],[484],[],[660,661],[666,664,665],[631,135,662],[604,632,663],[],[667,668,666,196,633],[668],[684],[643],[670,648,671,676,669],[671],[677,676],[672,648],[673,675,674],[],[],[484],[678,680,679],[680],[],[],[648,681],[682,683],[],[],[645,685],[],[634,601,689,688,196],[689],[643],[601,690],[692,691],[],[227],[635,622,612,694],[],[696,730],[698,731,697,732],[734,241,698,123],[699,737],[701,740,738,700,739],[701,743,241,123],[746,702],[747,703,704,749,748],[752,704,241,123],[705,755],[706,707,757,756],[707,241,759,123],[708,762],[774,711,709],[718,764,778,710,711,775],[779,241,123],[712],[782,241,123],[714],[],[239,728],[729,240],[701,707,708,695,704,698],[239,776],[240],[696,240,719],[240,720],[721,699,240],[722,240],[723,702,240],[240,724],[705,725,240],[726,240],[],[],[697],[733,719],[],[],[735,720,736],[],[],[700],[741],[],[721,742],[],[],[722,745,744],[],[],[703],[750],[],[751,723],[],[],[754,753,724],[],[],[706],[758,725],[],[],[726,760,761],[],[],[767],[727],[763,777],[763,764,709],[764,763,709,765],[763,768,769],[763],[771,727,772,770],[],[],[773],[],[710],[],[],[],[885,887,889,61,886,60,888],[781,780,765],[],[],[784,766,783],[],[],[786,806],[787,810],[823,788],[837,789,836],[790,838],[791,846,847],[793,848,792],[793,854],[856],[795],[],[804,280],[281,805],[],[787,785,786,788],[808,280],[800,280],[850,801,280],[281,852],[],[],[800,809,807],[],[],[969,61,60,970,968,967],[813],[801],[811],[815,811,814],[811],[816,817,245],[801,820,818,819],[227],[],[821],[822],[],[],[828],[825,812],[],[824],[824,826],[824,830,829],[824],[831,832],[],[812,833,834],[],[825,835],[],[790,789],[793],[842],[826],[839,851],[839,840],[839,843,844],[839],[845,826],[],[791],[792],[803,840,802,853,849],[],[],[],[],[1033,1035,1037,1036,1034,61,1032,60,618,1038],[855,841],[],[857,827],[],[896,859],[897,861,890,860,196],[861,778,900,123],[862,902],[863,864,908],[903,868,864],[865,910],[914,866],[867,863,916,915,917],[778,863,923,123],[924,869],[892,871,870,925],[778,871,926,123],[927,872],[874,928,929,873],[778,933,874,123],[934,875],[941,877,876],[903,863,881,877],[878,943],[879,945],[880,947,876,948,946],[876,952],[882,954],[929,883,937,884],[778,955,123,884],[778,956,123],[886],[],[894,776],[895,777],[861,862,874,868,858,881,875,871,884],[776],[777],[777,891],[892,777],[],[],[860],[899,898],[],[],[901],[],[904],[891],[903,906,905],[903],[907,891],[],[865],[910],[913],[909,910],[911,910],[910],[867],[918,916,919],[],[922,912],[920,909],[911,921],[],[],[],[901],[870],[],[901],[873],[931,930],[],[893,932],[],[],[901],[938],[936],[],[935],[939,936,940],[936],[773],[878],[943],[944],[943],[880],[949,950],[],[404],[942,951],[],[],[935,135,953],[901],[883],[901],[773],[958,973],[959,982],[960,966,994,961],[999,961],[962,1002,995,656],[963,1007],[964,1013],[1020,965],[1022,966],[658,997,961],[968],[],[972,808],[958,959,957],[808],[],[977],[971],[974,976],[974,975],[974,978,979],[974],[980,971,981],[],[227],[988],[984],[],[986,983],[987,985,983],[1015,1014],[989,983,990],[983],[991,992],[],[993,984],[],[963,962,964,965],[996,998],[],[996,995],[996,997],[996,1001,1000],[996],[404],[1005,1003,1004],[1006,975],[],[484],[],[1010],[998,976],[1008],[1008,1011,1012],[1008],[998,976],[1016],[985,1009],[1014],[1018,1014,1017],[1014],[985,1009,1019],[],[1015,1021],[],[987,135,986],[1054,1024],[1025,1066],[1026,1077],[1027,1083],[1089,1028],[1029,1091],[1030,1094],[1097,1031],[1100],[1033],[],[850,1051],[1052,851],[852,1053],[],[1027,1023,1026,1025,1029,1030,1024,1031,1028],[850],[850,1039],[850,1040],[850,1041],[851],[1043,851],[1044,851],[1045,851],[1046,851],[1047,851],[1048,851],[852],[],[],[],[1057],[1039,1040],[1055],[1058,1055,1059],[1055],[1061,1039,1060],[],[245,1063,1062],[1064,1040,1065],[484],[],[821],[1069],[1041,1042],[1067],[1070,1067,1071],[1067],[1041,1072,1073,1074],[],[404],[1075,1076,1042],[],[821],[1043,1079,1078],[],[245,1081,1080],[245,1068,1082],[227],[227],[1044,1085,1084],[],[1087,245,1086],[245,1088,1056],[227],[227],[1090,1050,1045],[],[1093,1092,1046],[],[227],[1047,1095,1096],[],[227],[1048,1098,1099],[],[227],[1049,1101,1102],[],[227]],"attribute":["Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","For Each Stmt ","Name Expr extensions ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr extensions ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Try Stmt ","Expression Stmt ","Return Stmt ","Parameter Exception e ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Parameter Exception e ","Expression Stmt ","Expression Stmt ","Throw Stmt ","Expression Stmt ","Method Declaration ","PRIVATE","STATIC","SYNCHRONIZED","Class Or Interface Type Decoder ","Simple Name gen ","Parameter String cacheKey ","Parameter Type type ","Block Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr type ","Simple Name toBoolean ","Name Expr type ","Simple Name type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr host ","Class Or Interface Type String ","Class Or Interface Type Type ","Variable Declaration Expr ","Simple Name decoder ","Name Expr JsoniterSpi ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr extension ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr CodegenImplNative ","Name Expr classInfo ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr ReflectionDecoderFactory ","Name Expr classInfo ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr DynamicCodegen ","Name Expr source ","Name Expr decoder ","Name Expr decoder ","Variable Declarator Decoder decoder = ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name getDecoder ","Block Stmt ","NOT_EQUALS","Simple Name wrap ","NullLiteralExpr","ReturnStmt","Variable Declaration Expr ","Simple Name extensions ","Name Expr JsoniterSpi ","Variable Declarator List<Extension> extensions = ","Class Or Interface Type List ","Method Call Expr ","Simple Name getExtensions ","Block Stmt ","Simple Name extension ","Class Or Interface Type Extension ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name chooseImplementation ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name chooseImpl ","Simple Name type ","Method Declaration ","Block Stmt ","Simple Name extension ","Class Or Interface Type Extension ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name createDecoder ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewDecoder ","Variable Declaration Expr ","Simple Name classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Variable Declarator ClassInfo classInfo = ","Class Or Interface Type ClassInfo ","Object Creation Expr ClassInfo Optional.empty Optional.empty ","Class Or Interface Type ClassInfo ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name get ","Field Access Expr ","Simple Name NATIVE_DECODERS ","Simple Name clazz ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name addPlaceholderDecoderToSupportRecursiveStructure ","Simple Name cacheKey ","Method Declaration ","Block Stmt ","Block Stmt ","Variable Declaration Expr ","Simple Name currentConfig ","Name Expr JsoniterSpi ","Name Expr currentConfig ","Variable Declarator Config currentConfig = ","Class Or Interface Type Config ","Method Call Expr ","Simple Name getCurrentConfig ","Variable Declaration Expr ","Simple Name mode ","Name Expr mode ","Name Expr mode ","Name Expr mode ","Variable Declarator DecodingMode mode = ","Class Or Interface Type DecodingMode ","Method Call Expr ","Simple Name decodingMode ","Block Stmt ","EQUALS","Field Access Expr ","Class Or Interface Type FluentLogger ","Simple Name REFLECTION_MODE ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name create ","Block Stmt ","Name Expr isDoingStaticCodegen ","Null Literal Expr ","Block Stmt ","Catch Clause ","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type Decoder ","Method Call Expr ","Method Call Expr ","Simple Name newInstance ","Name Expr Class ","Simple Name forName ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Block Stmt ","Field Access Expr ","Name Expr DecodingMode ","Simple Name STATIC_MODE ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Name Expr e ","StringLiteralExpr","Variable Declaration Expr ","Primitive Type double ","Name Expr sender ","Name Expr source ","Name Expr source ","Name Expr source ","Name Expr source ","Variable Declarator String source = ","Class Or Interface Type String ","Method Call Expr ","Simple Name genSource ","Simple Name mode ","Simple Name classInfo ","Method Declaration ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Block Stmt ","Simple Name toLong ","Name Expr sender ","String Literal Expr Not Empty  ","Simple Name equals ","Method Call Expr ","Name Expr System ","Simple Name getenv ","String Literal Expr Not Empty  ","Method Call Expr ","Field Access Expr ","Simple Name println ","Binary Expr PLUS ","Name Expr key ","String Literal Expr Not Empty  ","Method Call Expr ","Field Access Expr ","Simple Name println ","Simple Name out ","Block Stmt ","Catch Clause ","Method Call Expr ","Name Expr generatedClassNames ","Simple Name add ","Block Stmt ","Name Expr isDoingStaticCodegen ","Null Literal Expr ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name gen ","Method Call Expr ","Simple Name staticGen ","Simple Name cacheKey ","Simple Name source ","Method Declaration Throws ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Variable Declaration Expr ","Simple Name msg ","Name Expr Arrays ","Name Expr e ","Name Expr msg ","Name Expr msg ","Name Expr msg ","Variable Declarator String msg = ","Class Or Interface Type String ","Binary Expr PLUS ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Method Call Expr ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Simple Name toString ","Field Access Expr ","Simple Name typeArgs ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewDecoder ","Expression Stmt ","Expression Stmt ","If Stmt ","Instance Of Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Instance Of Expr ","Return Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Throw Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Block Stmt ","Throw Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Return Stmt ","Return Stmt ","Class Or Interface Type Type ","Simple Name chooseImpl ","Parameter Type type ","Block Stmt ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr keys ","Return Stmt ","Name Expr typeArgs ","Name Expr pType ","Simple Name typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Variable Declarator Type[] typeArgs = ","Array Type 1 ","Array Creation Expr Type Array Creation Level Not Empty ","Class Or Interface Type Type ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Variable Declaration Expr ","Name Expr cache ","Name Expr pType ","Simple Name clazz ","Name Expr cache ","Name Expr clazz ","Name Expr clazz ","Name Expr cache ","Name Expr clazz ","Name Expr implClazz ","Name Expr implClazz ","Name Expr clazz ","Name Expr clazz ","Name Expr implClazz ","Name Expr implClazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr implClazz ","Name Expr implClazz ","Name Expr clazz ","Class Or Interface Type Class ","Block Stmt ","InstanceOfExpr","Class Or Interface Type ParameterizedType ","ParameterizedType","Variable Declaration Expr ","Simple Name pType ","Variable Declarator ParameterizedType pType = ","Class Or Interface Type ParameterizedType ","Cast Expr ","Class Or Interface Type ParameterizedType ","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type Class ","Method Call Expr ","Simple Name getRawType ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getActualTypeArguments ","Block Stmt ","Class Or Interface Type WildcardType ","WildcardType","Class Expr Object.class ","Class Or Interface Type Object ","Binary Expr LESS ","Method Call Expr ","Class Or Interface Type Class ","Variable Declaration Expr ","Simple Name implClazz ","Name Expr JsoniterSpi ","Name Expr implClazz ","Name Expr implClazz ","Name Expr implClazz ","Variable Declarator Class implClazz = ","Class Or Interface Type Class ","Method Call Expr ","Simple Name getTypeImplementation ","Block Stmt ","Class Expr Collection.class ","Simple Name isAssignableFrom ","Class Or Interface Type Collection ","Variable Declaration Expr ","Name Expr compType ","Simple Name compType ","Name Expr compType ","Variable Declarator Type compType = ","Class Or Interface Type Type ","Class Expr Object.class ","Class Or Interface Type Object ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name length ","Block Stmt ","Field Access Expr ","Integer Literal Expr Note Zero  ","Simple Name length ","IntegerLiteralExpr","Assign Expr ASSIGN ","Array Access Expr 0 ","Integer Literal Expr Zero  ","Object Creation Expr IllegalArgumentException Optional.empty Optional.empty ","Class Or Interface Type IllegalArgumentException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr List.class ","Class Or Interface Type List ","Assign Expr ASSIGN ","Conditional Expr implClazz == null ? ArrayList.class : implClazz ","Binary Expr EQUALS ","Class Expr ArrayList.class ","Null Literal Expr ","Class Or Interface Type ArrayList ","Block Stmt ","Class Expr Set.class ","Class Or Interface Type Set ","Assign Expr ASSIGN ","Conditional Expr implClazz == null ? HashSet.class : implClazz ","Binary Expr EQUALS ","Class Expr HashSet.class ","Null Literal Expr ","Class Or Interface Type HashSet ","Method Call Expr ","Name Expr GenericsHelper ","Simple Name createParameterizedType ","Array Creation Expr Type Array Creation Level Not Empty Array Initializer Expr ","Null Literal Expr ","Class Or Interface Type Type ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Block Stmt ","Class Expr Map.class ","Simple Name isAssignableFrom ","Class Or Interface Type Map ","Variable Declaration Expr ","Name Expr keyType ","Simple Name keyType ","Name Expr keyType ","Name Expr keyType ","Name Expr keyType ","Name Expr keyType ","Variable Declarator Type keyType = ","Class Or Interface Type Type ","Class Expr String.class ","Class Or Interface Type String ","Variable Declaration Expr ","Name Expr valueType ","Simple Name valueType ","Name Expr valueType ","Variable Declarator Type valueType = ","Class Or Interface Type Type ","Class Expr Object.class ","Class Or Interface Type Object ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name length ","Block Stmt ","Field Access Expr ","Integer Literal Expr Note Zero  ","Simple Name length ","Assign Expr ASSIGN ","Array Access Expr 0 ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Array Access Expr 1 ","Integer Literal Expr Note Zero  ","Object Creation Expr IllegalArgumentException Optional.empty Optional.empty ","Class Or Interface Type IllegalArgumentException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr Map.class ","Class Or Interface Type Map ","Assign Expr ASSIGN ","Conditional Expr implClazz == null ? HashMap.class : implClazz ","Binary Expr EQUALS ","Class Expr HashMap.class ","Null Literal Expr ","Class Or Interface Type HashMap ","Block Stmt ","Class Expr Object.class ","Class Or Interface Type Object ","Assign Expr ASSIGN ","Class Expr String.class ","Class Or Interface Type String ","Method Call Expr ","Name Expr MapKeyDecoders ","Simple Name registerOrGetExisting ","Method Call Expr ","Name Expr GenericsHelper ","Simple Name createParameterizedType ","Array Creation Expr Type Array Creation Level Not Empty Array Initializer Expr ","Null Literal Expr ","Class Or Interface Type Type ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Block Stmt ","Null Literal Expr ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name length ","Method Call Expr ","Name Expr GenericsHelper ","Simple Name createParameterizedType ","Null Literal Expr ","Void Type ","Simple Name addPlaceholderDecoderToSupportRecursiveStructure ","Parameter final String cacheKey ","Block Stmt ","Return Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Class Or Interface Type String ","Expression Stmt ","Method Call Expr ","Return Stmt ","Simple Name addNewDecoder ","Object Creation Expr Decoder Optional.empty Optional.empty ","Class Or Interface Type Decoder ","Method Declaration Throws ","Name Expr concatTag ","PUBLIC","Class Or Interface Type Object ","Simple Name decode ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Class Or Interface Type JsonIterator ","Expression Stmt ","If Stmt ","Variable Declaration Expr ","Simple Name decoder ","Name Expr JsoniterSpi ","Name Expr decoder ","Name Expr decoder ","Name Expr JsoniterSpi ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Variable Declarator Decoder decoder = ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name getDecoder ","Binary Expr EQUALS ","Block Stmt ","This Expr ","ThisExpr","For Stmt ","If Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Unary Expr ++ ","Block Stmt ","Name Expr i ","Simple Name i ","Simple Name e ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","LESS","Integer Literal Expr Note Zero  ","POSTFIX_INCREMENT","Expression Stmt ","If Stmt ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getDecoder ","Binary Expr EQUALS ","Block Stmt ","Block Stmt ","This Expr ","Try Stmt ","Block Stmt ","Catch Clause ","Expression Stmt ","Method Call Expr ","Name Expr Thread ","Simple Name sleep ","Integer Literal Expr Note Zero  ","Parameter InterruptedException e ","Block Stmt ","Class Or Interface Type InterruptedException ","Simple Name e ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Break Stmt ","break;","Binary Expr EQUALS ","Block Stmt ","This Expr ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name decode ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Block Stmt ","Return Stmt ","Class Or Interface Type String ","Simple Name genSource ","Parameter DecodingMode mode ","Parameter ClassInfo classInfo ","Block Stmt ","Name Expr mode ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Class Or Interface Type DecodingMode ","Class Or Interface Type ClassInfo ","Block Stmt ","Field Access Expr ","Simple Name isArray ","Simple Name clazz ","Method Call Expr ","Name Expr CodegenImplArray ","Simple Name genArray ","Block Stmt ","Class Expr Map.class ","Simple Name isAssignableFrom ","Field Access Expr ","Class Or Interface Type Map ","Simple Name clazz ","Method Call Expr ","Name Expr CodegenImplMap ","Simple Name genMap ","Block Stmt ","Class Expr Collection.class ","Simple Name isAssignableFrom ","Field Access Expr ","Class Or Interface Type Collection ","Simple Name clazz ","Method Call Expr ","Name Expr CodegenImplArray ","Simple Name genCollection ","Block Stmt ","Field Access Expr ","Simple Name isEnum ","Simple Name clazz ","Method Call Expr ","Name Expr CodegenImplEnum ","Simple Name genEnum ","Variable Declaration Expr ","Simple Name desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Variable Declarator ClassDescriptor desc = ","Class Or Interface Type ClassDescriptor ","Method Call Expr ","Name Expr ClassDescriptor ","Simple Name getDecodingClassDescriptor ","Boolean Literal Expr false ","false","Block Stmt ","Simple Name shouldUseStrictMode ","Simple Name mode ","Simple Name desc ","Method Declaration ","Method Call Expr ","Name Expr CodegenImplObjectStrict ","Simple Name genObjectUsingStrict ","Method Call Expr ","Name Expr CodegenImplObjectHash ","Simple Name genObjectUsingHash ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name staticGen ","Parameter String cacheKey ","Parameter String source ","Class Or Interface Type IOException ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr source ","Class Or Interface Type String ","Class Or Interface Type String ","Method Call Expr ","Simple Name createDir ","Simple Name cacheKey ","Method Declaration ","Variable Declaration Expr ","Simple Name fileName ","Name Expr fileName ","Variable Declarator String fileName = ","Class Or Interface Type String ","Binary Expr PLUS ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr '.' ","Char Literal Expr '/' ","'.'","'/'","Variable Declaration Expr ","Simple Name fileOutputStream ","Name Expr isDoingStaticCodegen ","Name Expr fileOutputStream ","Name Expr fileOutputStream ","Variable Declarator FileOutputStream fileOutputStream = ","Class Or Interface Type FileOutputStream ","Object Creation Expr FileOutputStream Optional.empty Optional.empty ","Class Or Interface Type FileOutputStream ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Field Access Expr ","Simple Name outputDir ","Block Stmt ","Block Stmt ","Variable Declaration Expr ","Simple Name writer ","Name Expr writer ","Name Expr writer ","Variable Declarator OutputStreamWriter writer = ","Class Or Interface Type OutputStreamWriter ","Object Creation Expr OutputStreamWriter Optional.empty Optional.empty ","Class Or Interface Type OutputStreamWriter ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name staticGen ","Simple Name cacheKey ","Simple Name writer ","Simple Name source ","Method Declaration Throws ","Method Call Expr ","Simple Name close ","Method Call Expr ","Simple Name close ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Expression Stmt ","For Each Stmt ","Name Expr allBindings ","Variable Declaration Expr ","If Stmt ","Binary Expr OR ","Return Stmt ","If Stmt ","Field Access Expr ","Return Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Expression Stmt ","For Each Stmt ","Name Expr allBindings ","Variable Declaration Expr ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Return Stmt ","Primitive Type boolean ","Simple Name shouldUseStrictMode ","Parameter DecodingMode mode ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr mode ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Class Or Interface Type DecodingMode ","Class Or Interface Type ClassDescriptor ","Block Stmt ","Field Access Expr ","Return Stmt ","Simple Name DYNAMIC_MODE_AND_MATCH_FIELD_STRICTLY ","Boolean Literal Expr true ","true","Variable Declaration Expr ","Simple Name allBindings ","Variable Declarator List<Binding> allBindings = ","Class Or Interface Type List ","Method Call Expr ","Simple Name allDecoderBindings ","Block Stmt ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type Binding ","Block Stmt ","Binary Expr OR ","OR","Field Access Expr ","Field Access Expr ","Field Access Expr ","Simple Name asMissingWhenNotPresent ","Simple Name asExtraWhenPresent ","Simple Name shouldSkip ","Boolean Literal Expr true ","Block Stmt ","Simple Name asExtraForUnknownProperties ","Boolean Literal Expr true ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Field Access Expr ","Simple Name isEmpty ","Simple Name keyValueTypeWrappers ","Boolean Literal Expr true ","Variable Declaration Expr ","Name Expr hasBinding ","Simple Name hasBinding ","Name Expr hasBinding ","Variable Declarator boolean hasBinding = ","Primitive Type boolean ","Boolean Literal Expr false ","Block Stmt ","Name Expr allBinding ","Simple Name allBinding ","Class Or Interface Type Binding ","Block Stmt ","Field Access Expr ","GREATER","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name fromNames ","Assign Expr ASSIGN ","Boolean Literal Expr true ","Block Stmt ","Boolean Literal Expr true ","Boolean Literal Expr false ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Void Type ","Simple Name createDir ","Parameter String cacheKey ","Block Stmt ","Name Expr cacheKey ","Class Or Interface Type String ","Variable Declaration Expr ","Simple Name parts ","Name Expr parts ","Name Expr parts ","Variable Declarator String[] parts = ","Name Expr pendings ","Method Call Expr ","Simple Name split ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name parent ","Name Expr isDoingStaticCodegen ","Name Expr parent ","Name Expr parent ","Name Expr current ","Variable Declarator File parent = ","Class Or Interface Type File ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Field Access Expr ","Simple Name outputDir ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Binary Expr MINUS ","Field Access Expr ","MINUS","Integer Literal Expr Note Zero  ","Simple Name length ","Variable Declaration Expr ","Name Expr next ","Name Expr part ","Variable Declarator String part = ","Class Or Interface Type String ","Array Access Expr i ","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Variable Declarator File current = ","Void Type ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Method Call Expr ","Simple Name mkdir ","Assign Expr ASSIGN ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name staticGen ","Parameter String cacheKey ","Parameter OutputStreamWriter writer ","Parameter String source ","Class Or Interface Type IOException ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr source ","Class Or Interface Type String ","Class Or Interface Type OutputStreamWriter ","Class Or Interface Type String ","Variable Declaration Expr ","Simple Name className ","Name Expr className ","Variable Declarator String className = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Binary Expr PLUS ","Method Call Expr ","Integer Literal Expr Note Zero  ","Simple Name lastIndexOf ","Char Literal Expr '.' ","Variable Declaration Expr ","Simple Name packageName ","Name Expr packageName ","Variable Declarator String packageName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name lastIndexOf ","Char Literal Expr '.' ","Method Call Expr ","Simple Name write ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Method Call Expr ","Simple Name write ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","String Literal Expr Not Empty  "]}
{"fileName":"src/main/java/com/jsoniter/Codegen.java","version":"0.9.22","methodName":"addPlaceholderDecoderToSupportRecursiveStructure-Codegen-String","callMethodNameReferTo":{"73":"src/main/java/com/jsoniter/spi/JsoniterSpi.java?getDecoder-JsoniterSpi-String","106":"src/main/java/com/jsoniter/spi/Decoder.java?decode-Decoder-JsonIterator","45":"src/main/java/com/jsoniter/spi/JsoniterSpi.java?getDecoder-JsoniterSpi-String"},"num":108,"succs":[[2,5,1,3,4,6],[2],[],[4],[],[9,12],[13],[106,0,19,105],[9],[],[8,9],[10,9],[],[14],[17,8,15,16],[],[],[18],[],[28,26,22,20,23,25,21,24],[],[],[23],[],[30,31],[27],[],[],[33,32,7],[30],[],[],[33,34],[47,48],[43],[10,36],[],[35],[35,11,47,37,39,40],[],[38,47],[38,47,40],[41,38],[35,45,44],[35],[10,36,46],[],[7,52,37,49,50],[53,52],[51],[],[],[56,55,57,54],[97,98],[55,61],[69,66,53,65,58],[68,60,55],[69,70],[59,60],[],[59,58],[59,62,63],[59],[64],[],[],[67],[],[],[71,70],[77,75,76],[38,72,73],[],[11,39,74],[],[78,79,77,50,40],[79],[95],[51],[81,56,82,87,80],[82],[88,87],[83,56],[84,86,85],[],[],[67],[89,91,90],[91],[],[],[56,92],[93,94],[],[],[53,96],[],[41,7,100,99,50],[100],[51],[7,101],[103,102],[],[104],[],[],[42,19,29,107],[]],"attribute":["Method Declaration ","PRIVATE","STATIC","Void Type ","Simple Name addPlaceholderDecoderToSupportRecursiveStructure ","Parameter final String cacheKey ","Block Stmt ","Return Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Class Or Interface Type String ","Expression Stmt ","Method Call Expr ","Return Stmt ","Simple Name addNewDecoder ","Object Creation Expr Decoder Optional.empty Optional.empty ","Class Or Interface Type Decoder ","Method Declaration Throws ","Name Expr concatTag ","PUBLIC","Class Or Interface Type Object ","Simple Name decode ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Class Or Interface Type JsonIterator ","Expression Stmt ","If Stmt ","Variable Declaration Expr ","Simple Name decoder ","Name Expr JsoniterSpi ","Name Expr decoder ","Name Expr decoder ","Name Expr JsoniterSpi ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Variable Declarator Decoder decoder = ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name getDecoder ","Binary Expr EQUALS ","Block Stmt ","This Expr ","EQUALS","ThisExpr","For Stmt ","If Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Unary Expr ++ ","Block Stmt ","Name Expr i ","Simple Name i ","Simple Name e ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","LESS","Integer Literal Expr Note Zero  ","IntegerLiteralExpr","POSTFIX_INCREMENT","Expression Stmt ","If Stmt ","Assign Expr ASSIGN ","ASSIGN","Method Call Expr ","Simple Name getDecoder ","Binary Expr EQUALS ","Block Stmt ","Block Stmt ","This Expr ","Try Stmt ","Block Stmt ","Catch Clause ","Expression Stmt ","Method Call Expr ","Name Expr Thread ","Simple Name sleep ","Integer Literal Expr Note Zero  ","Parameter InterruptedException e ","Block Stmt ","Class Or Interface Type InterruptedException ","Simple Name e ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Break Stmt ","break;","Binary Expr EQUALS ","Block Stmt ","This Expr ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","StringLiteralExpr","ReturnStmt","Method Call Expr ","Simple Name decode "]}
{"fileName":"src/main/java/com/jsoniter/Codegen.java","version":"0.9.22","methodName":"canStaticAccess-Codegen-String","callMethodNameReferTo":{},"num":15,"succs":[[5,4,6,2,3,1],[2],[],[4],[],[10,9],[7],[12,0,11],[9],[],[],[],[14,8,13],[],[]],"attribute":["Method Declaration ","PUBLIC","STATIC","Primitive Type boolean ","Simple Name canStaticAccess ","Parameter String cacheKey ","Block Stmt ","Return Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Class Or Interface Type String ","ReturnStmt","Method Call Expr ","Name Expr generatedClassNames ","Simple Name contains "]}
{"fileName":"src/main/java/com/jsoniter/Codegen.java","version":"0.9.22","methodName":"chooseImpl-Codegen-Type","callMethodNameReferTo":{"272":"src/main/java/com/jsoniter/spi/GenericsHelper.java?createParameterizedType-GenericsHelper-Type[]-Type-Type","151":"src/main/java/com/jsoniter/spi/JsoniterSpi.java?getTypeImplementation-JsoniterSpi-Class","204":"src/main/java/com/jsoniter/spi/GenericsHelper.java?createParameterizedType-GenericsHelper-Type[]-Type-Type","269":"src/main/java/com/jsoniter/MapKeyDecoders.java?registerOrGetExisting-MapKeyDecoders-Type","287":"src/main/java/com/jsoniter/spi/GenericsHelper.java?createParameterizedType-GenericsHelper-Type[]-Type-Type"},"num":291,"succs":[[1,72],[2,92],[115,3,7],[117,4,65,7,116],[5,119],[6,125],[12,131],[10,8,134],[135,9,10,68,116],[58,12,137,138],[11],[140,12],[13,143],[153,14],[98,15,154,155,30],[16,157],[165,18,17],[168,166,18,167,23],[21,19,170],[21,171,172,167,20],[175,23],[22],[178,23],[24,26,185],[99,25,186,167,26],[188,29],[27,195],[103,29,28,196,167],[29,198],[58,204,30,137],[212,31],[50,108,214,213,32],[33,216],[227,34],[235,36,35],[237,36,236,42,167],[40,37,239],[38,40,241,167,240],[39,243],[42,246],[41],[249,42],[43,254],[255,45,109,44,167],[45,257],[46,263],[264,47,48,167,219],[266,48],[49,269],[50,58,272,137],[280,51],[146,52,282,57,281],[55,53,283],[285,55,284,167,54],[58,57,147,137],[56],[58,57,137,287],[58,70,137],[61,62,63,60,59,64],[60],[],[62],[],[71,66],[0,50,1,13,2,57,12,30],[66],[],[3,65,66],[3,65,66],[67,3,68,8,66],[69,66],[],[85],[75,74],[94,120],[73],[75],[76,75,78,17],[75,77,17,19],[75,77],[82,79,75,35],[75,80,37,35],[75,81,37,35],[75,80],[75,53,83],[86,75,87],[75],[89,88],[],[],[91],[],[95],[94,95],[120],[114],[95,93,69],[96],[97,96],[98,14,96],[99,101,14,24,102,96],[144],[144,101],[99,14,24,96],[103,27,14,100,105,106,24,96],[144],[144,105,102],[104,14],[107,104],[108,104,31],[43,111,109,104,112,31],[144,106],[144,111],[110,31],[95],[6,5,4],[136,118],[],[],[121],[67],[123,120,122],[120],[67,124],[],[127,126,93],[],[128,129],[],[130,94],[],[73,126,132],[74,133],[],[9],[],[],[],[139],[],[126,141,96],[142,69],[],[149],[97,145],[],[144,112],[146,144,51],[146,144,147,51],[144,150,151],[144],[97,152,145],[],[29,16,15,23],[156],[],[],[161],[78,159],[158],[159],[162,159,163],[159],[164],[],[],[76,169],[],[91],[],[20],[173,77],[174],[],[],[126,158,176],[78,177],[91],[180,179],[],[182,183,181],[184],[],[184],[],[25],[187],[],[189,126,100],[191,190,102],[101,192,167],[194],[193],[],[],[28],[197],[],[199,126,104],[201,106,200],[105,167,202],[203],[193],[],[107,206,208,207,205],[],[],[210,209,211],[193],[],[],[160],[33,45,34,48,49,42,32],[215],[],[],[223],[81,218],[217],[218],[46,218,219],[220],[220,221],[225,218,224],[218],[226],[],[231],[82,229],[228],[229],[229,233,232],[229],[234],[],[],[238,79],[91],[],[39,38],[80,242],[174],[],[217,126,244],[245,81],[91],[126,228,247],[82,248],[174],[251,250],[],[253,182,252],[184],[184],[44],[256],[],[110,126,258],[259,112,260],[261,111,167],[262],[193],[],[47],[265],[],[220,126,267],[268],[],[270,271,221],[],[],[275,274,273,276,113],[],[],[279,278,277],[193],[],[],[222,230],[52],[],[193],[54],[286,83],[91],[],[148,289,84,290,288],[],[],[193]],"attribute":["Expression Stmt ","Expression Stmt ","If Stmt ","Instance Of Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Instance Of Expr ","Return Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Throw Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Block Stmt ","Throw Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Return Stmt ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","Class Or Interface Type Type ","Simple Name chooseImpl ","Parameter Type type ","Block Stmt ","Name Expr type ","Simple Name type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr keys ","Return Stmt ","Name Expr typeArgs ","Name Expr pType ","Simple Name typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Variable Declarator Type[] typeArgs = ","Array Type 1 ","Array Creation Expr Type Array Creation Level Not Empty ","Class Or Interface Type Type ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Variable Declaration Expr ","Name Expr cache ","Name Expr pType ","Simple Name clazz ","Name Expr cache ","Name Expr clazz ","Name Expr clazz ","Name Expr cache ","Name Expr clazz ","Name Expr implClazz ","Name Expr implClazz ","Name Expr clazz ","Name Expr clazz ","Name Expr implClazz ","Name Expr implClazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr implClazz ","Name Expr implClazz ","Name Expr clazz ","Class Or Interface Type Class ","Block Stmt ","InstanceOfExpr","Class Or Interface Type ParameterizedType ","ParameterizedType","Variable Declaration Expr ","Simple Name pType ","Variable Declarator ParameterizedType pType = ","Class Or Interface Type ParameterizedType ","Cast Expr ","Class Or Interface Type ParameterizedType ","Assign Expr ASSIGN ","ASSIGN","Cast Expr ","Class Or Interface Type Class ","Method Call Expr ","Simple Name getRawType ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getActualTypeArguments ","Block Stmt ","Class Or Interface Type WildcardType ","WildcardType","ReturnStmt","Class Expr Object.class ","Class Or Interface Type Object ","Binary Expr LESS ","Method Call Expr ","Class Or Interface Type Class ","Variable Declaration Expr ","Simple Name implClazz ","Name Expr JsoniterSpi ","Name Expr implClazz ","Name Expr implClazz ","Name Expr implClazz ","Variable Declarator Class implClazz = ","Class Or Interface Type Class ","Method Call Expr ","Simple Name getTypeImplementation ","Block Stmt ","Class Expr Collection.class ","Simple Name isAssignableFrom ","Class Or Interface Type Collection ","Variable Declaration Expr ","Name Expr compType ","Simple Name compType ","Name Expr compType ","Variable Declarator Type compType = ","Class Or Interface Type Type ","Class Expr Object.class ","Class Or Interface Type Object ","Block Stmt ","Field Access Expr ","EQUALS","Integer Literal Expr Zero  ","Simple Name length ","Block Stmt ","Field Access Expr ","Integer Literal Expr Note Zero  ","Simple Name length ","IntegerLiteralExpr","Assign Expr ASSIGN ","Array Access Expr 0 ","Integer Literal Expr Zero  ","Object Creation Expr IllegalArgumentException Optional.empty Optional.empty ","Class Or Interface Type IllegalArgumentException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","PLUS","String Literal Expr Not Empty  ","StringLiteralExpr","Block Stmt ","Class Expr List.class ","Class Or Interface Type List ","Assign Expr ASSIGN ","Conditional Expr implClazz == null ? ArrayList.class : implClazz ","Binary Expr EQUALS ","Class Expr ArrayList.class ","Null Literal Expr ","NullLiteralExpr","Class Or Interface Type ArrayList ","Block Stmt ","Class Expr Set.class ","Class Or Interface Type Set ","Assign Expr ASSIGN ","Conditional Expr implClazz == null ? HashSet.class : implClazz ","Binary Expr EQUALS ","Class Expr HashSet.class ","Null Literal Expr ","Class Or Interface Type HashSet ","Method Call Expr ","Name Expr GenericsHelper ","Simple Name createParameterizedType ","Array Creation Expr Type Array Creation Level Not Empty Array Initializer Expr ","Null Literal Expr ","Class Or Interface Type Type ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Block Stmt ","Class Expr Map.class ","Simple Name isAssignableFrom ","Class Or Interface Type Map ","Variable Declaration Expr ","Name Expr keyType ","Simple Name keyType ","Name Expr keyType ","Name Expr keyType ","Name Expr keyType ","Name Expr keyType ","Variable Declarator Type keyType = ","Class Or Interface Type Type ","Class Expr String.class ","Class Or Interface Type String ","Variable Declaration Expr ","Name Expr valueType ","Simple Name valueType ","Name Expr valueType ","Variable Declarator Type valueType = ","Class Or Interface Type Type ","Class Expr Object.class ","Class Or Interface Type Object ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name length ","Block Stmt ","Field Access Expr ","Integer Literal Expr Note Zero  ","Simple Name length ","Assign Expr ASSIGN ","Array Access Expr 0 ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Array Access Expr 1 ","Integer Literal Expr Note Zero  ","Object Creation Expr IllegalArgumentException Optional.empty Optional.empty ","Class Or Interface Type IllegalArgumentException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr Map.class ","Class Or Interface Type Map ","Assign Expr ASSIGN ","Conditional Expr implClazz == null ? HashMap.class : implClazz ","Binary Expr EQUALS ","Class Expr HashMap.class ","Null Literal Expr ","Class Or Interface Type HashMap ","Block Stmt ","Class Expr Object.class ","Class Or Interface Type Object ","Assign Expr ASSIGN ","Class Expr String.class ","Class Or Interface Type String ","Method Call Expr ","Name Expr MapKeyDecoders ","Simple Name registerOrGetExisting ","Method Call Expr ","Name Expr GenericsHelper ","Simple Name createParameterizedType ","Array Creation Expr Type Array Creation Level Not Empty Array Initializer Expr ","Null Literal Expr ","Class Or Interface Type Type ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Block Stmt ","NOT_EQUALS","Null Literal Expr ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name length ","Method Call Expr ","Name Expr GenericsHelper ","Simple Name createParameterizedType ","Null Literal Expr "]}
{"fileName":"src/main/java/com/jsoniter/Codegen.java","version":"0.9.22","methodName":"staticGen-Codegen-String-String","callMethodNameReferTo":{},"num":233,"succs":[[28,1],[2,32],[47,3],[61,4,60],[5,62],[6,70,71],[8,72,7],[8,78],[80],[12,14,15,11,10,16,17,19,13],[11],[],[13],[],[26,21],[25,27],[18],[],[],[2,0,1,3],[30,21],[],[20,21],[22,74,21],[25,76],[],[],[],[20,31,29],[],[],[94,11,10,95,93,92],[35],[22],[33],[37,33,36],[33],[38,40,39],[22,43,41,42],[],[46],[],[44],[45],[],[],[],[52],[49,34],[],[48],[48,50],[48,54,53],[48],[55,56],[],[34,58,57],[],[49,59],[],[5,4],[8],[66],[50],[63,75],[63,64],[63,67,68],[63],[69,50],[],[6],[7],[24,64,23,73,77],[],[],[],[],[163,165,166,164,167,11,162,10,16,168],[79,65],[],[81,51],[],[83,98],[84,107],[85,91,119,86],[124,86],[129,87,120,128],[88,136],[89,142],[149,90],[151,91],[135,122,86],[93],[],[97,30],[83,84,82],[30],[],[102],[96],[99,101],[99,100],[99,103,104],[99],[105,96,106],[],[46],[113],[109],[],[111,108],[112,110,108],[144,143],[114,108,115],[108],[116,117],[],[118,109],[],[88,87,89,90],[121,123],[],[121,120],[121,122],[121,126,125],[121],[127],[],[],[132,130,131],[133,100],[],[134],[],[],[],[139],[123,101],[137],[137,141,140],[137],[123,101],[145],[110,138],[143],[147,143,146],[143],[110,138,148],[],[144,150],[],[112,152,111],[],[154,184],[155,196],[156,207],[157,213],[219,158],[159,221],[160,224],[227,161],[230],[163],[],[74,181],[182,75],[76,183],[],[157,153,156,155,159,160,154,158,161],[74],[74,169],[74,170],[74,171],[75],[173,75],[174,75],[175,75],[176,75],[177,75],[178,75],[76],[],[],[],[187],[169,170],[185],[188,185,189],[185],[191,169,190],[],[39,193,192],[194,170,195],[134],[],[44],[199],[171,172],[197],[200,197,201],[197],[171,202,203,204],[],[127],[205,206,172],[],[44],[173,209,208],[],[39,211,210],[39,198,212],[46],[46],[174,215,214],[],[217,39,216],[39,186,218],[46],[46],[220,180,175],[],[223,222,176],[],[46],[177,225,226],[],[46],[178,228,229],[],[46],[179,231,232],[],[46]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PRIVATE","STATIC","Void Type ","Simple Name staticGen ","Parameter String cacheKey ","Parameter String source ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr source ","Simple Name source ","Class Or Interface Type String ","Class Or Interface Type String ","Method Call Expr ","Simple Name createDir ","Simple Name cacheKey ","Method Declaration ","Variable Declaration Expr ","Simple Name fileName ","Name Expr fileName ","Variable Declarator String fileName = ","Class Or Interface Type String ","Binary Expr PLUS ","Method Call Expr ","PLUS","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr '.' ","Char Literal Expr '/' ","'.'","'/'","StringLiteralExpr","Variable Declaration Expr ","Simple Name fileOutputStream ","Name Expr isDoingStaticCodegen ","Name Expr fileOutputStream ","Name Expr fileOutputStream ","Variable Declarator FileOutputStream fileOutputStream = ","Class Or Interface Type FileOutputStream ","Object Creation Expr FileOutputStream Optional.empty Optional.empty ","Class Or Interface Type FileOutputStream ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Field Access Expr ","Simple Name outputDir ","Block Stmt ","Block Stmt ","Variable Declaration Expr ","Simple Name writer ","Name Expr writer ","Name Expr writer ","Variable Declarator OutputStreamWriter writer = ","Class Or Interface Type OutputStreamWriter ","Object Creation Expr OutputStreamWriter Optional.empty Optional.empty ","Class Or Interface Type OutputStreamWriter ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name staticGen ","Simple Name cacheKey ","Simple Name writer ","Simple Name source ","Method Declaration Throws ","Method Call Expr ","Simple Name close ","Method Call Expr ","Simple Name close ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Void Type ","Simple Name createDir ","Parameter String cacheKey ","Block Stmt ","Name Expr cacheKey ","Class Or Interface Type String ","Variable Declaration Expr ","Simple Name parts ","Name Expr parts ","Name Expr parts ","Variable Declarator String[] parts = ","Name Expr pendings ","Method Call Expr ","Simple Name split ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name parent ","Name Expr isDoingStaticCodegen ","Name Expr parent ","Name Expr parent ","Name Expr current ","Variable Declarator File parent = ","Class Or Interface Type File ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Field Access Expr ","Simple Name outputDir ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","LESS","Binary Expr MINUS ","Field Access Expr ","MINUS","Integer Literal Expr Note Zero  ","Simple Name length ","IntegerLiteralExpr","POSTFIX_INCREMENT","Variable Declaration Expr ","Name Expr next ","Name Expr part ","Variable Declarator String part = ","Class Or Interface Type String ","Array Access Expr i ","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Variable Declarator File current = ","Void Type ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Method Call Expr ","Simple Name mkdir ","Assign Expr ASSIGN ","ASSIGN","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name staticGen ","Parameter String cacheKey ","Parameter OutputStreamWriter writer ","Parameter String source ","Class Or Interface Type IOException ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr source ","Class Or Interface Type String ","Class Or Interface Type OutputStreamWriter ","Class Or Interface Type String ","Variable Declaration Expr ","Simple Name className ","Name Expr className ","Variable Declarator String className = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Binary Expr PLUS ","Method Call Expr ","Integer Literal Expr Note Zero  ","Simple Name lastIndexOf ","Char Literal Expr '.' ","Variable Declaration Expr ","Simple Name packageName ","Name Expr packageName ","Variable Declarator String packageName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name lastIndexOf ","Char Literal Expr '.' ","Method Call Expr ","Simple Name write ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Method Call Expr ","Simple Name write ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","String Literal Expr Not Empty  "]}
{"fileName":"src/main/java/com/jsoniter/Codegen.java","version":"0.9.22","methodName":"staticGen-Codegen-String-OutputStreamWriter-String","callMethodNameReferTo":{},"num":93,"succs":[[39,1],[2,54],[3,66],[4,73],[79,5],[6,81],[7,84],[87,8],[90],[13,15,18,16,14,11,12,10,17,20],[11],[],[13],[],[22,36],[37,27],[35,38],[19],[],[],[4,0,3,2,6,7,1,8,5],[22],[],[22,21],[22,23],[22,24],[27],[],[26,27],[28,27],[29,27],[30,27],[31,27],[32,27],[35],[],[],[],[],[42],[21,23],[40],[43,40,44],[40],[46,21,45],[],[48,49,47],[50,23,51],[],[53],[],[52],[],[],[57],[24,25],[55],[58,55,59],[55],[24,60,61,62],[],[63],[64,65,25],[],[],[52],[26,68,67],[],[48,70,69],[48,56,71],[72],[72],[],[28,75,74],[],[77,48,76],[48,41,78],[72],[72],[80,34,29],[],[83,82,30],[],[72],[31,85,86],[],[72],[32,88,89],[],[72],[33,91,92],[],[72]],"attribute":["Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Method Declaration Throws ","PRIVATE","STATIC","Void Type ","Simple Name staticGen ","Parameter String cacheKey ","Parameter OutputStreamWriter writer ","Parameter String source ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr writer ","Simple Name writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr source ","Simple Name source ","Class Or Interface Type String ","Class Or Interface Type OutputStreamWriter ","Class Or Interface Type String ","Variable Declaration Expr ","Simple Name className ","Name Expr className ","Variable Declarator String className = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Binary Expr PLUS ","Method Call Expr ","PLUS","Integer Literal Expr Note Zero  ","Simple Name lastIndexOf ","Char Literal Expr '.' ","'.'","IntegerLiteralExpr","Variable Declaration Expr ","Simple Name packageName ","Name Expr packageName ","Variable Declarator String packageName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Integer Literal Expr Zero  ","Method Call Expr ","Zero IntegerLiteralExpr","Simple Name lastIndexOf ","Char Literal Expr '.' ","Method Call Expr ","Simple Name write ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","StringLiteralExpr","Method Call Expr ","Simple Name write ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Method Call Expr ","Simple Name write ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","String Literal Expr Not Empty  "]}
{"fileName":"src/main/java/com/jsoniter/Codegen.java","version":"0.9.22","methodName":"createDir-Codegen-String","callMethodNameReferTo":{},"num":76,"succs":[[1,20],[2,30],[3,9,42,4],[47,4],[52,5,43,51],[6,59],[7,65],[72,8],[74,9],[58,45,4],[15,12,11,16,14,13],[12],[],[14],[],[19,18],[1,0,2],[18],[],[],[24],[17],[21,23],[21,22],[21,25,26],[21],[27,17,28],[],[29],[],[36],[32],[],[34,31],[35,33,31],[67,66],[37,31,38],[31],[39,40],[],[41,32],[],[6,5,7,8],[44,46],[],[44,43],[44,45],[44,49,48],[44],[50],[],[],[55,53,54],[56,22],[],[57],[],[],[],[62],[46,23],[60],[60,63,64],[60],[46,23],[68],[33,61],[66],[70,66,69],[66],[33,61,71],[],[67,73],[],[35,75,34],[]],"attribute":["Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Method Declaration ","PRIVATE","STATIC","Void Type ","Simple Name createDir ","Parameter String cacheKey ","Block Stmt ","Name Expr cacheKey ","Simple Name cacheKey ","Class Or Interface Type String ","Variable Declaration Expr ","Simple Name parts ","Name Expr parts ","Name Expr parts ","Variable Declarator String[] parts = ","Name Expr pendings ","Method Call Expr ","Simple Name split ","String Literal Expr Not Empty  ","StringLiteralExpr","Variable Declaration Expr ","Simple Name parent ","Name Expr isDoingStaticCodegen ","Name Expr parent ","Name Expr parent ","Name Expr current ","Variable Declarator File parent = ","Class Or Interface Type File ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Field Access Expr ","Simple Name outputDir ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","LESS","Binary Expr MINUS ","Field Access Expr ","MINUS","Integer Literal Expr Note Zero  ","Simple Name length ","IntegerLiteralExpr","POSTFIX_INCREMENT","Variable Declaration Expr ","Name Expr next ","Name Expr part ","Variable Declarator String part = ","Class Or Interface Type String ","Array Access Expr i ","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Variable Declarator File current = ","Void Type ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Method Call Expr ","Simple Name mkdir ","Assign Expr ASSIGN ","ASSIGN"]}
{"fileName":"src/main/java/com/jsoniter/Codegen.java","version":"0.9.22","methodName":"genSource-Codegen-DecodingMode-ClassInfo","callMethodNameReferTo":{"80":"src/main/java/com/jsoniter/spi/ClassDescriptor.java?getDecodingClassDescriptor-ClassDescriptor-ClassInfo-boolean","54":"src/main/java/com/jsoniter/CodegenImplMap.java?genMap-CodegenImplMap-ClassInfo","70":"src/main/java/com/jsoniter/CodegenImplEnum.java?genEnum-CodegenImplEnum-ClassInfo","90":"src/main/java/com/jsoniter/CodegenImplObjectStrict.java?genObjectUsingStrict-CodegenImplObjectStrict-ClassDescriptor","45":"src/main/java/com/jsoniter/CodegenImplArray.java?genArray-CodegenImplArray-ClassInfo","93":"src/main/java/com/jsoniter/CodegenImplObjectHash.java?genObjectUsingHash-CodegenImplObjectHash-ClassDescriptor","63":"src/main/java/com/jsoniter/CodegenImplArray.java?genCollection-CodegenImplArray-ClassInfo"},"num":198,"succs":[[1,40],[3,41,2,42],[45,18,3,44],[4,48],[6,51,49,5,50],[6,54,18,44],[57,7],[58,8,60,9,59],[63,9,18,44],[10,66],[11,12,68,67],[12,18,44,70],[13,73],[85,16,14],[75,26,89,15,16,86],[90,18,44],[17],[93,18,44],[24,23,25,22,20,19,21],[20],[],[22],[],[27,38],[39,29],[6,12,13,0,9,3],[27,87],[],[29],[],[1,29,28],[29,30],[31,4,29],[32,29],[33,7,29],[29,34],[10,35,29],[29,36],[],[],[2],[43,28],[],[],[],[46,30,47],[],[],[5],[52],[],[31,53],[],[],[32,56,55],[],[],[8],[61],[],[62,33],[],[],[65,64,34],[],[],[11],[69,35],[],[],[36,71,72],[],[],[78],[37],[74,88],[75,74,14],[75,74,14,76],[74,79,80],[74],[82,37,83,81],[],[],[84],[],[15],[],[],[],[123,125,20,127,19,124,126],[92,91,76],[],[],[95,77,94],[],[],[134,97],[136,99,128,98,135],[99,89,139,44],[100,141],[101,102,147],[142,106,102],[103,149],[153,104],[105,101,154,155,156],[89,101,162,44],[163,107],[130,109,108,164],[89,109,165,44],[166,110],[112,167,168,111],[89,172,112,44],[173,113],[180,115,114],[142,101,119,115],[116,182],[117,184],[118,186,114,187,185],[114,192],[120,195],[168,121,176,122],[89,196,44,122],[197,89,44],[124],[],[132,87],[88,133],[99,100,106,96,112,119,113,109,122],[87],[88],[88,129],[130,88],[],[],[98],[],[138,137],[],[],[140],[],[143],[129],[142,145,144],[142],[146,129],[],[103],[149],[152],[148,149],[150,149],[149],[105],[157,155,158],[],[161,151],[159,148],[150,160],[],[],[],[140],[108],[],[140],[111],[170,169],[],[131,171],[],[],[140],[177],[175],[],[174],[175,178,179],[175],[84],[116],[182],[183],[182],[118],[189,188],[],[191],[190,181],[],[],[],[174,193,194],[],[140],[121],[140],[84]],"attribute":["If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Block Stmt ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","Class Or Interface Type String ","Simple Name genSource ","Parameter DecodingMode mode ","Parameter ClassInfo classInfo ","Block Stmt ","Name Expr mode ","Simple Name mode ","Name Expr classInfo ","Simple Name classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Class Or Interface Type DecodingMode ","Class Or Interface Type ClassInfo ","Block Stmt ","Field Access Expr ","Simple Name isArray ","Simple Name clazz ","ReturnStmt","Method Call Expr ","Name Expr CodegenImplArray ","Simple Name genArray ","Block Stmt ","Class Expr Map.class ","Simple Name isAssignableFrom ","Field Access Expr ","Class Or Interface Type Map ","Simple Name clazz ","Method Call Expr ","Name Expr CodegenImplMap ","Simple Name genMap ","Block Stmt ","Class Expr Collection.class ","Simple Name isAssignableFrom ","Field Access Expr ","Class Or Interface Type Collection ","Simple Name clazz ","Method Call Expr ","Name Expr CodegenImplArray ","Simple Name genCollection ","Block Stmt ","Field Access Expr ","Simple Name isEnum ","Simple Name clazz ","Method Call Expr ","Name Expr CodegenImplEnum ","Simple Name genEnum ","Variable Declaration Expr ","Simple Name desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Variable Declarator ClassDescriptor desc = ","Class Or Interface Type ClassDescriptor ","Method Call Expr ","Name Expr ClassDescriptor ","Simple Name getDecodingClassDescriptor ","Boolean Literal Expr false ","false","Block Stmt ","Simple Name shouldUseStrictMode ","Simple Name mode ","Simple Name desc ","Method Declaration ","Method Call Expr ","Name Expr CodegenImplObjectStrict ","Simple Name genObjectUsingStrict ","Method Call Expr ","Name Expr CodegenImplObjectHash ","Simple Name genObjectUsingHash ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Expression Stmt ","For Each Stmt ","Name Expr allBindings ","Variable Declaration Expr ","If Stmt ","Binary Expr OR ","Return Stmt ","If Stmt ","Field Access Expr ","Return Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Expression Stmt ","For Each Stmt ","Name Expr allBindings ","Variable Declaration Expr ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Return Stmt ","Primitive Type boolean ","Simple Name shouldUseStrictMode ","Parameter DecodingMode mode ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr mode ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Class Or Interface Type DecodingMode ","Class Or Interface Type ClassDescriptor ","Block Stmt ","EQUALS","Field Access Expr ","Return Stmt ","Simple Name DYNAMIC_MODE_AND_MATCH_FIELD_STRICTLY ","Boolean Literal Expr true ","true","Variable Declaration Expr ","Simple Name allBindings ","Variable Declarator List<Binding> allBindings = ","Class Or Interface Type List ","Method Call Expr ","Simple Name allDecoderBindings ","Block Stmt ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type Binding ","Block Stmt ","Binary Expr OR ","OR","Field Access Expr ","Field Access Expr ","Field Access Expr ","Simple Name asMissingWhenNotPresent ","Simple Name asExtraWhenPresent ","Simple Name shouldSkip ","Boolean Literal Expr true ","Block Stmt ","Simple Name asExtraForUnknownProperties ","Boolean Literal Expr true ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Field Access Expr ","Simple Name isEmpty ","Simple Name keyValueTypeWrappers ","Boolean Literal Expr true ","Variable Declaration Expr ","Name Expr hasBinding ","Simple Name hasBinding ","Name Expr hasBinding ","Variable Declarator boolean hasBinding = ","Primitive Type boolean ","Boolean Literal Expr false ","Block Stmt ","Name Expr allBinding ","Simple Name allBinding ","Class Or Interface Type Binding ","Block Stmt ","Field Access Expr ","GREATER","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name fromNames ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Boolean Literal Expr true ","Block Stmt ","Boolean Literal Expr true ","Boolean Literal Expr false "]}
{"fileName":"src/main/java/com/jsoniter/Codegen.java","version":"0.9.22","methodName":"shouldUseStrictMode-Codegen-DecodingMode-ClassDescriptor","callMethodNameReferTo":{},"num":109,"succs":[[43,1],[45,3,35,2,44],[49,3,27,48],[4,51],[5,6,57],[52,10,6],[7,59],[63,8],[9,5,64,65,66],[27,5,72,48],[73,11],[39,13,12,74],[27,13,75,48],[76,14],[16,77,78,15],[27,16,82,48],[83,17],[91,19,18],[52,5,23,19],[20,93],[21,95],[22,97,18,98,96],[18,103],[24,106],[78,25,86,26],[27,107,48,26],[27,108,48],[32,30,29,34,28,31,33],[29],[],[31],[],[41,36],[42,38],[3,4,0,10,16,23,13,17,26],[36],[],[38],[],[38,37],[39,38],[],[],[2],[],[47,46],[],[],[],[50],[],[53],[37],[52,55,54],[52],[56,37],[],[7],[59],[62],[58,59],[60,59],[59],[9],[67,65,68],[],[71,61],[69,58],[60,70],[],[],[],[50],[12],[],[50],[15],[80,79],[],[40,81],[],[],[50],[87],[85],[],[84],[85,88,89],[85],[90],[],[20],[93],[94],[93],[22],[99,100],[],[102],[92,101],[],[],[],[84,104,105],[],[50],[25],[50],[90]],"attribute":["If Stmt ","Binary Expr EQUALS ","Return Stmt ","Expression Stmt ","For Each Stmt ","Name Expr allBindings ","Variable Declaration Expr ","If Stmt ","Binary Expr OR ","Return Stmt ","If Stmt ","Field Access Expr ","Return Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Expression Stmt ","For Each Stmt ","Name Expr allBindings ","Variable Declaration Expr ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Return Stmt ","Method Declaration ","PRIVATE","STATIC","Primitive Type boolean ","Simple Name shouldUseStrictMode ","Parameter DecodingMode mode ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr mode ","Simple Name mode ","Name Expr desc ","Simple Name desc ","Name Expr desc ","Name Expr desc ","Class Or Interface Type DecodingMode ","Class Or Interface Type ClassDescriptor ","Block Stmt ","EQUALS","Field Access Expr ","Return Stmt ","Simple Name DYNAMIC_MODE_AND_MATCH_FIELD_STRICTLY ","ReturnStmt","Boolean Literal Expr true ","true","Variable Declaration Expr ","Simple Name allBindings ","Variable Declarator List<Binding> allBindings = ","Class Or Interface Type List ","Method Call Expr ","Simple Name allDecoderBindings ","Block Stmt ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type Binding ","Block Stmt ","Binary Expr OR ","OR","Field Access Expr ","Field Access Expr ","Field Access Expr ","Simple Name asMissingWhenNotPresent ","Simple Name asExtraWhenPresent ","Simple Name shouldSkip ","Boolean Literal Expr true ","Block Stmt ","Simple Name asExtraForUnknownProperties ","Boolean Literal Expr true ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Field Access Expr ","Simple Name isEmpty ","Simple Name keyValueTypeWrappers ","Boolean Literal Expr true ","Variable Declaration Expr ","Name Expr hasBinding ","Simple Name hasBinding ","Name Expr hasBinding ","Variable Declarator boolean hasBinding = ","Primitive Type boolean ","Boolean Literal Expr false ","false","Block Stmt ","Name Expr allBinding ","Simple Name allBinding ","Class Or Interface Type Binding ","Block Stmt ","Field Access Expr ","GREATER","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name fromNames ","Zero IntegerLiteralExpr","Assign Expr ASSIGN ","ASSIGN","Boolean Literal Expr true ","Block Stmt ","Boolean Literal Expr true ","Boolean Literal Expr false "]}
{"fileName":"src/main/java/com/jsoniter/Codegen.java","version":"0.9.22","methodName":"staticGenDecoders-Codegen-TypeLiteral[]-CodegenAccess.StaticCodegenTarget","callMethodNameReferTo":{"32":"src/main/java/com/jsoniter/spi/TypeLiteral.java?getType-TypeLiteral-","31":"src/main/java/com/jsoniter/spi/TypeLiteral.java?getDecoderCacheKey-TypeLiteral-"},"num":1135,"succs":[[21,1],[24,2,3],[3,13],[4,26],[2,29],[7,11,8,6,10,9,12],[7],[98],[9],[],[16,13],[15,18],[0,1],[],[15],[],[17],[],[19,20],[],[],[23,14,22],[],[],[4],[26],[28],[26,25],[26],[31,30,32,35],[],[33,36,25],[34,27,37],[],[],[98,7,101,97,103,100,99,102],[],[],[123,39],[153,40],[42,126,155,154,41],[42,127,35,157],[43,158],[44,165,45],[159,47,45],[46,166],[44,168],[171,48],[49,50,176],[159,56,44,50],[177,51],[179,52],[182,53],[54,130,183,49,154],[184,55],[49,132,35,157],[57,187],[196,58],[203,59],[136,61,60,204,154],[61,137,35,157],[62,205],[210,209,63],[211,64],[65,219],[228,66],[69,230,221,229,67],[233,68],[69,141,35,157],[70,236],[78,71,238,229,237],[78,239,240,74,72],[241,73],[78,143,35,157],[250,75,251],[252,76],[78,253,222,77,229],[78,256],[261,79],[275,80],[281,81],[286,84,82,284,285],[83,290],[84,296],[85,300,96,92,301],[86,302],[305,87,89],[88,89,229,306,307],[308,91],[90],[311,91],[147,96,35,157],[317,93,318],[94,319],[340,95],[344,96],[347],[7],[],[100],[],[33,121],[34,122],[42,62,56,57,43,61,38,47,48,58,39],[33],[33,104],[33,105],[33,106,207],[33,107],[33,108],[33,109],[33,110],[33,110,111,313],[33,112],[34,115,116],[166],[34],[114,118],[114,174],[117],[117,119],[],[],[149],[104,125],[],[124],[126,124,40],[127,124,105,119,129],[177],[128],[130,128,53],[131,128,53],[134,132,135,128],[],[188],[133],[136,59,133],[139,137,140,133],[],[135,188],[138],[108,138,141],[144,142],[145,111,143,142,146],[],[265,34,263],[143,142],[147,142],[124,150,151],[124],[104,125,152],[],[41],[],[156],[],[],[161],[160],[],[159,162,163],[159],[164,160],[],[46],[167],[166],[114,23,169],[170,115,116],[],[172,117,23],[175,173,118],[],[],[408,409,410,7,97,411],[52,51],[178],[177],[23,180,128],[105,181,119,129],[],[54,55],[156],[131,106,185,186],[],[],[192],[120],[140,188,273],[188,189],[190,188],[194,188,193],[188],[120,195],[],[197,23,133],[198,200,199],[134,201],[],[202,135],[],[],[60],[156],[107,208,206],[],[],[7,632,97,630,631,633],[78,69,65,84,79,63,64,80],[96],[215],[213],[],[212],[216,212,217],[212],[213,218],[],[224],[214],[220],[220,221],[272,220,222],[225,220,226],[220],[214,227],[],[67,68],[],[232,231],[],[],[138,23,234],[139,235,140],[],[71],[],[156],[72,73],[249,74],[242,23,142],[243,244],[],[245,246],[108,248,247],[],[],[],[75],[],[],[77],[255,254],[],[],[257,258,259],[],[260],[],[],[268],[223,189],[264,262],[262],[263],[265,314,263,146],[266,263],[270,269,262],[262],[223,271,274,189],[],[],[],[748,747,746,749,7,97,745],[23,263,276],[278,279,277],[278,280,264],[],[260],[260],[83,82],[81],[81],[260],[],[288,287,289],[],[],[260],[293,291,292],[294,282],[],[109,278,295],[],[260],[297,265,298],[299,283],[],[],[85,86,91],[92,316],[110,303,304],[],[],[88],[],[156],[144,309,23],[145,310,111,146,35],[],[112,315,266,312],[],[],[],[826,828,829,7,97,830,650,827,831],[94,93,95],[],[],[326],[191,190,322,321],[],[],[267,320,324],[320],[323],[327,320,328],[320],[322,278,329],[330,278,331],[278,332,333],[260],[278,334,335],[337,321,338],[190,278,336],[260],[260],[],[191,339],[],[341,23,323],[278,267,342],[278,343,324],[260],[325,346,345],[],[],[349,148,348,113],[],[],[351,418],[352,438],[461,353,357],[463,412,354,357,462],[355,465],[356,471],[362,476],[360,358,479],[360,359,480,414,462],[175,362,157,482],[361],[484,362],[363,487],[497,364],[444,365,498,380,499],[366,501],[509,368,367],[511,510,368,229,373],[371,369,513],[371,514,515,229,370],[518,373],[372],[521,373],[374,376,526],[445,375,229,527,376],[529,379],[377,535],[449,379,378,536,229],[379,538],[175,544,380,157],[552,381],[400,554,454,553,382],[383,556],[567,384],[575,386,385],[577,386,576,392,229],[390,387,579],[388,390,581,229,580],[389,583],[392,586],[391],[589,392],[393,594],[595,395,455,394,229],[395,597],[396,603],[604,397,398,229,559],[606,398],[399,609],[400,175,612,157],[620,401],[490,402,621,407,154],[405,403,622],[624,405,623,229,404],[175,407,491,157],[406],[175,407,157,626],[175,416,157],[409],[],[417,174],[350,400,351,363,352,407,362,380],[174],[353,412,174],[353,412,174],[413,353,414,358,174],[415,174],[],[431],[421,420],[440,466],[419],[421],[422,421,424,367],[421,423,367,369],[421,423],[428,425,421,385],[421,426,387,385],[421,427,387,385],[421,426],[421,403,429],[432,421,433],[421],[435,434],[],[],[437],[],[441],[440,441],[466],[460],[441,439,415],[442],[443,442],[444,364,442],[445,447,364,374,448,442],[488],[488,447],[445,364,374,442],[449,377,364,446,451,452,374,442],[488],[488,451,448],[450,364],[453,450],[454,450,381],[393,457,455,450,458,381],[488,452],[488,457],[456,381],[441],[356,355,354],[481,464],[],[],[467],[413],[469,466,468],[466],[413,470],[],[472,23,439],[473,474],[],[475,440],[],[419,23,477],[420,478],[],[359],[],[],[483],[],[23,485,442],[486,415],[],[493],[443,489],[],[488,458],[488,490,401],[490,488,491,401],[494,488,495],[488],[443,489,496],[],[379,366,365,373],[500],[],[],[505],[424,503],[502],[503],[506,503,507],[503],[508],[],[],[422,512],[437],[],[370],[516,423],[517],[],[],[502,23,519],[424,520],[437],[523,522],[],[278,525,524],[260],[260],[375],[528],[],[530,23,446],[532,531,448],[447,533,229],[534],[156],[],[378],[537],[],[539,23,450],[541,452,540],[451,229,542],[543],[156],[],[453,546,548,547,545],[],[],[550,549,551],[156],[],[],[504],[383,395,384,398,399,392,382],[555],[],[],[563],[427,558],[557],[558],[396,558,559],[560],[560,561],[565,558,564],[558],[566],[],[571],[428,569],[568],[569],[569,573,572],[569],[574],[],[],[578,425],[437],[],[388,389],[426,582],[517],[],[557,23,584],[585,427],[437],[23,568,587],[428,588],[517],[591,590],[],[593,278,592],[260],[260],[394],[596],[],[456,23,598],[599,458,600],[601,457,229],[602],[156],[],[397],[605],[],[560,23,607],[608],[],[610,611,561],[],[],[615,614,613,616,459],[],[],[619,618,617],[156],[],[],[562,570],[402],[156],[404],[429,625],[437],[],[492,430,628,629,627],[],[],[156],[631],[],[207,638],[639],[725,208,645,157],[207],[635,207],[636,207],[],[640],[643,635,641,642],[],[],[644],[],[653,647,651,646,648,650,6,649],[],[648],[],[655,656],[652],[],[],[658,634,657],[655],[],[],[658,659],[672,673],[668],[636,661],[],[660],[660,637,672,662,664,665],[],[663,672],[663,672,665],[666,663],[660,670,669],[660],[636,661,671],[],[634,676,662,674,229],[677,676],[675],[],[680,679,681,678],[718,719],[679,685],[691,689,677,682,688],[684,690,679],[691,692],[683,684],[],[683,682],[683,686,687],[683],[437],[],[517],[],[693,692],[698,696,697],[663,23,694],[637,664,695],[],[699,700,698,229,665],[700],[716],[675],[702,680,703,708,701],[703],[709,708],[704,680],[705,707,706],[],[],[517],[710,712,711],[712],[],[],[680,713],[714,715],[],[],[677,717],[],[666,634,721,720,229],[721],[675],[634,722],[724,723],[],[260],[667,645,654,726],[],[728,762],[730,763,729,764],[766,274,730,157],[731,769],[733,772,770,771,732],[733,775,274,157],[778,734],[779,735,781,736,780],[736,784,274,157],[737,787],[739,738,789,788],[739,274,791,157],[740,794],[806,743,741],[750,796,810,742,743,807],[811,274,157],[744],[814,274,157],[746],[],[272,760],[761,273],[733,739,740,727,736,730],[272,808],[273],[728,273,751],[273,752],[753,731,273],[754,273],[734,755,273],[273,756],[737,757,273],[758,273],[],[],[729],[765,751],[],[],[767,752,768],[],[],[732],[773],[],[753,774],[],[],[754,777,776],[],[],[735],[782],[],[783,755],[],[],[786,785,756],[],[],[738],[790,757],[],[],[758,792,793],[],[],[799],[759],[795,809],[796,795,741],[796,795,741,797],[795,800,801],[795],[803,759,804,802],[],[],[805],[],[742],[],[],[],[917,919,7,921,97,918,920],[813,812,797],[],[],[816,798,815],[],[],[818,838],[819,842],[855,820],[869,821,868],[822,870],[823,878,879],[880,825,824],[825,886],[888],[827],[],[836,313],[314,837],[],[819,818,817,820],[840,313],[832,313],[833,882,313],[884,314],[],[],[832,841,839],[],[],[1001,7,1002,97,1000,999],[845],[833],[843],[847,843,846],[843],[848,849,278],[833,852,850,851],[260],[],[853],[854],[],[],[860],[857,844],[],[856],[856,858],[856,862,861],[856],[863,864],[],[844,865,866],[],[857,867],[],[822,821],[825],[874],[858],[871,883],[871,872],[871,875,876],[871],[877,858],[],[823],[824],[835,872,834,881,885],[],[],[],[],[1065,1067,1069,1068,1066,7,1064,97,650,1070],[887,873],[],[889,859],[],[928,891],[929,893,922,892,229],[932,893,810,157],[894,934],[895,896,940],[935,900,896],[897,942],[946,898],[899,895,947,948,949],[810,895,955,157],[956,901],[924,903,902,957],[810,903,958,157],[959,904],[906,960,961,905],[810,906,965,157],[966,907],[973,909,908],[935,895,913,909],[910,975],[911,977],[912,979,908,980,978],[908,984],[914,986],[961,915,969,916],[810,987,157,916],[988,810,157],[918],[],[926,808],[927,809],[893,894,906,900,890,913,907,903,916],[808],[809],[809,923],[924,809],[],[],[892],[931,930],[],[],[933],[],[936],[923],[935,938,937],[935],[939,923],[],[897],[942],[945],[941,942],[943,942],[942],[899],[950,948,951],[],[954,944],[952,941],[943,953],[],[],[],[933],[902],[],[933],[905],[963,962],[],[925,964],[],[],[933],[970],[968],[],[967],[971,968,972],[968],[805],[910],[975],[976],[975],[912],[981,982],[],[437],[974,983],[],[],[967,23,985],[933],[915],[933],[805],[990,1005],[991,1014],[992,998,1026,993],[1031,993],[994,1034,1027,688],[995,1039],[996,1045],[1052,997],[1054,998],[690,1029,993],[1000],[],[1004,840],[990,989,991],[840],[],[1009],[1003],[1006,1008],[1006,1007],[1006,1010,1011],[1006],[1012,1003,1013],[],[260],[1020],[1016],[],[1018,1015],[1019,1017,1015],[1047,1046],[1021,1015,1022],[1015],[1023,1024],[],[1025,1016],[],[995,994,996,997],[1028,1030],[],[1028,1027],[1028,1029],[1028,1033,1032],[1028],[437],[1037,1035,1036],[1038,1007],[],[517],[],[1042],[1030,1008],[1040],[1040,1043,1044],[1040],[1030,1008],[1048],[1017,1041],[1046],[1050,1046,1049],[1046],[1017,1041,1051],[],[1047,1053],[],[1019,23,1018],[1056,1086],[1057,1098],[1058,1109],[1059,1115],[1121,1060],[1061,1123],[1062,1126],[1129,1063],[1132],[1065],[],[882,1083],[1084,883],[884,1085],[],[1059,1055,1058,1057,1061,1062,1056,1063,1060],[882],[882,1071],[882,1072],[882,1073],[883],[1075,883],[1076,883],[1077,883],[1078,883],[1079,883],[1080,883],[884],[],[],[],[1089],[1071,1072],[1087],[1090,1087,1091],[1087],[1093,1071,1092],[],[278,1095,1094],[1096,1072,1097],[517],[],[853],[1101],[1073,1074],[1099],[1102,1099,1103],[1099],[1073,1104,1105,1106],[],[437],[1107,1108,1074],[],[853],[1075,1111,1110],[],[278,1113,1112],[278,1100,1114],[260],[260],[1076,1116,1117],[],[1119,278,1118],[278,1120,1088],[260],[260],[1122,1082,1077],[],[1125,1124,1078],[],[260],[1079,1127,1128],[],[260],[1080,1130,1131],[],[260],[1081,1133,1134],[],[260]],"attribute":["Expression Stmt ","For Each Stmt ","Name Expr typeLiterals ","Variable Declaration Expr ","Expression Stmt ","Method Declaration ","PUBLIC","STATIC","Void Type ","Simple Name staticGenDecoders ","Parameter TypeLiteral[] typeLiterals ","Parameter CodegenAccess.StaticCodegenTarget staticCodegenTarget ","Block Stmt ","Simple Name typeLiterals ","Name Expr staticCodegenTarget ","Simple Name staticCodegenTarget ","Array Type 1 ","Class Or Interface Type TypeLiteral ","Class Or Interface Type StaticCodegenTarget ","Class Or Interface Type CodegenAccess ","Simple Name StaticCodegenTarget ","Assign Expr ASSIGN ","Name Expr isDoingStaticCodegen ","ASSIGN","Block Stmt ","Name Expr typeLiteral ","Simple Name typeLiteral ","Name Expr typeLiteral ","Class Or Interface Type TypeLiteral ","Method Call Expr ","Simple Name gen ","Method Call Expr ","Method Call Expr ","Simple Name cacheKey ","Simple Name type ","Method Declaration ","Simple Name getDecoderCacheKey ","Simple Name getType ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","For Each Stmt ","Name Expr extensions ","Variable Declaration Expr ","Expression Stmt ","Expression Stmt ","For Each Stmt ","Name Expr extensions ","Variable Declaration Expr ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Expression Stmt ","Return Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","Return Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","If Stmt ","Binary Expr EQUALS ","Try Stmt ","Expression Stmt ","Return Stmt ","Parameter Exception e ","If Stmt ","Binary Expr EQUALS ","Throw Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Expression Stmt ","Return Stmt ","Parameter Exception e ","Expression Stmt ","Expression Stmt ","Throw Stmt ","Expression Stmt ","PRIVATE","SYNCHRONIZED","Class Or Interface Type Decoder ","Simple Name gen ","Parameter String cacheKey ","Parameter Type type ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr type ","Simple Name toBoolean ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr host ","Class Or Interface Type String ","Class Or Interface Type Type ","Variable Declaration Expr ","Simple Name decoder ","Name Expr JsoniterSpi ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr extension ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr CodegenImplNative ","Name Expr classInfo ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr ReflectionDecoderFactory ","Name Expr classInfo ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Name Expr DynamicCodegen ","Name Expr source ","Name Expr decoder ","Name Expr decoder ","Variable Declarator Decoder decoder = ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name getDecoder ","Block Stmt ","NOT_EQUALS","Simple Name wrap ","NullLiteralExpr","ReturnStmt","Variable Declaration Expr ","Simple Name extensions ","Name Expr JsoniterSpi ","Variable Declarator List<Extension> extensions = ","Class Or Interface Type List ","Method Call Expr ","Simple Name getExtensions ","Block Stmt ","Simple Name extension ","Class Or Interface Type Extension ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name chooseImplementation ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name chooseImpl ","Simple Name type ","Method Declaration ","Block Stmt ","Simple Name extension ","Class Or Interface Type Extension ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name createDecoder ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewDecoder ","Variable Declaration Expr ","Simple Name classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Variable Declarator ClassInfo classInfo = ","Class Or Interface Type ClassInfo ","Object Creation Expr ClassInfo Optional.empty Optional.empty ","Class Or Interface Type ClassInfo ","Assign Expr ASSIGN ","Method Call Expr ","Field Access Expr ","Simple Name get ","Field Access Expr ","Simple Name NATIVE_DECODERS ","Simple Name clazz ","Block Stmt ","Null Literal Expr ","Method Call Expr ","Simple Name addPlaceholderDecoderToSupportRecursiveStructure ","Simple Name cacheKey ","Method Declaration ","Block Stmt ","Block Stmt ","Variable Declaration Expr ","Simple Name currentConfig ","Name Expr JsoniterSpi ","Name Expr currentConfig ","Variable Declarator Config currentConfig = ","Class Or Interface Type Config ","Method Call Expr ","Simple Name getCurrentConfig ","Variable Declaration Expr ","Simple Name mode ","Name Expr mode ","Name Expr mode ","Name Expr mode ","Variable Declarator DecodingMode mode = ","Class Or Interface Type DecodingMode ","Method Call Expr ","Simple Name decodingMode ","Block Stmt ","EQUALS","Field Access Expr ","Class Or Interface Type FluentLogger ","Simple Name REFLECTION_MODE ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name create ","Block Stmt ","Name Expr isDoingStaticCodegen ","Null Literal Expr ","Block Stmt ","Catch Clause ","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type Decoder ","Method Call Expr ","Method Call Expr ","Simple Name newInstance ","Name Expr Class ","Simple Name forName ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Block Stmt ","Field Access Expr ","Name Expr DecodingMode ","Simple Name STATIC_MODE ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Name Expr e ","StringLiteralExpr","Variable Declaration Expr ","Primitive Type double ","Name Expr sender ","Name Expr source ","Name Expr source ","Name Expr source ","Name Expr source ","Variable Declarator String source = ","Class Or Interface Type String ","Method Call Expr ","Simple Name genSource ","Simple Name mode ","Simple Name classInfo ","Method Declaration ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr PLUS ","PLUS","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Block Stmt ","Simple Name toLong ","Name Expr sender ","String Literal Expr Not Empty  ","Simple Name equals ","Method Call Expr ","Name Expr System ","Simple Name getenv ","String Literal Expr Not Empty  ","Method Call Expr ","Field Access Expr ","Simple Name println ","Binary Expr PLUS ","Name Expr key ","String Literal Expr Not Empty  ","Method Call Expr ","Field Access Expr ","Simple Name println ","Simple Name out ","Block Stmt ","Catch Clause ","Method Call Expr ","Name Expr generatedClassNames ","Simple Name add ","Block Stmt ","Name Expr isDoingStaticCodegen ","Null Literal Expr ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name gen ","Method Call Expr ","Simple Name staticGen ","Simple Name cacheKey ","Simple Name source ","Method Declaration Throws ","Block Stmt ","Class Or Interface Type Exception ","Simple Name e ","Variable Declaration Expr ","Simple Name msg ","Name Expr Arrays ","Name Expr e ","Name Expr msg ","Name Expr msg ","Name Expr msg ","Variable Declarator String msg = ","Class Or Interface Type String ","Binary Expr PLUS ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Binary Expr PLUS ","Method Call Expr ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Simple Name toString ","Field Access Expr ","Simple Name typeArgs ","Assign Expr ASSIGN ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Method Call Expr ","Name Expr JsoniterSpi ","Simple Name addNewDecoder ","Expression Stmt ","Expression Stmt ","If Stmt ","Instance Of Expr ","Expression Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Instance Of Expr ","Return Stmt ","Block Stmt ","Expression Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Block Stmt ","Throw Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Return Stmt ","If Stmt ","Method Call Expr ","Expression Stmt ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Block Stmt ","Throw Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","If Stmt ","Binary Expr EQUALS ","Expression Stmt ","Expression Stmt ","Return Stmt ","If Stmt ","Binary Expr NOT_EQUALS ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Block Stmt ","Return Stmt ","Return Stmt ","Class Or Interface Type Type ","Simple Name chooseImpl ","Parameter Type type ","Block Stmt ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr type ","Name Expr keys ","Return Stmt ","Name Expr typeArgs ","Name Expr pType ","Simple Name typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Name Expr typeArgs ","Variable Declarator Type[] typeArgs = ","Array Type 1 ","Array Creation Expr Type Array Creation Level Not Empty ","Class Or Interface Type Type ","Array Creation Level Dimension NotEmpty ","Integer Literal Expr Zero  ","Zero IntegerLiteralExpr","Variable Declaration Expr ","Name Expr cache ","Name Expr pType ","Simple Name clazz ","Name Expr cache ","Name Expr clazz ","Name Expr clazz ","Name Expr cache ","Name Expr clazz ","Name Expr implClazz ","Name Expr implClazz ","Name Expr clazz ","Name Expr clazz ","Name Expr implClazz ","Name Expr implClazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr clazz ","Name Expr implClazz ","Name Expr implClazz ","Name Expr clazz ","Class Or Interface Type Class ","Block Stmt ","InstanceOfExpr","Class Or Interface Type ParameterizedType ","ParameterizedType","Variable Declaration Expr ","Simple Name pType ","Variable Declarator ParameterizedType pType = ","Class Or Interface Type ParameterizedType ","Cast Expr ","Class Or Interface Type ParameterizedType ","Assign Expr ASSIGN ","Cast Expr ","Class Or Interface Type Class ","Method Call Expr ","Simple Name getRawType ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getActualTypeArguments ","Block Stmt ","Class Or Interface Type WildcardType ","WildcardType","Class Expr Object.class ","Class Or Interface Type Object ","Binary Expr LESS ","Method Call Expr ","Class Or Interface Type Class ","Variable Declaration Expr ","Simple Name implClazz ","Name Expr JsoniterSpi ","Name Expr implClazz ","Name Expr implClazz ","Name Expr implClazz ","Variable Declarator Class implClazz = ","Class Or Interface Type Class ","Method Call Expr ","Simple Name getTypeImplementation ","Block Stmt ","Class Expr Collection.class ","Simple Name isAssignableFrom ","Class Or Interface Type Collection ","Variable Declaration Expr ","Name Expr compType ","Simple Name compType ","Name Expr compType ","Variable Declarator Type compType = ","Class Or Interface Type Type ","Class Expr Object.class ","Class Or Interface Type Object ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name length ","Block Stmt ","Field Access Expr ","Integer Literal Expr Note Zero  ","Simple Name length ","IntegerLiteralExpr","Assign Expr ASSIGN ","Array Access Expr 0 ","Integer Literal Expr Zero  ","Object Creation Expr IllegalArgumentException Optional.empty Optional.empty ","Class Or Interface Type IllegalArgumentException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr List.class ","Class Or Interface Type List ","Assign Expr ASSIGN ","Conditional Expr implClazz == null ? ArrayList.class : implClazz ","Binary Expr EQUALS ","Class Expr ArrayList.class ","Null Literal Expr ","Class Or Interface Type ArrayList ","Block Stmt ","Class Expr Set.class ","Class Or Interface Type Set ","Assign Expr ASSIGN ","Conditional Expr implClazz == null ? HashSet.class : implClazz ","Binary Expr EQUALS ","Class Expr HashSet.class ","Null Literal Expr ","Class Or Interface Type HashSet ","Method Call Expr ","Name Expr GenericsHelper ","Simple Name createParameterizedType ","Array Creation Expr Type Array Creation Level Not Empty Array Initializer Expr ","Null Literal Expr ","Class Or Interface Type Type ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Block Stmt ","Class Expr Map.class ","Simple Name isAssignableFrom ","Class Or Interface Type Map ","Variable Declaration Expr ","Name Expr keyType ","Simple Name keyType ","Name Expr keyType ","Name Expr keyType ","Name Expr keyType ","Name Expr keyType ","Variable Declarator Type keyType = ","Class Or Interface Type Type ","Class Expr String.class ","Class Or Interface Type String ","Variable Declaration Expr ","Name Expr valueType ","Simple Name valueType ","Name Expr valueType ","Variable Declarator Type valueType = ","Class Or Interface Type Type ","Class Expr Object.class ","Class Or Interface Type Object ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name length ","Block Stmt ","Field Access Expr ","Integer Literal Expr Note Zero  ","Simple Name length ","Assign Expr ASSIGN ","Array Access Expr 0 ","Integer Literal Expr Zero  ","Assign Expr ASSIGN ","Array Access Expr 1 ","Integer Literal Expr Note Zero  ","Object Creation Expr IllegalArgumentException Optional.empty Optional.empty ","Class Or Interface Type IllegalArgumentException ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Block Stmt ","Class Expr Map.class ","Class Or Interface Type Map ","Assign Expr ASSIGN ","Conditional Expr implClazz == null ? HashMap.class : implClazz ","Binary Expr EQUALS ","Class Expr HashMap.class ","Null Literal Expr ","Class Or Interface Type HashMap ","Block Stmt ","Class Expr Object.class ","Class Or Interface Type Object ","Assign Expr ASSIGN ","Class Expr String.class ","Class Or Interface Type String ","Method Call Expr ","Name Expr MapKeyDecoders ","Simple Name registerOrGetExisting ","Method Call Expr ","Name Expr GenericsHelper ","Simple Name createParameterizedType ","Array Creation Expr Type Array Creation Level Not Empty Array Initializer Expr ","Null Literal Expr ","Class Or Interface Type Type ","Array Creation Level Dimension Empty ","Array Initializer Expr ","Block Stmt ","Null Literal Expr ","Block Stmt ","Field Access Expr ","Integer Literal Expr Zero  ","Simple Name length ","Method Call Expr ","Name Expr GenericsHelper ","Simple Name createParameterizedType ","Null Literal Expr ","Void Type ","Simple Name addPlaceholderDecoderToSupportRecursiveStructure ","Parameter final String cacheKey ","Block Stmt ","Return Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Class Or Interface Type String ","Expression Stmt ","Method Call Expr ","Return Stmt ","Simple Name addNewDecoder ","Object Creation Expr Decoder Optional.empty Optional.empty ","Class Or Interface Type Decoder ","Method Declaration Throws ","Name Expr concatTag ","Class Or Interface Type Object ","Simple Name decode ","Parameter JsonIterator iter ","Throws","Class Or Interface Type IOException ","IOException","Block Stmt ","Name Expr iter ","Simple Name iter ","Class Or Interface Type JsonIterator ","Expression Stmt ","If Stmt ","Variable Declaration Expr ","Simple Name decoder ","Name Expr JsoniterSpi ","Name Expr decoder ","Name Expr decoder ","Name Expr JsoniterSpi ","Name Expr decoder ","Name Expr decoder ","Name Expr decoder ","Variable Declarator Decoder decoder = ","Class Or Interface Type Decoder ","Method Call Expr ","Simple Name getDecoder ","Binary Expr EQUALS ","Block Stmt ","This Expr ","ThisExpr","For Stmt ","If Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Unary Expr ++ ","Block Stmt ","Name Expr i ","Simple Name i ","Simple Name e ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","LESS","Integer Literal Expr Note Zero  ","POSTFIX_INCREMENT","Expression Stmt ","If Stmt ","Assign Expr ASSIGN ","Method Call Expr ","Simple Name getDecoder ","Binary Expr EQUALS ","Block Stmt ","Block Stmt ","This Expr ","Try Stmt ","Block Stmt ","Catch Clause ","Expression Stmt ","Method Call Expr ","Name Expr Thread ","Simple Name sleep ","Integer Literal Expr Note Zero  ","Parameter InterruptedException e ","Block Stmt ","Class Or Interface Type InterruptedException ","Simple Name e ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","Name Expr e ","Break Stmt ","break;","Binary Expr EQUALS ","Block Stmt ","This Expr ","Throw Stmt ","Object Creation Expr JsonException Optional.empty Optional.empty ","Class Or Interface Type JsonException ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name decode ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Expression Stmt ","If Stmt ","Method Call Expr ","Return Stmt ","Block Stmt ","Return Stmt ","Class Or Interface Type String ","Simple Name genSource ","Parameter DecodingMode mode ","Parameter ClassInfo classInfo ","Block Stmt ","Name Expr mode ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Name Expr classInfo ","Class Or Interface Type DecodingMode ","Class Or Interface Type ClassInfo ","Block Stmt ","Field Access Expr ","Simple Name isArray ","Simple Name clazz ","Method Call Expr ","Name Expr CodegenImplArray ","Simple Name genArray ","Block Stmt ","Class Expr Map.class ","Simple Name isAssignableFrom ","Field Access Expr ","Class Or Interface Type Map ","Simple Name clazz ","Method Call Expr ","Name Expr CodegenImplMap ","Simple Name genMap ","Block Stmt ","Class Expr Collection.class ","Simple Name isAssignableFrom ","Field Access Expr ","Class Or Interface Type Collection ","Simple Name clazz ","Method Call Expr ","Name Expr CodegenImplArray ","Simple Name genCollection ","Block Stmt ","Field Access Expr ","Simple Name isEnum ","Simple Name clazz ","Method Call Expr ","Name Expr CodegenImplEnum ","Simple Name genEnum ","Variable Declaration Expr ","Simple Name desc ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Variable Declarator ClassDescriptor desc = ","Class Or Interface Type ClassDescriptor ","Method Call Expr ","Name Expr ClassDescriptor ","Simple Name getDecodingClassDescriptor ","Boolean Literal Expr false ","false","Block Stmt ","Simple Name shouldUseStrictMode ","Simple Name mode ","Simple Name desc ","Method Declaration ","Method Call Expr ","Name Expr CodegenImplObjectStrict ","Simple Name genObjectUsingStrict ","Method Call Expr ","Name Expr CodegenImplObjectHash ","Simple Name genObjectUsingHash ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Try Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name staticGen ","Parameter String cacheKey ","Parameter String source ","Class Or Interface Type IOException ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr source ","Class Or Interface Type String ","Class Or Interface Type String ","Method Call Expr ","Simple Name createDir ","Simple Name cacheKey ","Method Declaration ","Variable Declaration Expr ","Simple Name fileName ","Name Expr fileName ","Variable Declarator String fileName = ","Class Or Interface Type String ","Binary Expr PLUS ","Method Call Expr ","String Literal Expr Not Empty  ","Simple Name replace ","Char Literal Expr '.' ","Char Literal Expr '/' ","'.'","'/'","Variable Declaration Expr ","Simple Name fileOutputStream ","Name Expr isDoingStaticCodegen ","Name Expr fileOutputStream ","Name Expr fileOutputStream ","Variable Declarator FileOutputStream fileOutputStream = ","Class Or Interface Type FileOutputStream ","Object Creation Expr FileOutputStream Optional.empty Optional.empty ","Class Or Interface Type FileOutputStream ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Field Access Expr ","Simple Name outputDir ","Block Stmt ","Block Stmt ","Variable Declaration Expr ","Simple Name writer ","Name Expr writer ","Name Expr writer ","Variable Declarator OutputStreamWriter writer = ","Class Or Interface Type OutputStreamWriter ","Object Creation Expr OutputStreamWriter Optional.empty Optional.empty ","Class Or Interface Type OutputStreamWriter ","Block Stmt ","Block Stmt ","Method Call Expr ","Simple Name staticGen ","Simple Name cacheKey ","Simple Name writer ","Simple Name source ","Method Declaration Throws ","Method Call Expr ","Simple Name close ","Method Call Expr ","Simple Name close ","If Stmt ","Binary Expr EQUALS ","Return Stmt ","Expression Stmt ","For Each Stmt ","Name Expr allBindings ","Variable Declaration Expr ","If Stmt ","Binary Expr OR ","Return Stmt ","If Stmt ","Field Access Expr ","Return Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Expression Stmt ","For Each Stmt ","Name Expr allBindings ","Variable Declaration Expr ","If Stmt ","Binary Expr GREATER ","Expression Stmt ","If Stmt ","Unary Expr ! ","Return Stmt ","Return Stmt ","Primitive Type boolean ","Simple Name shouldUseStrictMode ","Parameter DecodingMode mode ","Parameter ClassDescriptor desc ","Block Stmt ","Name Expr mode ","Name Expr desc ","Name Expr desc ","Name Expr desc ","Class Or Interface Type DecodingMode ","Class Or Interface Type ClassDescriptor ","Block Stmt ","Field Access Expr ","Return Stmt ","Simple Name DYNAMIC_MODE_AND_MATCH_FIELD_STRICTLY ","Boolean Literal Expr true ","true","Variable Declaration Expr ","Simple Name allBindings ","Variable Declarator List<Binding> allBindings = ","Class Or Interface Type List ","Method Call Expr ","Simple Name allDecoderBindings ","Block Stmt ","Name Expr binding ","Simple Name binding ","Name Expr binding ","Name Expr binding ","Class Or Interface Type Binding ","Block Stmt ","Binary Expr OR ","OR","Field Access Expr ","Field Access Expr ","Field Access Expr ","Simple Name asMissingWhenNotPresent ","Simple Name asExtraWhenPresent ","Simple Name shouldSkip ","Boolean Literal Expr true ","Block Stmt ","Simple Name asExtraForUnknownProperties ","Boolean Literal Expr true ","Block Stmt ","Method Call Expr ","LOGICAL_COMPLEMENT","Field Access Expr ","Simple Name isEmpty ","Simple Name keyValueTypeWrappers ","Boolean Literal Expr true ","Variable Declaration Expr ","Name Expr hasBinding ","Simple Name hasBinding ","Name Expr hasBinding ","Variable Declarator boolean hasBinding = ","Primitive Type boolean ","Boolean Literal Expr false ","Block Stmt ","Name Expr allBinding ","Simple Name allBinding ","Class Or Interface Type Binding ","Block Stmt ","Field Access Expr ","GREATER","Integer Literal Expr Zero  ","Field Access Expr ","Simple Name length ","Simple Name fromNames ","Assign Expr ASSIGN ","Boolean Literal Expr true ","Block Stmt ","Boolean Literal Expr true ","Boolean Literal Expr false ","Expression Stmt ","Expression Stmt ","For Stmt ","Variable Declaration Expr ","Binary Expr LESS ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Unary Expr ++ ","Void Type ","Simple Name createDir ","Parameter String cacheKey ","Block Stmt ","Name Expr cacheKey ","Class Or Interface Type String ","Variable Declaration Expr ","Simple Name parts ","Name Expr parts ","Name Expr parts ","Variable Declarator String[] parts = ","Name Expr pendings ","Method Call Expr ","Simple Name split ","String Literal Expr Not Empty  ","Variable Declaration Expr ","Simple Name parent ","Name Expr isDoingStaticCodegen ","Name Expr parent ","Name Expr parent ","Name Expr current ","Variable Declarator File parent = ","Class Or Interface Type File ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Field Access Expr ","Simple Name outputDir ","Block Stmt ","Name Expr i ","Simple Name i ","Name Expr i ","Name Expr i ","Variable Declarator int i = ","Primitive Type int ","Integer Literal Expr Zero  ","Binary Expr MINUS ","Field Access Expr ","MINUS","Integer Literal Expr Note Zero  ","Simple Name length ","Variable Declaration Expr ","Name Expr next ","Name Expr part ","Variable Declarator String part = ","Class Or Interface Type String ","Array Access Expr i ","Variable Declaration Expr ","Simple Name current ","Name Expr current ","Variable Declarator File current = ","Void Type ","Object Creation Expr File Optional.empty Optional.empty ","Class Or Interface Type File ","Method Call Expr ","Simple Name mkdir ","Assign Expr ASSIGN ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Expression Stmt ","Void Type ","Simple Name staticGen ","Parameter String cacheKey ","Parameter OutputStreamWriter writer ","Parameter String source ","Class Or Interface Type IOException ","Block Stmt ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr cacheKey ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr writer ","Name Expr source ","Class Or Interface Type String ","Class Or Interface Type OutputStreamWriter ","Class Or Interface Type String ","Variable Declaration Expr ","Simple Name className ","Name Expr className ","Variable Declarator String className = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Binary Expr PLUS ","Method Call Expr ","Integer Literal Expr Note Zero  ","Simple Name lastIndexOf ","Char Literal Expr '.' ","Variable Declaration Expr ","Simple Name packageName ","Name Expr packageName ","Variable Declarator String packageName = ","Class Or Interface Type String ","Method Call Expr ","Simple Name substring ","Integer Literal Expr Zero  ","Method Call Expr ","Simple Name lastIndexOf ","Char Literal Expr '.' ","Method Call Expr ","Simple Name write ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Binary Expr PLUS ","Binary Expr PLUS ","String Literal Expr Not Empty  ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","Method Call Expr ","Simple Name write ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","String Literal Expr Not Empty  ","Method Call Expr ","Simple Name write ","String Literal Expr Not Empty  "]}
